{"id":"7b3b064ac1776a174898e50dd8ceadf6","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        if (signer.code.length == 0) {\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\n        } else {\n            return isValidERC1271SignatureNow(signer, hash, signature);\n        }\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC-1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/N2D-ERC6551-Account.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\nimport \"../imports/IERC6551.sol\";\r\nimport \"../imports/ERC6551Bytecode.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ncontract ERC6551Account is\r\n    IERC165,\r\n    IERC1271,\r\n    IERC6551Account,\r\n    IERC721Receiver,\r\n    IERC1155Receiver,\r\n    ReentrancyGuard\r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Add state variables\r\n    uint256 private _nonce;\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor() {\r\n        _supportedInterfaces[type(IERC165).interfaceId] = true;\r\n        _supportedInterfaces[type(IERC6551Account).interfaceId] = true;\r\n    }\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable nonReentrant returns (bytes memory result) {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n\r\n        _nonce++;\r\n\r\n        bool success;\r\n        (success, result) = to.call{value: value, gas: gasleft() - 2000}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function send(\r\n        address payable to,\r\n        uint256 amount\r\n    ) external payable nonReentrant {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n        require(address(this).balance >= amount, \"Insufficient funds\");\r\n\r\n        _nonce++;\r\n        to.transfer(amount);\r\n    }\r\n\r\n    function sendCustom(\r\n        address to,\r\n        uint256 amount,\r\n        IERC20 erc20contract\r\n    ) external nonReentrant {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n\r\n        uint256 balance = erc20contract.balanceOf(address(this));\r\n        require(balance >= amount, \"Insufficient funds\");\r\n\r\n        _nonce++;\r\n        erc20contract.transfer(to, amount);\r\n    }\r\n\r\n    function nftInfo()\r\n        external\r\n        view\r\n        returns (uint256 chainId, address tokenContract, uint256 tokenId)\r\n    {\r\n        uint256 length = address(this).code.length;\r\n        return\r\n            abi.decode(\r\n                Bytecode.codeAt(address(this), length - 0x60, length),\r\n                (uint256, address, uint256)\r\n            );\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\r\n            .nftInfo();\r\n        if (chainId != block.chainid) return address(0);\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external pure override returns (bytes4) {\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external view override returns (bytes4) {\r\n        return IERC1155Receiver.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external view override returns (bytes4) {\r\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\r\n    }\r\n\r\n    function isValidSignature(\r\n        bytes32 hash,\r\n        bytes memory signature\r\n    ) external view returns (bytes4 magicValue) {\r\n        bool isValid = SignatureChecker.isValidSignatureNow(\r\n            owner(),\r\n            hash,\r\n            signature\r\n        );\r\n\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n\r\n        return bytes4(0);\r\n    }\r\n\r\n    function nonce() external view override returns (uint256) {\r\n        return _nonce;\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"},"imports/ERC6551Bytecode.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\nlibrary Bytecode {\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\n\n  /**\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\n    @param _code The returning value of the resulting `creationCode`\n    @return creationCode (constructor) for new contract\n  */\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\n    /*\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\n      0x01    0x80         0x80        DUP1                size size\n      0x02    0x60         0x600e      PUSH1 14            14 size size\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\n      0x04    0x39         0x39        CODECOPY            size\n      0x05    0x60         0x6000      PUSH1 00            0 size\n      0x06    0xf3         0xf3        RETURN\n      <CODE>\n    */\n\n    return abi.encodePacked(\n      hex\"63\",\n      uint32(_code.length),\n      hex\"80_60_0E_60_00_39_60_00_F3\",\n      _code\n    );\n  }\n\n  /**\n    @notice Returns the size of the code on a given address\n    @param _addr Address that may or may not contain code\n    @return size of the code on the given `_addr`\n  */\n  function codeSize(address _addr) internal view returns (uint256 size) {\n    assembly { size := extcodesize(_addr) }\n  }\n\n  /**\n    @notice Returns the code of a given address\n    @dev It will fail if `_end < _start`\n    @param _addr Address that may or may not contain code\n    @param _start number of bytes of code to skip on read\n    @param _end index before which to end extraction\n    @return oCode read from `_addr` deployed bytecode\n\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\n  */\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\n    uint256 csize = codeSize(_addr);\n    if (csize == 0) return bytes(\"\");\n\n    if (_start > csize) return bytes(\"\");\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \n\n    unchecked {\n      uint256 reqSize = _end - _start;\n      uint256 maxSize = csize - _start;\n\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\n\n      assembly {\n        // allocate output byte array - this could also be done without assembly\n        // by using o_code = new bytes(size)\n        oCode := mload(0x40)\n        // new \"memory end\" including padding\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n        // store length in memory\n        mstore(oCode, size)\n        // actually retrieve the code, this needs assembly\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\n      }\n    }\n  }\n}"},"imports/IERC6551.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IERC6551Registry {\n\n    event AccountCreated(\n        address account,\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    );\n\n    function createAccount(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 seed\n    ) external returns (address);\n\n    function account(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    ) external view returns (address);\n}\n\ninterface IERC6551AccountProxy {\n    function implementation() external view returns (address);\n}\n\ninterface IERC6551Account {\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\n\n    receive() external payable;\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    function nftInfo()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    function owner() external view returns (address);\n\n    function nonce() external view returns (uint256);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:109:9:\n    |\n109 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3550,"file":"contracts/N2D-ERC6551-Account.sol","start":3534},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:110:9:\n    |\n110 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3573,"file":"contracts/N2D-ERC6551-Account.sol","start":3561},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:111:9:\n    |\n111 |         uint256 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3599,"file":"contracts/N2D-ERC6551-Account.sol","start":3584},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:112:9:\n    |\n112 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3629,"file":"contracts/N2D-ERC6551-Account.sol","start":3610},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:118:9:\n    |\n118 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3805,"file":"contracts/N2D-ERC6551-Account.sol","start":3789},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:119:9:\n    |\n119 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3828,"file":"contracts/N2D-ERC6551-Account.sol","start":3816},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:120:9:\n    |\n120 |         uint256 id,\n    |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3849,"file":"contracts/N2D-ERC6551-Account.sol","start":3839},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:121:9:\n    |\n121 |         uint256 value,\n    |         ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3873,"file":"contracts/N2D-ERC6551-Account.sol","start":3860},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:122:9:\n    |\n122 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3903,"file":"contracts/N2D-ERC6551-Account.sol","start":3884},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:128:9:\n    |\n128 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4086,"file":"contracts/N2D-ERC6551-Account.sol","start":4070},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:129:9:\n    |\n129 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4109,"file":"contracts/N2D-ERC6551-Account.sol","start":4097},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:130:9:\n    |\n130 |         uint256[] calldata ids,\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4142,"file":"contracts/N2D-ERC6551-Account.sol","start":4120},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:131:9:\n    |\n131 |         uint256[] calldata values,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4178,"file":"contracts/N2D-ERC6551-Account.sol","start":4153},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/N2D-ERC6551-Account.sol:132:9:\n    |\n132 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4208,"file":"contracts/N2D-ERC6551-Account.sol","start":4189},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/N2D-ERC6551-Account.sol:117:5:\n    |\n117 |     function onERC1155Received(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":4020,"file":"contracts/N2D-ERC6551-Account.sol","start":3752},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/N2D-ERC6551-Account.sol:127:5:\n    |\n127 |     function onERC1155BatchReceived(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":4330,"file":"contracts/N2D-ERC6551-Account.sol","start":4028},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[13]},"id":14,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"133:160:0","text":" @dev Interface of the ERC-1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IERC1271","nameLocation":"304:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"319:220:0","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"553:16:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"hash","nameLocation":"578:4:0","nodeType":"VariableDeclaration","scope":12,"src":"570:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"570:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"signature","nameLocation":"597:9:0","nodeType":"VariableDeclaration","scope":12,"src":"584:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"584:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"569:38:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"magicValue","nameLocation":"638:10:0","nodeType":"VariableDeclaration","scope":12,"src":"631:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9,"name":"bytes4","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"630:19:0"},"scope":13,"src":"544:106:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":14,"src":"294:358:0","usedErrors":[],"usedEvents":[]}],"src":"107:546:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[95],"IERC165":[1710],"IERC20":[346]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":17,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":104,"src":"133:36:1","symbolAliases":[{"foreign":{"id":16,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":19,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":100,"src":"170:38:1","symbolAliases":[{"foreign":{"id":18,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":21,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"590:6:1"},"id":22,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":23,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"598:7:1"},"id":24,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":95,"linearizedBaseContracts":[95,1710,346],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":34,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":34,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":95,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":46,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":46,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":46,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":95,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":58,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":58,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":58,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":95,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":72,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":72,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":72,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":95,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":82,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":82,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":82,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":95,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":94,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":94,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":94,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":95,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":96,"src":"568:3885:1","usedErrors":[],"usedEvents":[280,289]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1710]},"id":100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":99,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":100,"sourceUnit":1711,"src":"132:59:2","symbolAliases":[{"foreign":{"id":98,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[346]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":101,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":347,"src":"131:49:3","symbolAliases":[{"foreign":{"id":102,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[226],"IERC165":[1710]},"id":227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":227,"sourceUnit":1711,"src":"136:62:4","symbolAliases":[{"foreign":{"id":106,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":109,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"359:7:4"},"id":110,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":226,"linearizedBaseContracts":[226,1710],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":123,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":123,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":123,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":123,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":123,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":123,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":138,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":138,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":138,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":138,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":138,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":132,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":136,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":138,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":135,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":147,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":147,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":147,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":147,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":154,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":154,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":149,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":152,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":154,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":164,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":164,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":164,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":226,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":177,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":167,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":177,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":170,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":174,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":226,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":185,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":185,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":185,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":181,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":226,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":195,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":195,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":192,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":226,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2680:910:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:4","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"from","nameLocation":"3629:4:4","nodeType":"VariableDeclaration","scope":209,"src":"3621:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"to","nameLocation":"3643:2:4","nodeType":"VariableDeclaration","scope":209,"src":"3635:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"id","nameLocation":"3655:2:4","nodeType":"VariableDeclaration","scope":209,"src":"3647:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"value","nameLocation":"3667:5:4","nodeType":"VariableDeclaration","scope":209,"src":"3659:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"data","nameLocation":"3689:4:4","nodeType":"VariableDeclaration","scope":209,"src":"3674:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":205,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:4"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3703:0:4"},"scope":226,"src":"3595:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3710:814:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:4","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"from","nameLocation":"4577:4:4","nodeType":"VariableDeclaration","scope":225,"src":"4569:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"4599:2:4","nodeType":"VariableDeclaration","scope":225,"src":"4591:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"ids","nameLocation":"4630:3:4","nodeType":"VariableDeclaration","scope":225,"src":"4611:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ArrayTypeName","src":"4611:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"values","nameLocation":"4662:6:4","nodeType":"VariableDeclaration","scope":225,"src":"4643:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":219,"nodeType":"ArrayTypeName","src":"4643:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"data","nameLocation":"4693:4:4","nodeType":"VariableDeclaration","scope":225,"src":"4678:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:4"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"4712:0:4"},"scope":226,"src":"4529:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":227,"src":"337:4378:4","usedErrors":[],"usedEvents":[123,138,147,154]}],"src":"110:4606:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[268],"IERC165":[1710]},"id":269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":228,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":269,"sourceUnit":1711,"src":"144:62:5","symbolAliases":[{"foreign":{"id":229,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":232,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"357:7:5"},"id":233,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":268,"linearizedBaseContracts":[268,1710],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":249,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":249,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":249,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":249,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":249,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":249,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":246,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":268,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":267,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":267,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":267,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":256,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":267,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":259,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":267,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":261,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":264,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":268,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":269,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[346]},"id":347,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":346,"linearizedBaseContracts":[346],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":280,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":280,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":280,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":280,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":289,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":289,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":289,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":289,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":295,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":346,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":303,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":303,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":303,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":346,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":313,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":313,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":346,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":323,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":323,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":346,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":333,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":333,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":333,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":333,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":330,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":346,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":345,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":345,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":345,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":346,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":347,"src":"204:2575:6","usedErrors":[],"usedEvents":[280,289]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1151],"IERC1363":[95],"IERC20":[346],"SafeERC20":[757]},"id":758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":348,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":347,"src":"141:37:7","symbolAliases":[{"foreign":{"id":349,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"149:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":96,"src":"179:58:7","symbolAliases":[{"foreign":{"id":351,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"187:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":1152,"src":"238:51:7","symbolAliases":[{"foreign":{"id":353,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"246:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"291:458:7","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":757,"linearizedBaseContracts":[757],"name":"SafeERC20","nameLocation":"758:9:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"774:65:7","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":360,"name":"SafeERC20FailedOperation","nameLocation":"850:24:7","nodeType":"ErrorDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"token","nameLocation":"883:5:7","nodeType":"VariableDeclaration","scope":360,"src":"875:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:7"},"src":"844:46:7"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"896:71:7","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":369,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:7","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"spender","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":369,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:7","nodeType":"VariableDeclaration","scope":369,"src":"1028:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:7","nodeType":"VariableDeclaration","scope":369,"src":"1054:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:7"},"src":"972:109:7"},{"body":{"id":392,"nodeType":"Block","src":"1343:88:7","statements":[{"expression":{"arguments":[{"id":381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1373:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1395:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":313,"src":"1395:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1412:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1416:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":380,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1353:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"1353:71:7"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1087:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":393,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:7","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"token","nameLocation":"1300:5:7","nodeType":"VariableDeclaration","scope":393,"src":"1293:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":372,"nodeType":"UserDefinedTypeName","pathNode":{"id":371,"name":"IERC20","nameLocations":["1293:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"1293:6:7"},"referencedDeclaration":346,"src":"1293:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"to","nameLocation":"1315:2:7","nodeType":"VariableDeclaration","scope":393,"src":"1307:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"value","nameLocation":"1327:5:7","nodeType":"VariableDeclaration","scope":393,"src":"1319:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:7"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1343:0:7"},"scope":757,"src":"1271:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1760:98:7","statements":[{"expression":{"arguments":[{"id":407,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1790:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1812:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":345,"src":"1812:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1833:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1839:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"1843:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":408,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":406,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1770:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"1770:81:7"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"1437:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:7","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"token","nameLocation":"1703:5:7","nodeType":"VariableDeclaration","scope":420,"src":"1696:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"IERC20","nameLocations":["1696:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"1696:6:7"},"referencedDeclaration":346,"src":"1696:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"from","nameLocation":"1718:4:7","nodeType":"VariableDeclaration","scope":420,"src":"1710:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"to","nameLocation":"1732:2:7","nodeType":"VariableDeclaration","scope":420,"src":"1724:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"value","nameLocation":"1744:5:7","nodeType":"VariableDeclaration","scope":420,"src":"1736:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:7"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"1760:0:7"},"scope":757,"src":"1670:188:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"2600:139:7","statements":[{"assignments":[432],"declarations":[{"constant":false,"id":432,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:7","nodeType":"VariableDeclaration","scope":450,"src":"2610:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":441,"initialValue":{"arguments":[{"arguments":[{"id":437,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$757","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$757","typeString":"library SafeERC20"}],"id":436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:7","typeDescriptions":{}}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2664:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2633:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":323,"src":"2633:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:7"},{"expression":{"arguments":[{"id":443,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2695:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"id":444,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2711:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2726:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2682:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"ExpressionStatement","src":"2682:50:7"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1864:645:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:7","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"token","nameLocation":"2552:5:7","nodeType":"VariableDeclaration","scope":451,"src":"2545:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":423,"nodeType":"UserDefinedTypeName","pathNode":{"id":422,"name":"IERC20","nameLocations":["2545:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"2545:6:7"},"referencedDeclaration":346,"src":"2545:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"spender","nameLocation":"2567:7:7","nodeType":"VariableDeclaration","scope":451,"src":"2559:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"value","nameLocation":"2584:5:7","nodeType":"VariableDeclaration","scope":451,"src":"2576:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:7"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"2600:0:7"},"scope":757,"src":"2514:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":493,"nodeType":"Block","src":"3505:370:7","statements":[{"id":492,"nodeType":"UncheckedBlock","src":"3515:354:7","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:7","nodeType":"VariableDeclaration","scope":492,"src":"3539:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":472,"initialValue":{"arguments":[{"arguments":[{"id":468,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$757","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$757","typeString":"library SafeERC20"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:7","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":464,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3566:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":323,"src":"3566:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":473,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3623:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":474,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3642:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"3619:160:7","trueBody":{"id":482,"nodeType":"Block","src":"3661:118:7","statements":[{"errorCall":{"arguments":[{"id":477,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3719:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3728:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":479,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3746:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"3686:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":481,"nodeType":"RevertStatement","src":"3679:85:7"}]}},{"expression":{"arguments":[{"id":485,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3805:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"id":486,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3812:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3821:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":488,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3840:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3792:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"3792:66:7"}]}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"2745:657:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":494,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:7","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"token","nameLocation":"3445:5:7","nodeType":"VariableDeclaration","scope":494,"src":"3438:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":454,"nodeType":"UserDefinedTypeName","pathNode":{"id":453,"name":"IERC20","nameLocations":["3438:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"3438:6:7"},"referencedDeclaration":346,"src":"3438:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"spender","nameLocation":"3460:7:7","nodeType":"VariableDeclaration","scope":494,"src":"3452:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:7","nodeType":"VariableDeclaration","scope":494,"src":"3469:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:7"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"3505:0:7"},"scope":757,"src":"3407:468:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"4529:303:7","statements":[{"assignments":[506],"declarations":[{"constant":false,"id":506,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:7","nodeType":"VariableDeclaration","scope":540,"src":"4539:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":505,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":515,"initialValue":{"arguments":[{"expression":{"id":509,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4582:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":333,"src":"4582:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":511,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4598:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"4607:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":507,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:7"},{"condition":{"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:7","subExpression":{"arguments":[{"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4654:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"id":518,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4661:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":516,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"4630:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"nodeType":"IfStatement","src":"4625:201:7","trueBody":{"id":538,"nodeType":"Block","src":"4676:150:7","statements":[{"expression":{"arguments":[{"id":522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4710:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":525,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4732:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":333,"src":"4732:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4748:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":523,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":521,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4690:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"4690:71:7"},{"expression":{"arguments":[{"id":534,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4795:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},{"id":535,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4802:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":533,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4775:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"4775:40:7"}]}}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"3881:566:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:7","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"token","nameLocation":"4481:5:7","nodeType":"VariableDeclaration","scope":541,"src":"4474:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":497,"nodeType":"UserDefinedTypeName","pathNode":{"id":496,"name":"IERC20","nameLocations":["4474:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"4474:6:7"},"referencedDeclaration":346,"src":"4474:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"spender","nameLocation":"4496:7:7","nodeType":"VariableDeclaration","scope":541,"src":"4488:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"value","nameLocation":"4513:5:7","nodeType":"VariableDeclaration","scope":541,"src":"4505:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:7"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"4529:0:7"},"scope":757,"src":"4452:380:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"5279:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":554,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5293:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:7","memberName":"code","nodeType":"MemberAccess","src":"5293:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:7","memberName":"length","nodeType":"MemberAccess","src":"5293:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:7","subExpression":{"arguments":[{"id":568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5402:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5406:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":570,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"5413:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":566,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5380:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:7","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":46,"src":"5380:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":581,"nodeType":"IfStatement","src":"5375:117:7","trueBody":{"id":580,"nodeType":"Block","src":"5420:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5474:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:7","typeDescriptions":{}}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":573,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5441:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":579,"nodeType":"RevertStatement","src":"5434:47:7"}]}},"id":582,"nodeType":"IfStatement","src":"5289:203:7","trueBody":{"id":565,"nodeType":"Block","src":"5314:55:7","statements":[{"expression":{"arguments":[{"id":560,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5341:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":561,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5348:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5352:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5328:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"5328:30:7"}]}}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"4838:333:7","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:7","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"token","nameLocation":"5217:5:7","nodeType":"VariableDeclaration","scope":584,"src":"5208:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"IERC1363","nameLocations":["5208:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5208:8:7"},"referencedDeclaration":95,"src":"5208:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"to","nameLocation":"5232:2:7","nodeType":"VariableDeclaration","scope":584,"src":"5224:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"5244:5:7","nodeType":"VariableDeclaration","scope":584,"src":"5236:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"data","nameLocation":"5264:4:7","nodeType":"VariableDeclaration","scope":584,"src":"5251:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":550,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:7"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"5279:0:7"},"scope":757,"src":"5176:322:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6017:239:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"6031:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:7","memberName":"code","nodeType":"MemberAccess","src":"6031:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:7","memberName":"length","nodeType":"MemberAccess","src":"6031:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:7","subExpression":{"arguments":[{"id":614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"6154:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"6160:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"6164:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6171:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":612,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6128:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:7","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":72,"src":"6128:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"6123:127:7","trueBody":{"id":627,"nodeType":"Block","src":"6178:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":623,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6232:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:7","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6199:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":626,"nodeType":"RevertStatement","src":"6192:47:7"}]}},"id":629,"nodeType":"IfStatement","src":"6027:223:7","trueBody":{"id":611,"nodeType":"Block","src":"6052:65:7","statements":[{"expression":{"arguments":[{"id":605,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6083:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":606,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"6090:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"6096:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"6100:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":604,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6066:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"6066:40:7"}]}}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5504:341:7","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:7","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"token","nameLocation":"5904:5:7","nodeType":"VariableDeclaration","scope":631,"src":"5895:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":587,"nodeType":"UserDefinedTypeName","pathNode":{"id":586,"name":"IERC1363","nameLocations":["5895:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5895:8:7"},"referencedDeclaration":95,"src":"5895:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"from","nameLocation":"5927:4:7","nodeType":"VariableDeclaration","scope":631,"src":"5919:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"to","nameLocation":"5949:2:7","nodeType":"VariableDeclaration","scope":631,"src":"5941:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"value","nameLocation":"5969:5:7","nodeType":"VariableDeclaration","scope":631,"src":"5961:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"data","nameLocation":"5997:4:7","nodeType":"VariableDeclaration","scope":631,"src":"5984:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:7"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"6017:0:7"},"scope":757,"src":"5850:406:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":673,"nodeType":"Block","src":"7023:218:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"7037:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:7","memberName":"code","nodeType":"MemberAccess","src":"7037:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:7","memberName":"length","nodeType":"MemberAccess","src":"7037:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:7","subExpression":{"arguments":[{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"7145:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"7149:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"7156:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":656,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"7124:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:7","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":94,"src":"7124:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"nodeType":"IfStatement","src":"7119:116:7","trueBody":{"id":670,"nodeType":"Block","src":"7163:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"7217:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:7","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":663,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"7184:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":669,"nodeType":"RevertStatement","src":"7177:47:7"}]}},"id":672,"nodeType":"IfStatement","src":"7033:202:7","trueBody":{"id":655,"nodeType":"Block","src":"7058:55:7","statements":[{"expression":{"arguments":[{"id":650,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"7085:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":651,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"7092:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"7096:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7072:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$346_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"7072:30:7"}]}}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"6262:654:7","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":674,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:7","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"token","nameLocation":"6961:5:7","nodeType":"VariableDeclaration","scope":674,"src":"6952:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":634,"nodeType":"UserDefinedTypeName","pathNode":{"id":633,"name":"IERC1363","nameLocations":["6952:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"6952:8:7"},"referencedDeclaration":95,"src":"6952:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"to","nameLocation":"6976:2:7","nodeType":"VariableDeclaration","scope":674,"src":"6968:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"value","nameLocation":"6988:5:7","nodeType":"VariableDeclaration","scope":674,"src":"6980:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"data","nameLocation":"7008:4:7","nodeType":"VariableDeclaration","scope":674,"src":"6995:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":640,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:7"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"7023:0:7"},"scope":757,"src":"6921:320:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"7808:650:7","statements":[{"assignments":[684],"declarations":[{"constant":false,"id":684,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:7","nodeType":"VariableDeclaration","scope":714,"src":"7818:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":685,"nodeType":"VariableDeclarationStatement","src":"7818:18:7"},{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:7","nodeType":"VariableDeclaration","scope":714,"src":"7846:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":688,"nodeType":"VariableDeclarationStatement","src":"7846:19:7"},{"AST":{"nativeSrc":"7900:396:7","nodeType":"YulBlock","src":"7900:396:7","statements":[{"nativeSrc":"7914:75:7","nodeType":"YulVariableDeclaration","src":"7914:75:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:7","nodeType":"YulIdentifier","src":"7934:3:7"},"nativeSrc":"7934:5:7","nodeType":"YulFunctionCall","src":"7934:5:7"},{"name":"token","nativeSrc":"7941:5:7","nodeType":"YulIdentifier","src":"7941:5:7"},{"kind":"number","nativeSrc":"7948:1:7","nodeType":"YulLiteral","src":"7948:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:7","nodeType":"YulIdentifier","src":"7955:4:7"},{"kind":"number","nativeSrc":"7961:4:7","nodeType":"YulLiteral","src":"7961:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:7","nodeType":"YulIdentifier","src":"7951:3:7"},"nativeSrc":"7951:15:7","nodeType":"YulFunctionCall","src":"7951:15:7"},{"arguments":[{"name":"data","nativeSrc":"7974:4:7","nodeType":"YulIdentifier","src":"7974:4:7"}],"functionName":{"name":"mload","nativeSrc":"7968:5:7","nodeType":"YulIdentifier","src":"7968:5:7"},"nativeSrc":"7968:11:7","nodeType":"YulFunctionCall","src":"7968:11:7"},{"kind":"number","nativeSrc":"7981:1:7","nodeType":"YulLiteral","src":"7981:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:7","nodeType":"YulLiteral","src":"7984:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:7","nodeType":"YulIdentifier","src":"7929:4:7"},"nativeSrc":"7929:60:7","nodeType":"YulFunctionCall","src":"7929:60:7"},"variables":[{"name":"success","nativeSrc":"7918:7:7","nodeType":"YulTypedName","src":"7918:7:7","type":""}]},{"body":{"nativeSrc":"8050:157:7","nodeType":"YulBlock","src":"8050:157:7","statements":[{"nativeSrc":"8068:22:7","nodeType":"YulVariableDeclaration","src":"8068:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:7","nodeType":"YulLiteral","src":"8085:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:7","nodeType":"YulIdentifier","src":"8079:5:7"},"nativeSrc":"8079:11:7","nodeType":"YulFunctionCall","src":"8079:11:7"},"variables":[{"name":"ptr","nativeSrc":"8072:3:7","nodeType":"YulTypedName","src":"8072:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:7","nodeType":"YulIdentifier","src":"8122:3:7"},{"kind":"number","nativeSrc":"8127:1:7","nodeType":"YulLiteral","src":"8127:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:7","nodeType":"YulIdentifier","src":"8130:14:7"},"nativeSrc":"8130:16:7","nodeType":"YulFunctionCall","src":"8130:16:7"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:7","nodeType":"YulIdentifier","src":"8107:14:7"},"nativeSrc":"8107:40:7","nodeType":"YulFunctionCall","src":"8107:40:7"},"nativeSrc":"8107:40:7","nodeType":"YulExpressionStatement","src":"8107:40:7"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:7","nodeType":"YulIdentifier","src":"8171:3:7"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:7","nodeType":"YulIdentifier","src":"8176:14:7"},"nativeSrc":"8176:16:7","nodeType":"YulFunctionCall","src":"8176:16:7"}],"functionName":{"name":"revert","nativeSrc":"8164:6:7","nodeType":"YulIdentifier","src":"8164:6:7"},"nativeSrc":"8164:29:7","nodeType":"YulFunctionCall","src":"8164:29:7"},"nativeSrc":"8164:29:7","nodeType":"YulExpressionStatement","src":"8164:29:7"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:7","nodeType":"YulIdentifier","src":"8041:7:7"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:7","nodeType":"YulIdentifier","src":"8034:6:7"},"nativeSrc":"8034:15:7","nodeType":"YulFunctionCall","src":"8034:15:7"},"nativeSrc":"8031:176:7","nodeType":"YulIf","src":"8031:176:7"},{"nativeSrc":"8220:30:7","nodeType":"YulAssignment","src":"8220:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:7","nodeType":"YulIdentifier","src":"8234:14:7"},"nativeSrc":"8234:16:7","nodeType":"YulFunctionCall","src":"8234:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:7","nodeType":"YulIdentifier","src":"8220:10:7"}]},{"nativeSrc":"8263:23:7","nodeType":"YulAssignment","src":"8263:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:7","nodeType":"YulLiteral","src":"8284:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:7","nodeType":"YulIdentifier","src":"8278:5:7"},"nativeSrc":"8278:8:7","nodeType":"YulFunctionCall","src":"8278:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:7","nodeType":"YulIdentifier","src":"8263:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":680,"isOffset":false,"isSlot":false,"src":"7955:4:7","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"7974:4:7","valueSize":1},{"declaration":684,"isOffset":false,"isSlot":false,"src":"8220:10:7","valueSize":1},{"declaration":687,"isOffset":false,"isSlot":false,"src":"8263:11:7","valueSize":1},{"declaration":678,"isOffset":false,"isSlot":false,"src":"7941:5:7","valueSize":1}],"flags":["memory-safe"],"id":689,"nodeType":"InlineAssembly","src":"7875:421:7"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":690,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8310:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8362:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":695,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"8336:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:7","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:7","memberName":"code","nodeType":"MemberAccess","src":"8328:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:7","memberName":"length","nodeType":"MemberAccess","src":"8328:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"8306:146:7","trueBody":{"id":712,"nodeType":"Block","src":"8380:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"8434:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:7","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"8401:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":711,"nodeType":"RevertStatement","src":"8394:47:7"}]}}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"7247:486:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:7","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"token","nameLocation":"7774:5:7","nodeType":"VariableDeclaration","scope":715,"src":"7767:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"IERC20","nameLocations":["7767:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"7767:6:7"},"referencedDeclaration":346,"src":"7767:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"data","nameLocation":"7794:4:7","nodeType":"VariableDeclaration","scope":715,"src":"7781:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":679,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:7"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"7808:0:7"},"scope":757,"src":"7738:720:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":755,"nodeType":"Block","src":"9049:391:7","statements":[{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"success","nameLocation":"9064:7:7","nodeType":"VariableDeclaration","scope":755,"src":"9059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":728,"nodeType":"VariableDeclarationStatement","src":"9059:12:7"},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:7","nodeType":"VariableDeclaration","scope":755,"src":"9081:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":731,"nodeType":"VariableDeclarationStatement","src":"9081:18:7"},{"assignments":[733],"declarations":[{"constant":false,"id":733,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:7","nodeType":"VariableDeclaration","scope":755,"src":"9109:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":734,"nodeType":"VariableDeclarationStatement","src":"9109:19:7"},{"AST":{"nativeSrc":"9163:174:7","nodeType":"YulBlock","src":"9163:174:7","statements":[{"nativeSrc":"9177:71:7","nodeType":"YulAssignment","src":"9177:71:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:7","nodeType":"YulIdentifier","src":"9193:3:7"},"nativeSrc":"9193:5:7","nodeType":"YulFunctionCall","src":"9193:5:7"},{"name":"token","nativeSrc":"9200:5:7","nodeType":"YulIdentifier","src":"9200:5:7"},{"kind":"number","nativeSrc":"9207:1:7","nodeType":"YulLiteral","src":"9207:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:7","nodeType":"YulIdentifier","src":"9214:4:7"},{"kind":"number","nativeSrc":"9220:4:7","nodeType":"YulLiteral","src":"9220:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:7","nodeType":"YulIdentifier","src":"9210:3:7"},"nativeSrc":"9210:15:7","nodeType":"YulFunctionCall","src":"9210:15:7"},{"arguments":[{"name":"data","nativeSrc":"9233:4:7","nodeType":"YulIdentifier","src":"9233:4:7"}],"functionName":{"name":"mload","nativeSrc":"9227:5:7","nodeType":"YulIdentifier","src":"9227:5:7"},"nativeSrc":"9227:11:7","nodeType":"YulFunctionCall","src":"9227:11:7"},{"kind":"number","nativeSrc":"9240:1:7","nodeType":"YulLiteral","src":"9240:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:7","nodeType":"YulLiteral","src":"9243:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:7","nodeType":"YulIdentifier","src":"9188:4:7"},"nativeSrc":"9188:60:7","nodeType":"YulFunctionCall","src":"9188:60:7"},"variableNames":[{"name":"success","nativeSrc":"9177:7:7","nodeType":"YulIdentifier","src":"9177:7:7"}]},{"nativeSrc":"9261:30:7","nodeType":"YulAssignment","src":"9261:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:7","nodeType":"YulIdentifier","src":"9275:14:7"},"nativeSrc":"9275:16:7","nodeType":"YulFunctionCall","src":"9275:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:7","nodeType":"YulIdentifier","src":"9261:10:7"}]},{"nativeSrc":"9304:23:7","nodeType":"YulAssignment","src":"9304:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:7","nodeType":"YulLiteral","src":"9325:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:7","nodeType":"YulIdentifier","src":"9319:5:7"},"nativeSrc":"9319:8:7","nodeType":"YulFunctionCall","src":"9319:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:7","nodeType":"YulIdentifier","src":"9304:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":721,"isOffset":false,"isSlot":false,"src":"9214:4:7","valueSize":1},{"declaration":721,"isOffset":false,"isSlot":false,"src":"9233:4:7","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"9261:10:7","valueSize":1},{"declaration":733,"isOffset":false,"isSlot":false,"src":"9304:11:7","valueSize":1},{"declaration":727,"isOffset":false,"isSlot":false,"src":"9177:7:7","valueSize":1},{"declaration":719,"isOffset":false,"isSlot":false,"src":"9200:5:7","valueSize":1}],"flags":["memory-safe"],"id":735,"nodeType":"InlineAssembly","src":"9138:199:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9353:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"9365:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"9416:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":742,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"9391:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:7","typeDescriptions":{}}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:7","memberName":"code","nodeType":"MemberAccess","src":"9383:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:7","memberName":"length","nodeType":"MemberAccess","src":"9383:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":725,"id":754,"nodeType":"Return","src":"9346:87:7"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8464:491:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":756,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:7","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"token","nameLocation":"9000:5:7","nodeType":"VariableDeclaration","scope":756,"src":"8993:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":718,"nodeType":"UserDefinedTypeName","pathNode":{"id":717,"name":"IERC20","nameLocations":["8993:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"8993:6:7"},"referencedDeclaration":346,"src":"8993:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"data","nameLocation":"9020:4:7","nodeType":"VariableDeclaration","scope":756,"src":"9007:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:7"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":756,"src":"9043:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:7"},"scope":757,"src":"8960:480:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":758,"src":"750:8692:7","usedErrors":[360,369],"usedEvents":[]}],"src":"115:9328:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1710],"IERC721":[874]},"id":875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":759,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":875,"sourceUnit":1711,"src":"134:62:8","symbolAliases":[{"foreign":{"id":760,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":763,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"288:7:8"},"id":764,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":874,"linearizedBaseContracts":[874,1710],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":773,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":773,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":773,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":773,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":782,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":782,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":782,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":782,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":791,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":791,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":791,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":791,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":799,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":799,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":799,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":874,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":807,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":807,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":807,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":874,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":819,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":819,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":819,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":819,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":819,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":874,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":829,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":829,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":829,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":829,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":874,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":839,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":839,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":839,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":839,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":874,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":847,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":847,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":847,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":874,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":855,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":855,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":851,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":874,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":863,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":863,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":863,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":874,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":873,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":873,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":873,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":870,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":874,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":875,"src":"267:4661:8","usedErrors":[],"usedEvents":[773,782,791]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[892]},"id":893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":876,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":892,"linearizedBaseContracts":[892],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":891,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":891,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":891,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":891,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":891,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":888,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":892,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":893,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1151],"Errors":[1173]},"id":1152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":894,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1152,"sourceUnit":1174,"src":"127:36:10","symbolAliases":[{"foreign":{"id":895,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"135:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"165:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1151,"linearizedBaseContracts":[1151],"name":"Address","nameLocation":"241:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"255:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":902,"name":"AddressEmptyCode","nameLocation":"341:16:10","nodeType":"ErrorDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"target","nameLocation":"366:6:10","nodeType":"VariableDeclaration","scope":902,"src":"358:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:10"},"src":"335:39:10"},{"body":{"id":948,"nodeType":"Block","src":"1361:278:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":912,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:10","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1399:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":929,"nodeType":"IfStatement","src":"1371:125:10","trueBody":{"id":928,"nodeType":"Block","src":"1407:89:10","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":922,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:10","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":925,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1478:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":917,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1428:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1173_$","typeString":"type(library Errors)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:10","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1161,"src":"1428:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":927,"nodeType":"RevertStatement","src":"1421:64:10"}]}},{"assignments":[931,null],"declarations":[{"constant":false,"id":931,"mutability":"mutable","name":"success","nameLocation":"1512:7:10","nodeType":"VariableDeclaration","scope":948,"src":"1507:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":930,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":938,"initialValue":{"arguments":[{"hexValue":"","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":932,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1525:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:10","memberName":"call","nodeType":"MemberAccess","src":"1525:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":934,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1547:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:10"},{"condition":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:10","subExpression":{"id":939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1573:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"nodeType":"IfStatement","src":"1568:65:10","trueBody":{"id":946,"nodeType":"Block","src":"1582:51:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":941,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1603:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1173_$","typeString":"type(library Errors)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:10","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1164,"src":"1603:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":945,"nodeType":"RevertStatement","src":"1596:26:10"}]}}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"380:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:10","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:10","nodeType":"VariableDeclaration","scope":949,"src":"1309:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"amount","nameLocation":"1344:6:10","nodeType":"VariableDeclaration","scope":949,"src":"1336:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:10"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"1361:0:10"},"scope":1151,"src":"1290:349:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"2573:62:10","statements":[{"expression":{"arguments":[{"id":960,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2612:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2620:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2590:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":958,"id":964,"nodeType":"Return","src":"2583:45:10"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"1645:834:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":966,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:10","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"target","nameLocation":"2514:6:10","nodeType":"VariableDeclaration","scope":966,"src":"2506:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"data","nameLocation":"2535:4:10","nodeType":"VariableDeclaration","scope":966,"src":"2522:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:10"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2559:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:10"},"scope":1151,"src":"2484:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"3072:294:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":980,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:10","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"3110:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"nodeType":"IfStatement","src":"3082:123:10","trueBody":{"id":996,"nodeType":"Block","src":"3117:88:10","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1151","typeString":"library Address"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:10","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"3188:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":985,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"3138:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1173_$","typeString":"type(library Errors)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:10","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1161,"src":"3138:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":995,"nodeType":"RevertStatement","src":"3131:63:10"}]}},{"assignments":[999,1001],"declarations":[{"constant":false,"id":999,"mutability":"mutable","name":"success","nameLocation":"3220:7:10","nodeType":"VariableDeclaration","scope":1015,"src":"3215:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":998,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:10","nodeType":"VariableDeclaration","scope":1015,"src":"3229:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1008,"initialValue":{"arguments":[{"id":1006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3282:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1002,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"3256:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:10","memberName":"call","nodeType":"MemberAccess","src":"3256:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"3275:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:10"},{"expression":{"arguments":[{"id":1010,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"3331:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"3339:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1012,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3348:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1009,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3304:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":977,"id":1014,"nodeType":"Return","src":"3297:62:10"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2641:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:10","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"target","nameLocation":"2998:6:10","nodeType":"VariableDeclaration","scope":1016,"src":"2990:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"3019:4:10","nodeType":"VariableDeclaration","scope":1016,"src":"3006:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"value","nameLocation":"3033:5:10","nodeType":"VariableDeclaration","scope":1016,"src":"3025:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:10"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1016,"src":"3058:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":975,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:10"},"scope":1151,"src":"2959:407:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"3605:154:10","statements":[{"assignments":[1027,1029],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"success","nameLocation":"3621:7:10","nodeType":"VariableDeclaration","scope":1041,"src":"3616:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1026,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:10","nodeType":"VariableDeclaration","scope":1041,"src":"3630:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1028,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"id":1032,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3675:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3657:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:10"},{"expression":{"arguments":[{"id":1036,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3724:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3732:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3741:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1035,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3697:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1025,"id":1040,"nodeType":"Return","src":"3690:62:10"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"3372:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:10","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"target","nameLocation":"3541:6:10","nodeType":"VariableDeclaration","scope":1042,"src":"3533:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"data","nameLocation":"3562:4:10","nodeType":"VariableDeclaration","scope":1042,"src":"3549:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:10"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"3591:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1023,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:10"},"scope":1151,"src":"3505:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"3997:156:10","statements":[{"assignments":[1053,1055],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"success","nameLocation":"4013:7:10","nodeType":"VariableDeclaration","scope":1067,"src":"4008:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1052,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:10","nodeType":"VariableDeclaration","scope":1067,"src":"4022:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1054,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[{"id":1058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"4069:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1056,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4049:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:10"},{"expression":{"arguments":[{"id":1062,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4118:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4126:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1064,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4135:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1061,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4091:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1051,"id":1066,"nodeType":"Return","src":"4084:62:10"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"3765:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:10","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"target","nameLocation":"3938:6:10","nodeType":"VariableDeclaration","scope":1068,"src":"3930:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"data","nameLocation":"3959:4:10","nodeType":"VariableDeclaration","scope":1068,"src":"3946:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1046,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:10"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1068,"src":"3983:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1049,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:10"},"scope":1151,"src":"3900:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"4579:424:10","statements":[{"condition":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:10","subExpression":{"id":1080,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"4594:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1105,"nodeType":"Block","src":"4653:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1087,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4841:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:10","memberName":"length","nodeType":"MemberAccess","src":"4841:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1091,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4867:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:10","memberName":"code","nodeType":"MemberAccess","src":"4867:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:10","memberName":"length","nodeType":"MemberAccess","src":"4867:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1102,"nodeType":"IfStatement","src":"4837:119:10","trueBody":{"id":1101,"nodeType":"Block","src":"4892:64:10","statements":[{"errorCall":{"arguments":[{"id":1098,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4934:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4917:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1100,"nodeType":"RevertStatement","src":"4910:31:10"}]}},{"expression":{"id":1103,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4976:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1079,"id":1104,"nodeType":"Return","src":"4969:17:10"}]},"id":1106,"nodeType":"IfStatement","src":"4589:408:10","trueBody":{"id":1086,"nodeType":"Block","src":"4603:44:10","statements":[{"expression":{"arguments":[{"id":1083,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4625:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1082,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"4617:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"4617:19:10"}]}}]},"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"4159:257:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:10","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"target","nameLocation":"4474:6:10","nodeType":"VariableDeclaration","scope":1108,"src":"4466:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"success","nameLocation":"4495:7:10","nodeType":"VariableDeclaration","scope":1108,"src":"4490:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:10","nodeType":"VariableDeclaration","scope":1108,"src":"4512:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:10"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1108,"src":"4565:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:10"},"scope":1151,"src":"4421:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"5307:122:10","statements":[{"condition":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:10","subExpression":{"id":1118,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5322:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1127,"nodeType":"Block","src":"5381:42:10","statements":[{"expression":{"id":1125,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5402:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1117,"id":1126,"nodeType":"Return","src":"5395:17:10"}]},"id":1128,"nodeType":"IfStatement","src":"5317:106:10","trueBody":{"id":1124,"nodeType":"Block","src":"5331:44:10","statements":[{"expression":{"arguments":[{"id":1121,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5353:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1120,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5345:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"5345:19:10"}]}}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"5009:191:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:10","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"success","nameLocation":"5236:7:10","nodeType":"VariableDeclaration","scope":1130,"src":"5231:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:10","nodeType":"VariableDeclaration","scope":1130,"src":"5245:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1112,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:10"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"5293:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:10"},"scope":1151,"src":"5205:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1149,"nodeType":"Block","src":"5598:432:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1136,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"5674:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:10","memberName":"length","nodeType":"MemberAccess","src":"5674:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1147,"nodeType":"Block","src":"5973:51:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1142,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"5994:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1173_$","typeString":"type(library Errors)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:10","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1164,"src":"5994:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1146,"nodeType":"RevertStatement","src":"5987:26:10"}]},"id":1148,"nodeType":"IfStatement","src":"5670:354:10","trueBody":{"id":1141,"nodeType":"Block","src":"5697:270:10","statements":[{"AST":{"nativeSrc":"5824:133:10","nodeType":"YulBlock","src":"5824:133:10","statements":[{"nativeSrc":"5842:40:10","nodeType":"YulVariableDeclaration","src":"5842:40:10","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:10","nodeType":"YulIdentifier","src":"5871:10:10"}],"functionName":{"name":"mload","nativeSrc":"5865:5:10","nodeType":"YulIdentifier","src":"5865:5:10"},"nativeSrc":"5865:17:10","nodeType":"YulFunctionCall","src":"5865:17:10"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:10","nodeType":"YulTypedName","src":"5846:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:10","nodeType":"YulLiteral","src":"5910:2:10","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:10","nodeType":"YulIdentifier","src":"5914:10:10"}],"functionName":{"name":"add","nativeSrc":"5906:3:10","nodeType":"YulIdentifier","src":"5906:3:10"},"nativeSrc":"5906:19:10","nodeType":"YulFunctionCall","src":"5906:19:10"},{"name":"returndata_size","nativeSrc":"5927:15:10","nodeType":"YulIdentifier","src":"5927:15:10"}],"functionName":{"name":"revert","nativeSrc":"5899:6:10","nodeType":"YulIdentifier","src":"5899:6:10"},"nativeSrc":"5899:44:10","nodeType":"YulFunctionCall","src":"5899:44:10"},"nativeSrc":"5899:44:10","nodeType":"YulExpressionStatement","src":"5899:44:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1133,"isOffset":false,"isSlot":false,"src":"5871:10:10","valueSize":1},{"declaration":1133,"isOffset":false,"isSlot":false,"src":"5914:10:10","valueSize":1}],"flags":["memory-safe"],"id":1140,"nodeType":"InlineAssembly","src":"5799:158:10"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"5435:103:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1150,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:10","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:10","nodeType":"VariableDeclaration","scope":1150,"src":"5560:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:10"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"5598:0:10"},"scope":1151,"src":"5543:487:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1152,"src":"233:5799:10","usedErrors":[902],"usedEvents":[]}],"src":"101:5932:10"},"id":10},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1173]},"id":1174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"126:284:11","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1173,"linearizedBaseContracts":[1173],"name":"Errors","nameLocation":"419:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"432:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1161,"name":"InsufficientBalance","nameLocation":"537:19:11","nodeType":"ErrorDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"balance","nameLocation":"565:7:11","nodeType":"VariableDeclaration","scope":1161,"src":"557:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"needed","nameLocation":"582:6:11","nodeType":"VariableDeclaration","scope":1161,"src":"574:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:11"},"src":"531:59:11"},{"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"596:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1164,"name":"FailedCall","nameLocation":"696:10:11","nodeType":"ErrorDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"706:2:11"},"src":"690:19:11"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"715:46:11","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1167,"name":"FailedDeployment","nameLocation":"772:16:11","nodeType":"ErrorDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[],"src":"788:2:11"},"src":"766:25:11"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"797:58:11","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1172,"name":"MissingPrecompile","nameLocation":"866:17:11","nodeType":"ErrorDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1172,"src":"884:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:11"},"src":"860:33:11"}],"scope":1174,"src":"411:484:11","usedErrors":[1161,1164,1167,1172],"usedEvents":[]}],"src":"100:796:11"},"id":11},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1242]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1175,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"135:894:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1242,"linearizedBaseContracts":[1242],"name":"ReentrancyGuard","nameLocation":"1048:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1179,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:12","nodeType":"VariableDeclaration","scope":1242,"src":"1818:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1182,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:12","nodeType":"VariableDeclaration","scope":1242,"src":"1864:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1184,"mutability":"mutable","name":"_status","nameLocation":"1923:7:12","nodeType":"VariableDeclaration","scope":1242,"src":"1907:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"1937:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1187,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:12","nodeType":"ErrorDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"2028:2:12"},"src":"1994:37:12"},{"body":{"id":1194,"nodeType":"Block","src":"2051:38:12","statements":[{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1190,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1191,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2071:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1193,"nodeType":"ExpressionStatement","src":"2061:21:12"}]},"id":1195,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"2048:2:12"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"2051:0:12"},"scope":1242,"src":"2037:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"2490:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1198,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2500:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1200,"nodeType":"ExpressionStatement","src":"2500:21:12"},{"id":1201,"nodeType":"PlaceholderStatement","src":"2531:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1202,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2542:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"2542:20:12"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"2095:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1206,"name":"nonReentrant","nameLocation":"2475:12:12","nodeType":"ModifierDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"2487:2:12"},"src":"2466:103:12","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"2614:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1210,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1216,"nodeType":"IfStatement","src":"2698:86:12","trueBody":{"id":1215,"nodeType":"Block","src":"2722:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1212,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2743:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1214,"nodeType":"RevertStatement","src":"2736:37:12"}]}},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1217,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1218,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"2858:17:12"}]},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:12","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"2614:0:12"},"scope":1242,"src":"2575:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1229,"nodeType":"Block","src":"2926:170:12","statements":[{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1225,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1226,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3078:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"3068:21:12"}]},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:12","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"2915:2:12"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"2926:0:12"},"scope":1242,"src":"2888:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1240,"nodeType":"Block","src":"3339:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1237,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1235,"id":1239,"nodeType":"Return","src":"3349:25:12"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"3102:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:12","nodeType":"FunctionDefinition","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[],"src":"3307:2:12"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"3333:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1233,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:12"},"scope":1242,"src":"3275:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1243,"src":"1030:2353:12","usedErrors":[1187],"usedEvents":[]}],"src":"109:3275:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1590]},"id":1591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"138:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1590,"linearizedBaseContracts":[1590],"name":"ECDSA","nameLocation":"352:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1250,"members":[{"id":1246,"name":"NoError","nameLocation":"392:7:13","nodeType":"EnumValue","src":"392:7:13"},{"id":1247,"name":"InvalidSignature","nameLocation":"409:16:13","nodeType":"EnumValue","src":"409:16:13"},{"id":1248,"name":"InvalidSignatureLength","nameLocation":"435:22:13","nodeType":"EnumValue","src":"435:22:13"},{"id":1249,"name":"InvalidSignatureS","nameLocation":"467:17:13","nodeType":"EnumValue","src":"467:17:13"}],"name":"RecoverError","nameLocation":"369:12:13","nodeType":"EnumDefinition","src":"364:126:13"},{"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"496:63:13","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1253,"name":"ECDSAInvalidSignature","nameLocation":"570:21:13","nodeType":"ErrorDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"591:2:13"},"src":"564:30:13"},{"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"600:60:13","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1258,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:13","nodeType":"ErrorDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"length","nameLocation":"707:6:13","nodeType":"VariableDeclaration","scope":1258,"src":"699:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:13"},"src":"665:50:13"},{"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"721:85:13","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1263,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:13","nodeType":"ErrorDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"s","nameLocation":"848:1:13","nodeType":"VariableDeclaration","scope":1263,"src":"840:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:13"},"src":"811:40:13"},{"body":{"id":1315,"nodeType":"Block","src":"2285:622:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1278,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2299:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:13","memberName":"length","nodeType":"MemberAccess","src":"2299:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1313,"nodeType":"Block","src":"2793:108:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:13","typeDescriptions":{}}},"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1304,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2827:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"2827:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1308,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2872:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:13","memberName":"length","nodeType":"MemberAccess","src":"2872:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:13","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1277,"id":1312,"nodeType":"Return","src":"2807:83:13"}]},"id":1314,"nodeType":"IfStatement","src":"2295:606:13","trueBody":{"id":1299,"nodeType":"Block","src":"2323:464:13","statements":[{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"r","nameLocation":"2345:1:13","nodeType":"VariableDeclaration","scope":1299,"src":"2337:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1284,"nodeType":"VariableDeclarationStatement","src":"2337:9:13"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"s","nameLocation":"2368:1:13","nodeType":"VariableDeclaration","scope":1299,"src":"2360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1287,"nodeType":"VariableDeclarationStatement","src":"2360:9:13"},{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"v","nameLocation":"2389:1:13","nodeType":"VariableDeclaration","scope":1299,"src":"2383:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1288,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1290,"nodeType":"VariableDeclarationStatement","src":"2383:7:13"},{"AST":{"nativeSrc":"2560:171:13","nodeType":"YulBlock","src":"2560:171:13","statements":[{"nativeSrc":"2578:32:13","nodeType":"YulAssignment","src":"2578:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:13","nodeType":"YulIdentifier","src":"2593:9:13"},{"kind":"number","nativeSrc":"2604:4:13","nodeType":"YulLiteral","src":"2604:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:13","nodeType":"YulIdentifier","src":"2589:3:13"},"nativeSrc":"2589:20:13","nodeType":"YulFunctionCall","src":"2589:20:13"}],"functionName":{"name":"mload","nativeSrc":"2583:5:13","nodeType":"YulIdentifier","src":"2583:5:13"},"nativeSrc":"2583:27:13","nodeType":"YulFunctionCall","src":"2583:27:13"},"variableNames":[{"name":"r","nativeSrc":"2578:1:13","nodeType":"YulIdentifier","src":"2578:1:13"}]},{"nativeSrc":"2627:32:13","nodeType":"YulAssignment","src":"2627:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:13","nodeType":"YulIdentifier","src":"2642:9:13"},{"kind":"number","nativeSrc":"2653:4:13","nodeType":"YulLiteral","src":"2653:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:13","nodeType":"YulIdentifier","src":"2638:3:13"},"nativeSrc":"2638:20:13","nodeType":"YulFunctionCall","src":"2638:20:13"}],"functionName":{"name":"mload","nativeSrc":"2632:5:13","nodeType":"YulIdentifier","src":"2632:5:13"},"nativeSrc":"2632:27:13","nodeType":"YulFunctionCall","src":"2632:27:13"},"variableNames":[{"name":"s","nativeSrc":"2627:1:13","nodeType":"YulIdentifier","src":"2627:1:13"}]},{"nativeSrc":"2676:41:13","nodeType":"YulAssignment","src":"2676:41:13","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:13","nodeType":"YulLiteral","src":"2686:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:13","nodeType":"YulIdentifier","src":"2699:9:13"},{"kind":"number","nativeSrc":"2710:4:13","nodeType":"YulLiteral","src":"2710:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:13","nodeType":"YulIdentifier","src":"2695:3:13"},"nativeSrc":"2695:20:13","nodeType":"YulFunctionCall","src":"2695:20:13"}],"functionName":{"name":"mload","nativeSrc":"2689:5:13","nodeType":"YulIdentifier","src":"2689:5:13"},"nativeSrc":"2689:27:13","nodeType":"YulFunctionCall","src":"2689:27:13"}],"functionName":{"name":"byte","nativeSrc":"2681:4:13","nodeType":"YulIdentifier","src":"2681:4:13"},"nativeSrc":"2681:36:13","nodeType":"YulFunctionCall","src":"2681:36:13"},"variableNames":[{"name":"v","nativeSrc":"2676:1:13","nodeType":"YulIdentifier","src":"2676:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1283,"isOffset":false,"isSlot":false,"src":"2578:1:13","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"2627:1:13","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2593:9:13","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2642:9:13","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2699:9:13","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"2676:1:13","valueSize":1}],"flags":["memory-safe"],"id":1291,"nodeType":"InlineAssembly","src":"2535:196:13"},{"expression":{"arguments":[{"id":1293,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2762:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1294,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"2768:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1295,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2771:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1296,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2774:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1292,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1316,1396,1504],"referencedDeclaration":1504,"src":"2751:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1277,"id":1298,"nodeType":"Return","src":"2744:32:13"}]}}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"857:1267:13","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:13","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"hash","nameLocation":"2166:4:13","nodeType":"VariableDeclaration","scope":1316,"src":"2158:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"signature","nameLocation":"2193:9:13","nodeType":"VariableDeclaration","scope":1316,"src":"2180:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:13"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:13","nodeType":"VariableDeclaration","scope":1316,"src":"2232:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"err","nameLocation":"2264:3:13","nodeType":"VariableDeclaration","scope":1316,"src":"2251:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"RecoverError","nameLocations":["2251:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"2251:12:13"},"referencedDeclaration":1250,"src":"2251:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:13","nodeType":"VariableDeclaration","scope":1316,"src":"2269:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:13"},"scope":1590,"src":"2129:778:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"3801:168:13","statements":[{"assignments":[1327,1330,1332],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:13","nodeType":"VariableDeclaration","scope":1345,"src":"3812:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"error","nameLocation":"3844:5:13","nodeType":"VariableDeclaration","scope":1345,"src":"3831:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1329,"nodeType":"UserDefinedTypeName","pathNode":{"id":1328,"name":"RecoverError","nameLocations":["3831:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"3831:12:13"},"referencedDeclaration":1250,"src":"3831:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:13","nodeType":"VariableDeclaration","scope":1345,"src":"3851:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1337,"initialValue":{"arguments":[{"id":1334,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3882:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1335,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3888:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1333,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1316,1396,1504],"referencedDeclaration":1316,"src":"3871:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:13"},{"expression":{"arguments":[{"id":1339,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"3920:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"id":1340,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3927:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1338,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"3908:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1250_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"3908:28:13"},{"expression":{"id":1343,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3953:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1325,"id":1344,"nodeType":"Return","src":"3946:16:13"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"2913:796:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:13","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"hash","nameLocation":"3739:4:13","nodeType":"VariableDeclaration","scope":1346,"src":"3731:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"signature","nameLocation":"3758:9:13","nodeType":"VariableDeclaration","scope":1346,"src":"3745:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:13"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"3792:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:13"},"scope":1590,"src":"3714:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1395,"nodeType":"Block","src":"4348:342:13","statements":[{"id":1394,"nodeType":"UncheckedBlock","src":"4358:326:13","statements":[{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"s","nameLocation":"4390:1:13","nodeType":"VariableDeclaration","scope":1394,"src":"4382:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1371,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"4394:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:13","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:13"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"v","nameLocation":"4591:1:13","nodeType":"VariableDeclaration","scope":1394,"src":"4585:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1372,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1378,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"4610:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:13","typeDescriptions":{}}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1374,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:13","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:13"},{"expression":{"arguments":[{"id":1388,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4659:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1389,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"4665:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1390,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4668:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1391,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"4671:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1387,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1316,1396,1504],"referencedDeclaration":1504,"src":"4648:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1362,"id":1393,"nodeType":"Return","src":"4641:32:13"}]}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"3975:205:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:13","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"hash","nameLocation":"4222:4:13","nodeType":"VariableDeclaration","scope":1396,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"r","nameLocation":"4244:1:13","nodeType":"VariableDeclaration","scope":1396,"src":"4236:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"vs","nameLocation":"4263:2:13","nodeType":"VariableDeclaration","scope":1396,"src":"4255:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:13"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:13","nodeType":"VariableDeclaration","scope":1396,"src":"4295:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"err","nameLocation":"4327:3:13","nodeType":"VariableDeclaration","scope":1396,"src":"4314:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"RecoverError","nameLocations":["4314:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"4314:12:13"},"referencedDeclaration":1250,"src":"4314:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:13","nodeType":"VariableDeclaration","scope":1396,"src":"4332:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:13"},"scope":1590,"src":"4185:505:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1428,"nodeType":"Block","src":"4903:164:13","statements":[{"assignments":[1409,1412,1414],"declarations":[{"constant":false,"id":1409,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:13","nodeType":"VariableDeclaration","scope":1428,"src":"4914:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"error","nameLocation":"4946:5:13","nodeType":"VariableDeclaration","scope":1428,"src":"4933:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1411,"nodeType":"UserDefinedTypeName","pathNode":{"id":1410,"name":"RecoverError","nameLocations":["4933:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"4933:12:13"},"referencedDeclaration":1250,"src":"4933:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:13","nodeType":"VariableDeclaration","scope":1428,"src":"4953:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1420,"initialValue":{"arguments":[{"id":1416,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"4984:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1417,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4990:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1418,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4993:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1415,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1316,1396,1504],"referencedDeclaration":1396,"src":"4973:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:13"},{"expression":{"arguments":[{"id":1422,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5018:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"id":1423,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"5025:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1421,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5006:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1250_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"5006:28:13"},{"expression":{"id":1426,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5051:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1407,"id":1427,"nodeType":"Return","src":"5044:16:13"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"4696:116:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1429,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:13","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"hash","nameLocation":"4842:4:13","nodeType":"VariableDeclaration","scope":1429,"src":"4834:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"r","nameLocation":"4856:1:13","nodeType":"VariableDeclaration","scope":1429,"src":"4848:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"vs","nameLocation":"4867:2:13","nodeType":"VariableDeclaration","scope":1429,"src":"4859:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:13"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"4894:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:13"},"scope":1590,"src":"4817:250:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"5382:1372:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1450,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6278:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:13","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"nodeType":"IfStatement","src":"6266:164:13","trueBody":{"id":1463,"nodeType":"Block","src":"6351:79:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:13","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1458,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6385:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6385:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"id":1460,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6417:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1447,"id":1462,"nodeType":"Return","src":"6365:54:13"}]}},{"assignments":[1466],"declarations":[{"constant":false,"id":1466,"mutability":"mutable","name":"signer","nameLocation":"6532:6:13","nodeType":"VariableDeclaration","scope":1503,"src":"6524:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1473,"initialValue":{"arguments":[{"id":1468,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6551:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1469,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"6557:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1470,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"6560:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1471,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6563:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1467,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6579:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:13","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"nodeType":"IfStatement","src":"6575:113:13","trueBody":{"id":1492,"nodeType":"Block","src":"6601:87:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:13","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1484,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6635:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1247,"src":"6635:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:13","typeDescriptions":{}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1447,"id":1491,"nodeType":"Return","src":"6615:62:13"}]}},{"expression":{"components":[{"id":1494,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6706:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1495,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6714:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"6714:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:13","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1447,"id":1502,"nodeType":"Return","src":"6698:49:13"}]},"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"5073:125:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:13","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"hash","nameLocation":"5240:4:13","nodeType":"VariableDeclaration","scope":1504,"src":"5232:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"v","nameLocation":"5260:1:13","nodeType":"VariableDeclaration","scope":1504,"src":"5254:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1433,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"r","nameLocation":"5279:1:13","nodeType":"VariableDeclaration","scope":1504,"src":"5271:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"s","nameLocation":"5298:1:13","nodeType":"VariableDeclaration","scope":1504,"src":"5290:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:13"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:13","nodeType":"VariableDeclaration","scope":1504,"src":"5329:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"err","nameLocation":"5361:3:13","nodeType":"VariableDeclaration","scope":1504,"src":"5348:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1443,"nodeType":"UserDefinedTypeName","pathNode":{"id":1442,"name":"RecoverError","nameLocations":["5348:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"5348:12:13"},"referencedDeclaration":1250,"src":"5348:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:13","nodeType":"VariableDeclaration","scope":1504,"src":"5366:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:13"},"scope":1590,"src":"5203:1551:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"6981:166:13","statements":[{"assignments":[1519,1522,1524],"declarations":[{"constant":false,"id":1519,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:13","nodeType":"VariableDeclaration","scope":1539,"src":"6992:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"error","nameLocation":"7024:5:13","nodeType":"VariableDeclaration","scope":1539,"src":"7011:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1521,"nodeType":"UserDefinedTypeName","pathNode":{"id":1520,"name":"RecoverError","nameLocations":["7011:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"7011:12:13"},"referencedDeclaration":1250,"src":"7011:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:13","nodeType":"VariableDeclaration","scope":1539,"src":"7031:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1531,"initialValue":{"arguments":[{"id":1526,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"7062:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1527,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"7068:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1528,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"7071:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1529,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"7074:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1525,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1316,1396,1504],"referencedDeclaration":1504,"src":"7051:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:13"},{"expression":{"arguments":[{"id":1533,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"7098:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},{"id":1534,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"7105:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1532,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"7086:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1250_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"7086:28:13"},{"expression":{"id":1537,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7131:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1517,"id":1538,"nodeType":"Return","src":"7124:16:13"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"6760:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:13","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"hash","nameLocation":"6912:4:13","nodeType":"VariableDeclaration","scope":1540,"src":"6904:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"v","nameLocation":"6924:1:13","nodeType":"VariableDeclaration","scope":1540,"src":"6918:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1508,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"r","nameLocation":"6935:1:13","nodeType":"VariableDeclaration","scope":1540,"src":"6927:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"s","nameLocation":"6946:1:13","nodeType":"VariableDeclaration","scope":1540,"src":"6938:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:13"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"6972:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:13"},"scope":1590,"src":"6887:260:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1588,"nodeType":"Block","src":"7352:460:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7366:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1550,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7375:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"7375:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7462:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1556,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7471:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1247,"src":"7471:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7567:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1564,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7576:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"7576:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7701:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1576,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7710:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"7710:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"7697:109:13","trueBody":{"id":1583,"nodeType":"Block","src":"7742:64:13","statements":[{"errorCall":{"arguments":[{"id":1580,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7786:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1579,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"7763:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1582,"nodeType":"RevertStatement","src":"7756:39:13"}]}},"id":1585,"nodeType":"IfStatement","src":"7563:243:13","trueBody":{"id":1574,"nodeType":"Block","src":"7613:78:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1570,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7670:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:13","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"7634:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1573,"nodeType":"RevertStatement","src":"7627:53:13"}]}},"id":1586,"nodeType":"IfStatement","src":"7458:348:13","trueBody":{"id":1562,"nodeType":"Block","src":"7502:55:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1559,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7523:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1561,"nodeType":"RevertStatement","src":"7516:30:13"}]}},"id":1587,"nodeType":"IfStatement","src":"7362:444:13","trueBody":{"id":1554,"nodeType":"Block","src":"7397:55:13","statements":[{"functionReturnParameters":1548,"id":1553,"nodeType":"Return","src":"7411:7:13"}]}}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"7153:122:13","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:13","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"error","nameLocation":"7314:5:13","nodeType":"VariableDeclaration","scope":1589,"src":"7301:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1543,"nodeType":"UserDefinedTypeName","pathNode":{"id":1542,"name":"RecoverError","nameLocations":["7301:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"7301:12:13"},"referencedDeclaration":1250,"src":"7301:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:13","nodeType":"VariableDeclaration","scope":1589,"src":"7321:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:13"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"7352:0:13"},"scope":1590,"src":"7280:532:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1591,"src":"344:7470:13","usedErrors":[1253,1258,1263],"usedEvents":[]}],"src":"112:7703:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"ECDSA":[1590],"IERC1271":[13],"SignatureChecker":[1698]},"id":1699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1592,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":1594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1699,"sourceUnit":1591,"src":"149:34:14","symbolAliases":[{"foreign":{"id":1593,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"157:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":1596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1699,"sourceUnit":14,"src":"184:55:14","symbolAliases":[{"foreign":{"id":1595,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"192:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"241:290:14","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"id":1698,"linearizedBaseContracts":[1698],"name":"SignatureChecker","nameLocation":"540:16:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1644,"nodeType":"Block","src":"1153:317:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1609,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1167:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1174:4:14","memberName":"code","nodeType":"MemberAccess","src":"1167:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:14","memberName":"length","nodeType":"MemberAccess","src":"1167:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1167:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1642,"nodeType":"Block","src":"1381:83:14","statements":[{"expression":{"arguments":[{"id":1637,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1429:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1638,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1437:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1639,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1443:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1636,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1402:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1608,"id":1641,"nodeType":"Return","src":"1395:58:14"}]},"id":1643,"nodeType":"IfStatement","src":"1163:301:14","trueBody":{"id":1635,"nodeType":"Block","src":"1192:183:14","statements":[{"assignments":[1615,1618,null],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"recovered","nameLocation":"1215:9:14","nodeType":"VariableDeclaration","scope":1635,"src":"1207:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"err","nameLocation":"1245:3:14","nodeType":"VariableDeclaration","scope":1635,"src":"1226:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1617,"nodeType":"UserDefinedTypeName","pathNode":{"id":1616,"name":"ECDSA.RecoverError","nameLocations":["1226:5:14","1232:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"1226:18:14"},"referencedDeclaration":1250,"src":"1226:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":1624,"initialValue":{"arguments":[{"id":1621,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1271:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1622,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1277:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1619,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1254:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1590_$","typeString":"type(library ECDSA)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1260:10:14","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"1254:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1250_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1206:81:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"1308:3:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1626,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1315:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1590_$","typeString":"type(library ECDSA)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1321:12:14","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":1250,"src":"1315:18:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1250_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1334:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"1315:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1250","typeString":"enum ECDSA.RecoverError"}},"src":"1308:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1345:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1631,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1358:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1345:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1308:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1608,"id":1634,"nodeType":"Return","src":"1301:63:14"}]}}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"563:473:14","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1050:19:14","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"signer","nameLocation":"1078:6:14","nodeType":"VariableDeclaration","scope":1645,"src":"1070:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"hash","nameLocation":"1094:4:14","nodeType":"VariableDeclaration","scope":1645,"src":"1086:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"signature","nameLocation":"1113:9:14","nodeType":"VariableDeclaration","scope":1645,"src":"1100:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1603,"name":"bytes","nodeType":"ElementaryTypeName","src":"1100:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:54:14"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"1147:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1606,"name":"bool","nodeType":"ElementaryTypeName","src":"1147:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1146:6:14"},"scope":1698,"src":"1041:429:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"2026:309:14","statements":[{"assignments":[1658,1660],"declarations":[{"constant":false,"id":1658,"mutability":"mutable","name":"success","nameLocation":"2042:7:14","nodeType":"VariableDeclaration","scope":1696,"src":"2037:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"2037:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"result","nameLocation":"2064:6:14","nodeType":"VariableDeclaration","scope":1696,"src":"2051:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"2051:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1672,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1665,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2120:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2129:16:14","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2120:25:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":1667,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2148:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1668,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2154:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2147:17:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":1663,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2105:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2109:10:14","memberName":"encodeCall","nodeType":"MemberAccess","src":"2105:14:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1661,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2074:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2081:10:14","memberName":"staticcall","nodeType":"MemberAccess","src":"2074:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:101:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2036:139:14"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1673,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2193:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2216:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2223:6:14","memberName":"length","nodeType":"MemberAccess","src":"2216:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2233:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2216:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2262:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2271:7:14","typeDescriptions":{}}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2270:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":1679,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2251:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2255:6:14","memberName":"decode","nodeType":"MemberAccess","src":"2251:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1688,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2292:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2301:16:14","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2292:25:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2318:8:14","memberName":"selector","nodeType":"MemberAccess","src":"2292:34:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{}}},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2251:76:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:134:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2192:136:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1656,"id":1695,"nodeType":"Return","src":"2185:143:14"}]},"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"1476:396:14","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC-1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1886:26:14","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"signer","nameLocation":"1930:6:14","nodeType":"VariableDeclaration","scope":1697,"src":"1922:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"hash","nameLocation":"1954:4:14","nodeType":"VariableDeclaration","scope":1697,"src":"1946:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1946:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"signature","nameLocation":"1981:9:14","nodeType":"VariableDeclaration","scope":1697,"src":"1968:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"1968:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1912:84:14"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"2020:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1654,"name":"bool","nodeType":"ElementaryTypeName","src":"2020:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2019:6:14"},"scope":1698,"src":"1877:458:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1699,"src":"532:1805:14","usedErrors":[],"usedEvents":[]}],"src":"123:2215:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1710]},"id":1711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1700,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"141:280:15","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1710,"linearizedBaseContracts":[1710],"name":"IERC165","nameLocation":"432:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"446:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1709,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:15","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:15","nodeType":"VariableDeclaration","scope":1709,"src":"818:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1703,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:15"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"861:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1706,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:15"},"scope":1710,"src":"791:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1711,"src":"422:447:15","usedErrors":[],"usedEvents":[]}],"src":"115:755:15"},"id":15},"contracts/N2D-ERC6551-Account.sol":{"ast":{"absolutePath":"contracts/N2D-ERC6551-Account.sol","exportedSymbols":{"Address":[1151],"Bytecode":[2243],"ECDSA":[1590],"ERC6551Account":[2131],"IERC1155":[226],"IERC1155Receiver":[268],"IERC1271":[13],"IERC1363":[95],"IERC165":[1710],"IERC20":[346],"IERC6551Account":[2338],"IERC6551AccountProxy":[2296],"IERC6551Registry":[2290],"IERC721":[874],"IERC721Receiver":[892],"ReentrancyGuard":[1242],"SafeERC20":[757],"SignatureChecker":[1698]},"id":2132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1712,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":1711,"src":"61:65:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":347,"src":"128:56:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":758,"src":"186:65:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":1716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":14,"src":"253:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":875,"src":"312:58:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":1718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":1699,"src":"372:73:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/IERC6551.sol","file":"../imports/IERC6551.sol","id":1719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":2339,"src":"447:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/ERC6551Bytecode.sol","file":"../imports/ERC6551Bytecode.sol","id":1720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":2244,"src":"482:40:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":875,"src":"524:58:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":893,"src":"584:66:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":1723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":269,"src":"652:68:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":1724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":227,"src":"722:60:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2132,"sourceUnit":1243,"src":"784:59:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1726,"name":"IERC165","nameLocations":["879:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"879:7:16"},"id":1727,"nodeType":"InheritanceSpecifier","src":"879:7:16"},{"baseName":{"id":1728,"name":"IERC1271","nameLocations":["893:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"893:8:16"},"id":1729,"nodeType":"InheritanceSpecifier","src":"893:8:16"},{"baseName":{"id":1730,"name":"IERC6551Account","nameLocations":["908:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"908:15:16"},"id":1731,"nodeType":"InheritanceSpecifier","src":"908:15:16"},{"baseName":{"id":1732,"name":"IERC721Receiver","nameLocations":["930:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":892,"src":"930:15:16"},"id":1733,"nodeType":"InheritanceSpecifier","src":"930:15:16"},{"baseName":{"id":1734,"name":"IERC1155Receiver","nameLocations":["952:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"952:16:16"},"id":1735,"nodeType":"InheritanceSpecifier","src":"952:16:16"},{"baseName":{"id":1736,"name":"ReentrancyGuard","nameLocations":["975:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"975:15:16"},"id":1737,"nodeType":"InheritanceSpecifier","src":"975:15:16"}],"canonicalName":"ERC6551Account","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2131,"linearizedBaseContracts":[2131,1242,268,892,2338,13,1710],"name":"ERC6551Account","nameLocation":"856:14:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1741,"libraryName":{"id":1738,"name":"SafeERC20","nameLocations":["1005:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":757,"src":"1005:9:16"},"nodeType":"UsingForDirective","src":"999:27:16","typeName":{"id":1740,"nodeType":"UserDefinedTypeName","pathNode":{"id":1739,"name":"IERC20","nameLocations":["1019:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"1019:6:16"},"referencedDeclaration":346,"src":"1019:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}}},{"constant":false,"id":1743,"mutability":"mutable","name":"_nonce","nameLocation":"1078:6:16","nodeType":"VariableDeclaration","scope":2131,"src":"1062:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1747,"mutability":"mutable","name":"_supportedInterfaces","nameLocation":"1123:20:16","nodeType":"VariableDeclaration","scope":2131,"src":"1091:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":1746,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1744,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1099:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1091:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1745,"name":"bool","nodeType":"ElementaryTypeName","src":"1109:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1768,"nodeType":"Block","src":"1166:146:16","statements":[{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1750,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1177:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1755,"indexExpression":{"expression":{"arguments":[{"id":1752,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1203:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1710_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1710_$","typeString":"type(contract IERC165)"}],"id":1751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1198:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1198:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1710","typeString":"type(contract IERC165)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1212:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"1198:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1177:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1227:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1177:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"ExpressionStatement","src":"1177:54:16"},{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1759,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1242:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1764,"indexExpression":{"expression":{"arguments":[{"id":1761,"name":"IERC6551Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1268:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2338_$","typeString":"type(contract IERC6551Account)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2338_$","typeString":"type(contract IERC6551Account)"}],"id":1760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1263:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1263:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6551Account_$2338","typeString":"type(contract IERC6551Account)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1285:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"1263:33:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1242:55:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1300:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1242:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"ExpressionStatement","src":"1242:62:16"}]},"id":1769,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"1163:2:16"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[],"src":"1166:0:16"},"scope":2131,"src":"1152:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2318],"body":{"id":1827,"nodeType":"Block","src":"1483:390:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1502:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1506:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1502:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1516:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1516:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1502:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1525:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1494:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"1494:49:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1562:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1576:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1568:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:16","typeDescriptions":{}}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1562:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1580:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1554:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"ExpressionStatement","src":"1554:51:16"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1618:8:16","subExpression":{"id":1801,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1618:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1803,"nodeType":"ExpressionStatement","src":"1618:8:16"},{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"success","nameLocation":"1644:7:16","nodeType":"VariableDeclaration","scope":1827,"src":"1639:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1804,"name":"bool","nodeType":"ElementaryTypeName","src":"1639:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1806,"nodeType":"VariableDeclarationStatement","src":"1639:12:16"},{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1807,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1672:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1809,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1662:17:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1727:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1682:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:4:16","memberName":"call","nodeType":"MemberAccess","src":"1682:7:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1697:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1813,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1709:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1709:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32303030","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:4:16","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"1709:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1682:44:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"1662:70:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"ExpressionStatement","src":"1662:70:16"},{"condition":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1749:8:16","subExpression":{"id":1822,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"1750:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"1745:121:16","trueBody":{"id":1825,"nodeType":"Block","src":"1759:107:16","statements":[{"AST":{"nativeSrc":"1783:72:16","nodeType":"YulBlock","src":"1783:72:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"1813:6:16","nodeType":"YulIdentifier","src":"1813:6:16"},{"kind":"number","nativeSrc":"1821:2:16","nodeType":"YulLiteral","src":"1821:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1809:3:16","nodeType":"YulIdentifier","src":"1809:3:16"},"nativeSrc":"1809:15:16","nodeType":"YulFunctionCall","src":"1809:15:16"},{"arguments":[{"name":"result","nativeSrc":"1832:6:16","nodeType":"YulIdentifier","src":"1832:6:16"}],"functionName":{"name":"mload","nativeSrc":"1826:5:16","nodeType":"YulIdentifier","src":"1826:5:16"},"nativeSrc":"1826:13:16","nodeType":"YulFunctionCall","src":"1826:13:16"}],"functionName":{"name":"revert","nativeSrc":"1802:6:16","nodeType":"YulIdentifier","src":"1802:6:16"},"nativeSrc":"1802:38:16","nodeType":"YulFunctionCall","src":"1802:38:16"},"nativeSrc":"1802:38:16","nodeType":"YulExpressionStatement","src":"1802:38:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1780,"isOffset":false,"isSlot":false,"src":"1813:6:16","valueSize":1},{"declaration":1780,"isOffset":false,"isSlot":false,"src":"1832:6:16","valueSize":1}],"id":1824,"nodeType":"InlineAssembly","src":"1774:81:16"}]}}]},"functionSelector":"9e5d4c49","id":1828,"implemented":true,"kind":"function","modifiers":[{"id":1778,"kind":"modifierInvocation","modifierName":{"id":1777,"name":"nonReentrant","nameLocations":["1440:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1440:12:16"},"nodeType":"ModifierInvocation","src":"1440:12:16"}],"name":"executeCall","nameLocation":"1329:11:16","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"to","nameLocation":"1359:2:16","nodeType":"VariableDeclaration","scope":1828,"src":"1351:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"1380:5:16","nodeType":"VariableDeclaration","scope":1828,"src":"1372:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"data","nameLocation":"1411:4:16","nodeType":"VariableDeclaration","scope":1828,"src":"1396:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1774,"name":"bytes","nodeType":"ElementaryTypeName","src":"1396:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1340:82:16"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"result","nameLocation":"1475:6:16","nodeType":"VariableDeclaration","scope":1828,"src":"1462:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"1462:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1461:21:16"},"scope":2131,"src":"1320:553:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1876,"nodeType":"Block","src":"1986:254:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2005:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2009:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2005:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1840,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2019:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2019:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2028:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1997:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"1997:49:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"2065:2:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2079:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2071:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"2071:7:16","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2065:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2083:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2057:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2057:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"2057:51:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1859,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2135:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}],"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{}}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2127:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2141:7:16","memberName":"balance","nodeType":"MemberAccess","src":"2127:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1862,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2152:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2127:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2160:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":1856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2119:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2119:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"2119:62:16"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2194:8:16","subExpression":{"id":1867,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2194:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"2194:8:16"},{"expression":{"arguments":[{"id":1873,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2225:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1870,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"2213:2:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:8:16","memberName":"transfer","nodeType":"MemberAccess","src":"2213:11:16","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"ExpressionStatement","src":"2213:19:16"}]},"functionSelector":"d0679d34","id":1877,"implemented":true,"kind":"function","modifiers":[{"id":1835,"kind":"modifierInvocation","modifierName":{"id":1834,"name":"nonReentrant","nameLocations":["1973:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1973:12:16"},"nodeType":"ModifierInvocation","src":"1973:12:16"}],"name":"send","nameLocation":"1890:4:16","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"to","nameLocation":"1921:2:16","nodeType":"VariableDeclaration","scope":1877,"src":"1905:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"1905:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"amount","nameLocation":"1942:6:16","nodeType":"VariableDeclaration","scope":1877,"src":"1934:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1894:61:16"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"1986:0:16"},"scope":2131,"src":"1881:359:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1935,"nodeType":"Block","src":"2374:324:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2393:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2397:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2393:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2407:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2393:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2416:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2385:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2385:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"ExpressionStatement","src":"2385:49:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"2453:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2459:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:16","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2459:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2453:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2471:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2445:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2445:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"ExpressionStatement","src":"2445:51:16"},{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"balance","nameLocation":"2517:7:16","nodeType":"VariableDeclaration","scope":1935,"src":"2509:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[{"arguments":[{"id":1914,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2559:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:16","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1910,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2527:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2541:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":303,"src":"2527:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2509:56:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2595:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2584:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2603:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2576:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2576:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"2576:48:16"},{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2637:8:16","subExpression":{"id":1925,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2637:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1927,"nodeType":"ExpressionStatement","src":"2637:8:16"},{"expression":{"arguments":[{"id":1931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"2679:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2683:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1928,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2656:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2670:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":313,"src":"2656:22:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"ExpressionStatement","src":"2656:34:16"}]},"functionSelector":"8447305a","id":1936,"implemented":true,"kind":"function","modifiers":[{"id":1887,"kind":"modifierInvocation","modifierName":{"id":1886,"name":"nonReentrant","nameLocations":["2361:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"2361:12:16"},"nodeType":"ModifierInvocation","src":"2361:12:16"}],"name":"sendCustom","nameLocation":"2257:10:16","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"to","nameLocation":"2286:2:16","nodeType":"VariableDeclaration","scope":1936,"src":"2278:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"amount","nameLocation":"2307:6:16","nodeType":"VariableDeclaration","scope":1936,"src":"2299:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2299:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"erc20contract","nameLocation":"2331:13:16","nodeType":"VariableDeclaration","scope":1936,"src":"2324:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"},"typeName":{"id":1883,"nodeType":"UserDefinedTypeName","pathNode":{"id":1882,"name":"IERC20","nameLocations":["2324:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":346,"src":"2324:6:16"},"referencedDeclaration":346,"src":"2324:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$346","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2267:84:16"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"2374:0:16"},"scope":2131,"src":"2248:450:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2327],"body":{"id":1976,"nodeType":"Block","src":"2837:235:16","statements":[{"assignments":[1946],"declarations":[{"constant":false,"id":1946,"mutability":"mutable","name":"length","nameLocation":"2856:6:16","nodeType":"VariableDeclaration","scope":1976,"src":"2848:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1953,"initialValue":{"expression":{"expression":{"arguments":[{"id":1949,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2873:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}],"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2865:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1947,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:16","typeDescriptions":{}}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2879:4:16","memberName":"code","nodeType":"MemberAccess","src":"2865:18:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:16","memberName":"length","nodeType":"MemberAccess","src":"2865:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2848:42:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1960,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2974:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2966:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"2966:7:16","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2966:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2981:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783630","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2990:4:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"src":"2981:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1965,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2996:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1956,"name":"Bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2950:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Bytecode_$2243_$","typeString":"type(library Bytecode)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2959:6:16","memberName":"codeAt","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"2950:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,uint256) view returns (bytes memory)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3023:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:16","typeDescriptions":{}}},{"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3032:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"3032:7:16","typeDescriptions":{}}},{"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3041:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:16","typeDescriptions":{}}}],"id":1973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3022:27:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}],"expression":{"id":1954,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2921:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2925:6:16","memberName":"decode","nodeType":"MemberAccess","src":"2921:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:143:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$","typeString":"tuple(uint256,address payable,uint256)"}},"functionReturnParameters":1944,"id":1975,"nodeType":"Return","src":"2901:163:16"}]},"functionSelector":"b553fe1e","id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"2715:7:16","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"2722:2:16"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"chainId","nameLocation":"2783:7:16","nodeType":"VariableDeclaration","scope":1977,"src":"2775:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"tokenContract","nameLocation":"2800:13:16","nodeType":"VariableDeclaration","scope":1977,"src":"2792:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"2792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"tokenId","nameLocation":"2823:7:16","nodeType":"VariableDeclaration","scope":1977,"src":"2815:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2774:57:16"},"scope":2131,"src":"2706:366:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2332],"body":{"id":2009,"nodeType":"Block","src":"3127:222:16","statements":[{"assignments":[1983,1985,1987],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"chainId","nameLocation":"3147:7:16","nodeType":"VariableDeclaration","scope":2009,"src":"3139:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"tokenContract","nameLocation":"3164:13:16","nodeType":"VariableDeclaration","scope":2009,"src":"3156:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"3156:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"tokenId","nameLocation":"3187:7:16","nodeType":"VariableDeclaration","scope":2009,"src":"3179:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1988,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3198:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$2131","typeString":"contract ERC6551Account"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3217:7:16","memberName":"nftInfo","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"3198:26:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$","typeString":"function () view external returns (uint256,address,uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_uint256_$","typeString":"tuple(uint256,address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3138:88:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3241:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1993,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3252:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3258:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2001,"nodeType":"IfStatement","src":"3237:47:16","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3274:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"3274:7:16","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3274:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1981,"id":2000,"nodeType":"Return","src":"3267:17:16"}},{"expression":{"arguments":[{"id":2006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2003,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3310:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2002,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3302:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$874_$","typeString":"type(contract IERC721)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$874","typeString":"contract IERC721"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:7:16","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":807,"src":"3302:30:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1981,"id":2008,"nodeType":"Return","src":"3295:46:16"}]},"functionSelector":"8da5cb5b","id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3089:5:16","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"3094:2:16"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"3118:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"3118:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3117:9:16"},"scope":2131,"src":"3080:269:16","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1709],"body":{"id":2021,"nodeType":"Block","src":"3431:59:16","statements":[{"expression":{"baseExpression":{"id":2017,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"3449:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2019,"indexExpression":{"id":2018,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"3470:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3449:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2016,"id":2020,"nodeType":"Return","src":"3442:40:16"}]},"functionSelector":"01ffc9a7","id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3366:17:16","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"interfaceId","nameLocation":"3391:11:16","nodeType":"VariableDeclaration","scope":2022,"src":"3384:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2011,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3384:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3383:20:16"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"3425:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"3425:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3424:6:16"},"scope":2131,"src":"3357:133:16","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[891],"body":{"id":2040,"nodeType":"Block","src":"3677:67:16","statements":[{"expression":{"expression":{"expression":{"id":2036,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"3695:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$892_$","typeString":"type(contract IERC721Receiver)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3711:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":891,"src":"3695:32:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3728:8:16","memberName":"selector","nodeType":"MemberAccess","src":"3695:41:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2035,"id":2039,"nodeType":"Return","src":"3688:48:16"}]},"functionSelector":"150b7a02","id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"3507:16:16","nodeType":"FunctionDefinition","overrides":{"id":2032,"nodeType":"OverrideSpecifier","overrides":[],"src":"3651:8:16"},"parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"operator","nameLocation":"3542:8:16","nodeType":"VariableDeclaration","scope":2041,"src":"3534:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"from","nameLocation":"3569:4:16","nodeType":"VariableDeclaration","scope":2041,"src":"3561:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"tokenId","nameLocation":"3592:7:16","nodeType":"VariableDeclaration","scope":2041,"src":"3584:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"data","nameLocation":"3625:4:16","nodeType":"VariableDeclaration","scope":2041,"src":"3610:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2029,"name":"bytes","nodeType":"ElementaryTypeName","src":"3610:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3523:113:16"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"3669:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2033,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3669:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3668:8:16"},"scope":2131,"src":"3498:246:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[249],"body":{"id":2061,"nodeType":"Block","src":"3951:69:16","statements":[{"expression":{"expression":{"expression":{"id":2057,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3969:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$268_$","typeString":"type(contract IERC1155Receiver)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3986:17:16","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":249,"src":"3969:34:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4004:8:16","memberName":"selector","nodeType":"MemberAccess","src":"3969:43:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2056,"id":2060,"nodeType":"Return","src":"3962:50:16"}]},"functionSelector":"f23a6e61","id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"3761:17:16","nodeType":"FunctionDefinition","overrides":{"id":2053,"nodeType":"OverrideSpecifier","overrides":[],"src":"3925:8:16"},"parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"operator","nameLocation":"3797:8:16","nodeType":"VariableDeclaration","scope":2062,"src":"3789:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"3789:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"from","nameLocation":"3824:4:16","nodeType":"VariableDeclaration","scope":2062,"src":"3816:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"3816:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"id","nameLocation":"3847:2:16","nodeType":"VariableDeclaration","scope":2062,"src":"3839:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"value","nameLocation":"3868:5:16","nodeType":"VariableDeclaration","scope":2062,"src":"3860:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"data","nameLocation":"3899:4:16","nodeType":"VariableDeclaration","scope":2062,"src":"3884:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"3884:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3778:132:16"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"3943:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2054,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3943:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3942:8:16"},"scope":2131,"src":"3752:268:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[267],"body":{"id":2084,"nodeType":"Block","src":"4256:74:16","statements":[{"expression":{"expression":{"expression":{"id":2080,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4274:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$268_$","typeString":"type(contract IERC1155Receiver)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4291:22:16","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":267,"src":"4274:39:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4314:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4274:48:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2079,"id":2083,"nodeType":"Return","src":"4267:55:16"}]},"functionSelector":"bc197c81","id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"4037:22:16","nodeType":"FunctionDefinition","overrides":{"id":2076,"nodeType":"OverrideSpecifier","overrides":[],"src":"4230:8:16"},"parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"operator","nameLocation":"4078:8:16","nodeType":"VariableDeclaration","scope":2085,"src":"4070:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"4070:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"from","nameLocation":"4105:4:16","nodeType":"VariableDeclaration","scope":2085,"src":"4097:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"4097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"ids","nameLocation":"4139:3:16","nodeType":"VariableDeclaration","scope":2085,"src":"4120:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"4120:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2068,"nodeType":"ArrayTypeName","src":"4120:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"values","nameLocation":"4172:6:16","nodeType":"VariableDeclaration","scope":2085,"src":"4153:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"4153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ArrayTypeName","src":"4153:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"data","nameLocation":"4204:4:16","nodeType":"VariableDeclaration","scope":2085,"src":"4189:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2073,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4059:156:16"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"4248:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2077,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4248:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4247:8:16"},"scope":2131,"src":"4028:302:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[12],"body":{"id":2116,"nodeType":"Block","src":"4469:268:16","statements":[{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"isValid","nameLocation":"4485:7:16","nodeType":"VariableDeclaration","scope":2116,"src":"4480:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2094,"name":"bool","nodeType":"ElementaryTypeName","src":"4480:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2103,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2098,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4546:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4568:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2101,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4587:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2096,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4495:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$1698_$","typeString":"type(library SignatureChecker)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4512:19:16","memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"4495:36:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:112:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4480:127:16"},{"condition":{"id":2104,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"4624:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"4620:81:16","trueBody":{"id":2109,"nodeType":"Block","src":"4633:68:16","statements":[{"expression":{"expression":{"expression":{"id":2105,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"4655:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4664:16:16","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"4655:25:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4681:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4655:34:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2093,"id":2108,"nodeType":"Return","src":"4648:41:16"}]}},{"expression":{"arguments":[{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4727:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4720:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2111,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4720:6:16","typeDescriptions":{}}},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2093,"id":2115,"nodeType":"Return","src":"4713:16:16"}]},"functionSelector":"1626ba7e","id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"4347:16:16","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"hash","nameLocation":"4382:4:16","nodeType":"VariableDeclaration","scope":2117,"src":"4374:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"signature","nameLocation":"4410:9:16","nodeType":"VariableDeclaration","scope":2117,"src":"4397:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2088,"name":"bytes","nodeType":"ElementaryTypeName","src":"4397:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4363:63:16"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"magicValue","nameLocation":"4457:10:16","nodeType":"VariableDeclaration","scope":2117,"src":"4450:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2091,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4450:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4449:19:16"},"scope":2131,"src":"4338:399:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2337],"body":{"id":2125,"nodeType":"Block","src":"4803:32:16","statements":[{"expression":{"id":2123,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4821:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2124,"nodeType":"Return","src":"4814:13:16"}]},"functionSelector":"affed0e0","id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"4754:5:16","nodeType":"FunctionDefinition","overrides":{"id":2119,"nodeType":"OverrideSpecifier","overrides":[],"src":"4776:8:16"},"parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"4759:2:16"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"4794:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"4794:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4793:9:16"},"scope":2131,"src":"4745:90:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2307],"body":{"id":2129,"nodeType":"Block","src":"4870:2:16","statements":[]},"id":2130,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"4850:2:16"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"4870:0:16"},"scope":2131,"src":"4843:29:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2132,"src":"847:4028:16","usedErrors":[1187,2141],"usedEvents":[2304]}],"src":"33:4844:16"},"id":16},"imports/ERC6551Bytecode.sol":{"ast":{"absolutePath":"imports/ERC6551Bytecode.sol","exportedSymbols":{"Bytecode":[2243]},"id":2244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2133,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Bytecode","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2243,"linearizedBaseContracts":[2243],"name":"Bytecode","nameLocation":"67:8:17","nodeType":"ContractDefinition","nodes":[{"errorSelector":"2c4a89fa","id":2141,"name":"InvalidCodeAtRange","nameLocation":"86:18:17","nodeType":"ErrorDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"_size","nameLocation":"113:5:17","nodeType":"VariableDeclaration","scope":2141,"src":"105:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"105:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"_start","nameLocation":"128:6:17","nodeType":"VariableDeclaration","scope":2141,"src":"120:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"_end","nameLocation":"144:4:17","nodeType":"VariableDeclaration","scope":2141,"src":"136:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:45:17"},"src":"80:70:17"},{"body":{"id":2161,"nodeType":"Block","src":"461:618:17","statements":[{"expression":{"arguments":[{"hexValue":"63","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"981:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},"value":"c"},{"arguments":[{"expression":{"id":2154,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"1003:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1009:6:17","memberName":"length","nodeType":"MemberAccess","src":"1003:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2152,"name":"uint32","nodeType":"ElementaryTypeName","src":"996:6:17","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"80600e6000396000f3","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1024:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""}},{"id":2158,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"1063:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2149,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"957:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"961:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"957:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:117:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2148,"id":2160,"nodeType":"Return","src":"950:124:17"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"154:222:17","text":"@notice Generate a creation code that results on a contract with `_code` as bytecode\n@param _code The returning value of the resulting `creationCode`\n@return creationCode (constructor) for new contract"},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"creationCodeFor","nameLocation":"388:15:17","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"_code","nameLocation":"417:5:17","nodeType":"VariableDeclaration","scope":2162,"src":"404:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2143,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"403:20:17"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"447:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"447:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"446:14:17"},"scope":2243,"src":"379:700:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"1332:49:17","statements":[{"AST":{"nativeSrc":"1347:30:17","nodeType":"YulBlock","src":"1347:30:17","statements":[{"nativeSrc":"1349:26:17","nodeType":"YulAssignment","src":"1349:26:17","value":{"arguments":[{"name":"_addr","nativeSrc":"1369:5:17","nodeType":"YulIdentifier","src":"1369:5:17"}],"functionName":{"name":"extcodesize","nativeSrc":"1357:11:17","nodeType":"YulIdentifier","src":"1357:11:17"},"nativeSrc":"1357:18:17","nodeType":"YulFunctionCall","src":"1357:18:17"},"variableNames":[{"name":"size","nativeSrc":"1349:4:17","nodeType":"YulIdentifier","src":"1349:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2165,"isOffset":false,"isSlot":false,"src":"1369:5:17","valueSize":1},{"declaration":2168,"isOffset":false,"isSlot":false,"src":"1349:4:17","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"1338:39:17"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"1083:176:17","text":"@notice Returns the size of the code on a given address\n@param _addr Address that may or may not contain code\n@return size of the code on the given `_addr`"},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"codeSize","nameLocation":"1271:8:17","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"_addr","nameLocation":"1288:5:17","nodeType":"VariableDeclaration","scope":2172,"src":"1280:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1279:15:17"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"size","nameLocation":"1326:4:17","nodeType":"VariableDeclaration","scope":2172,"src":"1318:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:14:17"},"scope":2243,"src":"1262:119:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"1898:842:17","statements":[{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"csize","nameLocation":"1912:5:17","nodeType":"VariableDeclaration","scope":2241,"src":"1904:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[{"id":2187,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"1929:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2186,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"1920:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1904:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1945:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1954:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1945:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"1941:32:17","trueBody":{"expression":{"arguments":[{"hexValue":"","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1970:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1964:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2193,"name":"bytes","nodeType":"ElementaryTypeName","src":"1964:5:17","typeDescriptions":{}}},"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2183,"id":2197,"nodeType":"Return","src":"1957:16:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1984:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2200,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1993:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1984:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2207,"nodeType":"IfStatement","src":"1980:36:17","trueBody":{"expression":{"arguments":[{"hexValue":"","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2013:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2007:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"2007:5:17","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2183,"id":2206,"nodeType":"Return","src":"2000:16:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2026:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2209,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2033:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2026:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"nodeType":"IfStatement","src":"2022:65:17","trueBody":{"errorCall":{"arguments":[{"id":2212,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2067:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2213,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2074:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2082:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"name":"InvalidCodeAtRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"2048:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2216,"nodeType":"RevertStatement","src":"2041:46:17"}},{"id":2240,"nodeType":"UncheckedBlock","src":"2095:641:17","statements":[{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"reqSize","nameLocation":"2121:7:17","nodeType":"VariableDeclaration","scope":2240,"src":"2113:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2223,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2131:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2221,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2138:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:31:17"},{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"maxSize","nameLocation":"2160:7:17","nodeType":"VariableDeclaration","scope":2240,"src":"2152:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2170:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2227,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2178:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2170:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2152:32:17"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"size","nameLocation":"2201:4:17","nodeType":"VariableDeclaration","scope":2240,"src":"2193:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2238,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2233,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2218:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2236,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2238:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2208:37:17","trueExpression":{"id":2235,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2228:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2193:52:17"},{"AST":{"nativeSrc":"2263:467:17","nodeType":"YulBlock","src":"2263:467:17","statements":[{"nativeSrc":"2399:20:17","nodeType":"YulAssignment","src":"2399:20:17","value":{"arguments":[{"kind":"number","nativeSrc":"2414:4:17","nodeType":"YulLiteral","src":"2414:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2408:5:17","nodeType":"YulIdentifier","src":"2408:5:17"},"nativeSrc":"2408:11:17","nodeType":"YulFunctionCall","src":"2408:11:17"},"variableNames":[{"name":"oCode","nativeSrc":"2399:5:17","nodeType":"YulIdentifier","src":"2399:5:17"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2481:4:17","nodeType":"YulLiteral","src":"2481:4:17","type":"","value":"0x40"},{"arguments":[{"name":"oCode","nativeSrc":"2491:5:17","nodeType":"YulIdentifier","src":"2491:5:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2510:4:17","nodeType":"YulIdentifier","src":"2510:4:17"},{"kind":"number","nativeSrc":"2516:4:17","nodeType":"YulLiteral","src":"2516:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2506:3:17","nodeType":"YulIdentifier","src":"2506:3:17"},"nativeSrc":"2506:15:17","nodeType":"YulFunctionCall","src":"2506:15:17"},{"kind":"number","nativeSrc":"2523:4:17","nodeType":"YulLiteral","src":"2523:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2502:3:17","nodeType":"YulIdentifier","src":"2502:3:17"},"nativeSrc":"2502:26:17","nodeType":"YulFunctionCall","src":"2502:26:17"},{"arguments":[{"kind":"number","nativeSrc":"2534:4:17","nodeType":"YulLiteral","src":"2534:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"2530:3:17","nodeType":"YulIdentifier","src":"2530:3:17"},"nativeSrc":"2530:9:17","nodeType":"YulFunctionCall","src":"2530:9:17"}],"functionName":{"name":"and","nativeSrc":"2498:3:17","nodeType":"YulIdentifier","src":"2498:3:17"},"nativeSrc":"2498:42:17","nodeType":"YulFunctionCall","src":"2498:42:17"}],"functionName":{"name":"add","nativeSrc":"2487:3:17","nodeType":"YulIdentifier","src":"2487:3:17"},"nativeSrc":"2487:54:17","nodeType":"YulFunctionCall","src":"2487:54:17"}],"functionName":{"name":"mstore","nativeSrc":"2474:6:17","nodeType":"YulIdentifier","src":"2474:6:17"},"nativeSrc":"2474:68:17","nodeType":"YulFunctionCall","src":"2474:68:17"},"nativeSrc":"2474:68:17","nodeType":"YulExpressionStatement","src":"2474:68:17"},{"expression":{"arguments":[{"name":"oCode","nativeSrc":"2592:5:17","nodeType":"YulIdentifier","src":"2592:5:17"},{"name":"size","nativeSrc":"2599:4:17","nodeType":"YulIdentifier","src":"2599:4:17"}],"functionName":{"name":"mstore","nativeSrc":"2585:6:17","nodeType":"YulIdentifier","src":"2585:6:17"},"nativeSrc":"2585:19:17","nodeType":"YulFunctionCall","src":"2585:19:17"},"nativeSrc":"2585:19:17","nodeType":"YulExpressionStatement","src":"2585:19:17"},{"expression":{"arguments":[{"name":"_addr","nativeSrc":"2684:5:17","nodeType":"YulIdentifier","src":"2684:5:17"},{"arguments":[{"name":"oCode","nativeSrc":"2695:5:17","nodeType":"YulIdentifier","src":"2695:5:17"},{"kind":"number","nativeSrc":"2702:4:17","nodeType":"YulLiteral","src":"2702:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2691:3:17","nodeType":"YulIdentifier","src":"2691:3:17"},"nativeSrc":"2691:16:17","nodeType":"YulFunctionCall","src":"2691:16:17"},{"name":"_start","nativeSrc":"2709:6:17","nodeType":"YulIdentifier","src":"2709:6:17"},{"name":"size","nativeSrc":"2717:4:17","nodeType":"YulIdentifier","src":"2717:4:17"}],"functionName":{"name":"extcodecopy","nativeSrc":"2672:11:17","nodeType":"YulIdentifier","src":"2672:11:17"},"nativeSrc":"2672:50:17","nodeType":"YulFunctionCall","src":"2672:50:17"},"nativeSrc":"2672:50:17","nodeType":"YulExpressionStatement","src":"2672:50:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2175,"isOffset":false,"isSlot":false,"src":"2684:5:17","valueSize":1},{"declaration":2177,"isOffset":false,"isSlot":false,"src":"2709:6:17","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2399:5:17","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2491:5:17","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2592:5:17","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2695:5:17","valueSize":1},{"declaration":2231,"isOffset":false,"isSlot":false,"src":"2510:4:17","valueSize":1},{"declaration":2231,"isOffset":false,"isSlot":false,"src":"2599:4:17","valueSize":1},{"declaration":2231,"isOffset":false,"isSlot":false,"src":"2717:4:17","valueSize":1}],"id":2239,"nodeType":"InlineAssembly","src":"2254:476:17"}]}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"1385:406:17","text":"@notice Returns the code of a given address\n@dev It will fail if `_end < _start`\n@param _addr Address that may or may not contain code\n@param _start number of bytes of code to skip on read\n@param _end index before which to end extraction\n@return oCode read from `_addr` deployed bytecode\nForked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd"},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"codeAt","nameLocation":"1803:6:17","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"_addr","nameLocation":"1818:5:17","nodeType":"VariableDeclaration","scope":2242,"src":"1810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"1810:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"_start","nameLocation":"1833:6:17","nodeType":"VariableDeclaration","scope":2242,"src":"1825:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"_end","nameLocation":"1849:4:17","nodeType":"VariableDeclaration","scope":2242,"src":"1841:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1809:45:17"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"oCode","nameLocation":"1891:5:17","nodeType":"VariableDeclaration","scope":2242,"src":"1878:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1877:20:17"},"scope":2243,"src":"1794:946:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2244,"src":"59:2683:17","usedErrors":[2141],"usedEvents":[]}],"src":"32:2710:17"},"id":17},"imports/IERC6551.sol":{"ast":{"absolutePath":"imports/IERC6551.sol","exportedSymbols":{"IERC6551Account":[2338],"IERC6551AccountProxy":[2296],"IERC6551Registry":[2290]},"id":2339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2245,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Registry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2290,"linearizedBaseContracts":[2290],"name":"IERC6551Registry","nameLocation":"68:16:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f","id":2259,"name":"AccountCreated","nameLocation":"98:14:18","nodeType":"EventDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"130:7:18","nodeType":"VariableDeclaration","scope":2259,"src":"122:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"indexed":false,"mutability":"mutable","name":"implementation","nameLocation":"155:14:18","nodeType":"VariableDeclaration","scope":2259,"src":"147:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"187:7:18","nodeType":"VariableDeclaration","scope":2259,"src":"179:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"179:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2253,"indexed":false,"mutability":"mutable","name":"tokenContract","nameLocation":"212:13:18","nodeType":"VariableDeclaration","scope":2259,"src":"204:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"243:7:18","nodeType":"VariableDeclaration","scope":2259,"src":"235:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"268:4:18","nodeType":"VariableDeclaration","scope":2259,"src":"260:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112:166:18"},"src":"92:187:18"},{"functionSelector":"c1340f69","id":2274,"implemented":false,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"294:13:18","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"implementation","nameLocation":"325:14:18","nodeType":"VariableDeclaration","scope":2274,"src":"317:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"chainId","nameLocation":"357:7:18","nodeType":"VariableDeclaration","scope":2274,"src":"349:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"tokenContract","nameLocation":"382:13:18","nodeType":"VariableDeclaration","scope":2274,"src":"374:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"tokenId","nameLocation":"413:7:18","nodeType":"VariableDeclaration","scope":2274,"src":"405:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"seed","nameLocation":"438:4:18","nodeType":"VariableDeclaration","scope":2274,"src":"430:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"307:141:18"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"467:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"466:9:18"},"scope":2290,"src":"285:191:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5e9bc536","id":2289,"implemented":false,"kind":"function","modifiers":[],"name":"account","nameLocation":"491:7:18","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"implementation","nameLocation":"516:14:18","nodeType":"VariableDeclaration","scope":2289,"src":"508:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"chainId","nameLocation":"548:7:18","nodeType":"VariableDeclaration","scope":2289,"src":"540:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"tokenContract","nameLocation":"573:13:18","nodeType":"VariableDeclaration","scope":2289,"src":"565:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"tokenId","nameLocation":"604:7:18","nodeType":"VariableDeclaration","scope":2289,"src":"596:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"salt","nameLocation":"629:4:18","nodeType":"VariableDeclaration","scope":2289,"src":"621:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:141:18"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"663:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"662:9:18"},"scope":2290,"src":"482:190:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2339,"src":"58:616:18","usedErrors":[],"usedEvents":[2259]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551AccountProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2296,"linearizedBaseContracts":[2296],"name":"IERC6551AccountProxy","nameLocation":"686:20:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5c60da1b","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"722:14:18","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"736:2:18"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"762:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"761:9:18"},"scope":2296,"src":"713:58:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2339,"src":"676:97:18","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2338,"linearizedBaseContracts":[2338],"name":"IERC6551Account","nameLocation":"785:15:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2","id":2304,"name":"TransactionExecuted","nameLocation":"813:19:18","nodeType":"EventDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"849:6:18","nodeType":"VariableDeclaration","scope":2304,"src":"833:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"873:5:18","nodeType":"VariableDeclaration","scope":2304,"src":"857:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"886:4:18","nodeType":"VariableDeclaration","scope":2304,"src":"880:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"880:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"832:59:18"},"src":"807:85:18"},{"id":2307,"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"905:2:18"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"924:0:18"},"scope":2338,"src":"898:27:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":2318,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"940:11:18","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"to","nameLocation":"969:2:18","nodeType":"VariableDeclaration","scope":2318,"src":"961:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"value","nameLocation":"989:5:18","nodeType":"VariableDeclaration","scope":2318,"src":"981:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"data","nameLocation":"1019:4:18","nodeType":"VariableDeclaration","scope":2318,"src":"1004:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"951:78:18"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"1056:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"1056:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1055:14:18"},"scope":2338,"src":"931:139:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"b553fe1e","id":2327,"implemented":false,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"1085:7:18","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"1092:2:18"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"chainId","nameLocation":"1163:7:18","nodeType":"VariableDeclaration","scope":2327,"src":"1155:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"tokenContract","nameLocation":"1192:13:18","nodeType":"VariableDeclaration","scope":2327,"src":"1184:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"1184:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"tokenId","nameLocation":"1227:7:18","nodeType":"VariableDeclaration","scope":2327,"src":"1219:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:103:18"},"scope":2338,"src":"1076:169:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":2332,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1260:5:18","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[],"src":"1265:2:18"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"1291:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1290:9:18"},"scope":2338,"src":"1251:49:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"affed0e0","id":2337,"implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1315:5:18","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[],"src":"1320:2:18"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2337,"src":"1346:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1345:9:18"},"scope":2338,"src":"1306:49:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2339,"src":"775:582:18","usedErrors":[],"usedEvents":[2304]}],"src":"32:1325:18"},"id":18}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].","kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the value of tokens of token type `id` owned by `account`."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the zero address.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface that must be implemented by smart contracts in order to receive\\n * ERC-1155 token transfers.\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c749a36dc3611dd113e8d02c444c1350764832d827301c78ca10dc6ac88cc1064736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x749A36DC3611DD113E8D02C444 0xC1 CALLDATALOAD SMOD PUSH5 0x832D827301 0xC7 DUP13 LOG1 0xD 0xC6 0xAC DUP9 0xCC LT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c749a36dc3611dd113e8d02c444c1350764832d827301c78ca10dc6ac88cc1064736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x749A36DC3611DD113E8D02C444 0xC1 CALLDATALOAD SMOD PUSH5 0x832D827301 0xC7 DUP13 LOG1 0xD 0xC6 0xAC DUP9 0xCC LT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC-721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9f75679a86f0c4bd53a4d9c017886deba973920fb3df1c373742079bd28c4e464736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF7 JUMP PUSH26 0xA86F0C4BD53A4D9C017886DEBA973920FB3DF1C373742079BD28 0xC4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"233:5799:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9f75679a86f0c4bd53a4d9c017886deba973920fb3df1c373742079bd28c4e464736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF7 JUMP PUSH26 0xA86F0C4BD53A4D9C017886DEBA973920FB3DF1C373742079BD28 0xC4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"233:5799:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8182c77a58fe5e1f4fdd427e1da4f71eada3813f0667b7ddd97210c0c2966264736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP2 DUP3 0xC7 PUSH27 0x58FE5E1F4FDD427E1DA4F71EADA3813F0667B7DDD97210C0C29662 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8182c77a58fe5e1f4fdd427e1da4f71eada3813f0667b7ddd97210c0c2966264736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP2 DUP3 0xC7 PUSH27 0x58FE5E1F4FDD427E1DA4F71EADA3813F0667B7DDD97210C0C29662 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1184,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042234d9ecaa3d8234b3c5bbeabc6a1d969c44f8abc8114bf5f55dfb0c8e44b4164736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x23 0x4D SWAP15 0xCA LOG3 0xD8 0x23 0x4B EXTCODECOPY JUMPDEST 0xBE 0xAB 0xC6 LOG1 0xD9 PUSH10 0xC44F8ABC8114BF5F55DF 0xB0 0xC8 0xE4 0x4B COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042234d9ecaa3d8234b3c5bbeabc6a1d969c44f8abc8114bf5f55dfb0c8e44b4164736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x23 0x4D SWAP15 0xCA LOG3 0xD8 0x23 0x4B EXTCODECOPY JUMPDEST 0xBE 0xAB 0xC6 LOG1 0xD9 PUSH10 0xC44F8ABC8114BF5F55DF 0xB0 0xC8 0xE4 0x4B COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_throwError(enum ECDSA.RecoverError,bytes32)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"devdoc":{"details":"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220064528cdbc51add5e1d291c086658ecf02d5ad0087007d444b6e9892e59e91d464736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD GASLIMIT 0x28 0xCD 0xBC MLOAD 0xAD 0xD5 0xE1 0xD2 SWAP2 0xC0 DUP7 PUSH6 0x8ECF02D5AD00 DUP8 STOP PUSH30 0x444B6E9892E59E91D464736F6C634300081B003300000000000000000000 ","sourceMap":"532:1805:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220064528cdbc51add5e1d291c086658ecf02d5ad0087007d444b6e9892e59e91d464736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD GASLIMIT 0x28 0xCD 0xBC MLOAD 0xAD 0xD5 0xE1 0xD2 SWAP2 0xC0 DUP7 PUSH6 0x8ECF02D5AD00 DUP8 STOP PUSH30 0x444B6E9892E59E91D464736F6C634300081B003300000000000000000000 ","sourceMap":"532:1805:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isValidERC1271SignatureNow(address,bytes32,bytes memory)":"infinite","isValidSignatureNow(address,bytes32,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/N2D-ERC6551-Account.sol":{"ERC6551Account":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"contract IERC20","name":"erc20contract","type":"address"}],"name":"sendCustom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1195":{"entryPoint":null,"id":1195,"parameterSlots":0,"returnSlots":0},"@_1769":{"entryPoint":null,"id":1769,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH32 0x955A9EC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1DBD DUP1 PUSH2 0x13C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x298 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x8447305A EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x367 PUSH2 0x360 PUSH2 0x5E0 JUMP JUMPDEST DUP6 DUP6 PUSH2 0xAC2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x37F JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 SHL SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x396 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x39E PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x54E SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST POP POP PUSH2 0x5DB PUSH2 0xBB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x631 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x66E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x6EE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FB PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x703 PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x7D0 GAS PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x830 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x873 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x889 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP PUSH2 0x892 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x8DB ADDRESS PUSH1 0x60 DUP4 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST DUP4 PUSH2 0xBC1 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x91A PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA54 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAA8 PUSH2 0xBB7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 PUSH2 0xAEF DUP6 DUP6 PUSH2 0xCA6 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xB53 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xB6A JUMP JUMPDEST PUSH2 0xB67 DUP5 DUP5 DUP5 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xBCE DUP6 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xC9F JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xC9F JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xC76 JUMPI DUP3 PUSH2 0xC78 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xCDD DUP9 DUP3 DUP6 DUP6 PUSH2 0xE31 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD31 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDD7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE1B JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xF1B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH2 0xF39 JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8B DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP5 DUP3 DUP6 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0xFBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP2 EQ PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104C DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP2 EQ PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1082 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AD JUMPI PUSH2 0x10AC PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x108D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x10E5 PUSH2 0x1092 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH2 0x1108 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP9 DUP3 DUP10 ADD PUSH2 0x103D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1128 DUP9 DUP3 DUP10 ADD PUSH2 0x103D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1139 DUP9 DUP3 DUP10 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1166 DUP9 DUP3 DUP10 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0xF39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1199 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B2 DUP2 PUSH2 0x119F JUMP JUMPDEST DUP2 EQ PUSH2 0x11BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CF DUP2 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1223 DUP3 PUSH2 0x11DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x1261 DUP3 DUP3 PUSH2 0x121A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST PUSH2 0x128A DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 PUSH2 0x12B4 DUP5 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x11D5 JUMP JUMPDEST JUMPDEST PUSH2 0x12E0 DUP5 DUP3 DUP6 PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12FD JUMPI PUSH2 0x12FC PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x130D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP6 DUP3 DUP7 ADD PUSH2 0x11C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1368 DUP6 DUP3 DUP7 ADD PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137D DUP3 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x1372 JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP7 DUP3 DUP8 ADD PUSH2 0x103D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13F9 DUP7 DUP3 DUP8 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP8 DUP3 DUP9 ADD PUSH2 0x103D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1466 DUP8 DUP3 DUP9 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1486 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1493 DUP8 DUP3 DUP9 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x14FC DUP2 DUP6 PUSH2 0x14AC JUMP JUMPDEST SWAP4 POP PUSH2 0x150C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 DUP5 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1581 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x158E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x159B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B9 JUMPI PUSH2 0x15B8 PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x108D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x1092 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP12 DUP3 DUP13 ADD PUSH2 0x103D JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1638 DUP12 DUP3 DUP13 ADD PUSH2 0x103D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1665 DUP12 DUP3 DUP13 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1694 DUP12 DUP3 DUP13 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x16C3 DUP12 DUP3 DUP13 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E0 DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F0 DUP2 PUSH2 0x16D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x16FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170D DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x172A JUMPI PUSH2 0x1729 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1738 DUP6 DUP3 DUP7 ADD PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1749 DUP6 DUP3 DUP7 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177E DUP10 DUP3 DUP11 ADD PUSH2 0x103D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x178F DUP10 DUP3 DUP11 ADD PUSH2 0x103D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17A0 DUP10 DUP3 DUP11 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x17B1 DUP10 DUP3 DUP11 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x17DE DUP10 DUP3 DUP11 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1834 PUSH1 0xF DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x183F DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1863 DUP2 PUSH2 0x1827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A0 PUSH1 0x16 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x18AB DUP3 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CF DUP2 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18E5 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP5 DUP3 DUP6 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E PUSH1 0x12 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197D DUP2 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19BE DUP3 PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19F0 JUMPI PUSH2 0x19EF PUSH2 0x1984 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A10 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x1A1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2D DUP2 PUSH2 0xFBE JUMP JUMPDEST DUP2 EQ PUSH2 0x1A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A4A DUP2 PUSH2 0x1A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A74 DUP5 DUP3 DUP6 ADD PUSH2 0x1A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8C DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB9 DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ACA DUP7 DUP3 DUP8 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ADB DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH2 0x1AFA PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP5 DUP3 DUP6 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP3 PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B28 DUP4 PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B3F PUSH2 0x1984 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP4 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6A DUP4 DUP6 DUP5 PUSH2 0x1297 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B83 DUP3 DUP5 DUP7 PUSH2 0x1B51 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9E DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDC DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BED DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C3B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1C48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1C55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C66 DUP2 PUSH2 0x119F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C93 DUP2 DUP5 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1CB1 DUP2 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 DUP5 PUSH2 0x1C9C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF3 DUP2 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3C DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D57 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1D64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x1D71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C5D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH1 0x2E 0xAE 0xF ADDMOD PUSH30 0xC72EED6B5D9101F8249C05CEEC570F2BA060AE3399520100B364736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"847:4028:16:-:0;;;1152:160;;;;;;;;;;1857:1:12;2061:7;:21;;;;1227:4:16;1177:20;:47;1198:25;1177:47;;;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;1300:4;1242:20;:55;1263:33;1242:55;;;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;847:4028;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2130":{"entryPoint":null,"id":2130,"parameterSlots":0,"returnSlots":0},"@_nonReentrantAfter_1230":{"entryPoint":2999,"id":1230,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1222":{"entryPoint":2929,"id":1222,"parameterSlots":0,"returnSlots":0},"@codeAt_2242":{"entryPoint":3009,"id":2242,"parameterSlots":3,"returnSlots":1},"@codeSize_2172":{"entryPoint":3622,"id":2172,"parameterSlots":1,"returnSlots":1},"@executeCall_1828":{"entryPoint":1777,"id":1828,"parameterSlots":4,"returnSlots":1},"@isValidERC1271SignatureNow_1697":{"entryPoint":3330,"id":1697,"parameterSlots":3,"returnSlots":1},"@isValidSignatureNow_1645":{"entryPoint":2754,"id":1645,"parameterSlots":3,"returnSlots":1},"@isValidSignature_2117":{"entryPoint":850,"id":2117,"parameterSlots":2,"returnSlots":1},"@nftInfo_1977":{"entryPoint":2212,"id":1977,"parameterSlots":0,"returnSlots":3},"@nonce_2126":{"entryPoint":2202,"id":2126,"parameterSlots":0,"returnSlots":1},"@onERC1155BatchReceived_2085":{"entryPoint":2298,"id":2085,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_2062":{"entryPoint":2732,"id":2062,"parameterSlots":6,"returnSlots":1},"@onERC721Received_2041":{"entryPoint":829,"id":2041,"parameterSlots":5,"returnSlots":1},"@owner_2010":{"entryPoint":1504,"id":2010,"parameterSlots":0,"returnSlots":1},"@sendCustom_1936":{"entryPoint":910,"id":1936,"parameterSlots":3,"returnSlots":0},"@send_1877":{"entryPoint":2322,"id":1877,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2022":{"entryPoint":725,"id":2022,"parameterSlots":1,"returnSlots":1},"@tryRecover_1316":{"entryPoint":3238,"id":1316,"parameterSlots":2,"returnSlots":3},"@tryRecover_1504":{"entryPoint":3633,"id":1504,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":6781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":7055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":6715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":7396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":3964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4247,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$346":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4211,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5907,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":5625,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4333,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":5971,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":5165,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$346":{"entryPoint":5040,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6736,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":4886,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory":{"entryPoint":7076,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory":{"entryPoint":6802,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4042,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":4469,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6993,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack":{"entryPoint":6291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack":{"entryPoint":6465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack":{"entryPoint":6183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7030,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6651,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7276,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7490,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":4484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6500,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6218,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":5484,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7206,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":4683,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3877,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4710,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5281,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5292,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6982,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6125,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6930,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4116,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5845,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4030,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4511,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":3897,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$346":{"entryPoint":4978,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7462,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4759,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5309,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4634,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":6579,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6532,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7159,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4587,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4237,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4232,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4242,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4565,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3892,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3887,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4570,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556":{"entryPoint":6250,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d":{"entryPoint":6424,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":6142,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4134,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5863,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4521,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":3941,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$346":{"entryPoint":4996,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4188,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:27352:19","nodeType":"YulBlock","src":"0:27352:19","statements":[{"body":{"nativeSrc":"47:35:19","nodeType":"YulBlock","src":"47:35:19","statements":[{"nativeSrc":"57:19:19","nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:19","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:19","nodeType":"YulIdentifier","src":"67:5:19"},"nativeSrc":"67:9:19","nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:19","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:19","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nativeSrc":"177:28:19","nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:19","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:19","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:19","nodeType":"YulIdentifier","src":"187:6:19"},"nativeSrc":"187:12:19","nodeType":"YulFunctionCall","src":"187:12:19"},"nativeSrc":"187:12:19","nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:19","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nativeSrc":"300:28:19","nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:19","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:19","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:19","nodeType":"YulIdentifier","src":"310:6:19"},"nativeSrc":"310:12:19","nodeType":"YulFunctionCall","src":"310:12:19"},"nativeSrc":"310:12:19","nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:19","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nativeSrc":"378:105:19","nodeType":"YulBlock","src":"378:105:19","statements":[{"nativeSrc":"388:89:19","nodeType":"YulAssignment","src":"388:89:19","value":{"arguments":[{"name":"value","nativeSrc":"403:5:19","nodeType":"YulIdentifier","src":"403:5:19"},{"kind":"number","nativeSrc":"410:66:19","nodeType":"YulLiteral","src":"410:66:19","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:19","nodeType":"YulIdentifier","src":"399:3:19"},"nativeSrc":"399:78:19","nodeType":"YulFunctionCall","src":"399:78:19"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:19","nodeType":"YulIdentifier","src":"388:7:19"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:19","nodeType":"YulTypedName","src":"360:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:19","nodeType":"YulTypedName","src":"370:7:19","type":""}],"src":"334:149:19"},{"body":{"nativeSrc":"531:78:19","nodeType":"YulBlock","src":"531:78:19","statements":[{"body":{"nativeSrc":"587:16:19","nodeType":"YulBlock","src":"587:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:19","nodeType":"YulLiteral","src":"596:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:19","nodeType":"YulLiteral","src":"599:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:19","nodeType":"YulIdentifier","src":"589:6:19"},"nativeSrc":"589:12:19","nodeType":"YulFunctionCall","src":"589:12:19"},"nativeSrc":"589:12:19","nodeType":"YulExpressionStatement","src":"589:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:19","nodeType":"YulIdentifier","src":"554:5:19"},{"arguments":[{"name":"value","nativeSrc":"578:5:19","nodeType":"YulIdentifier","src":"578:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:19","nodeType":"YulIdentifier","src":"561:16:19"},"nativeSrc":"561:23:19","nodeType":"YulFunctionCall","src":"561:23:19"}],"functionName":{"name":"eq","nativeSrc":"551:2:19","nodeType":"YulIdentifier","src":"551:2:19"},"nativeSrc":"551:34:19","nodeType":"YulFunctionCall","src":"551:34:19"}],"functionName":{"name":"iszero","nativeSrc":"544:6:19","nodeType":"YulIdentifier","src":"544:6:19"},"nativeSrc":"544:42:19","nodeType":"YulFunctionCall","src":"544:42:19"},"nativeSrc":"541:62:19","nodeType":"YulIf","src":"541:62:19"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:19","nodeType":"YulTypedName","src":"524:5:19","type":""}],"src":"489:120:19"},{"body":{"nativeSrc":"666:86:19","nodeType":"YulBlock","src":"666:86:19","statements":[{"nativeSrc":"676:29:19","nodeType":"YulAssignment","src":"676:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:19","nodeType":"YulIdentifier","src":"698:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:19","nodeType":"YulIdentifier","src":"685:12:19"},"nativeSrc":"685:20:19","nodeType":"YulFunctionCall","src":"685:20:19"},"variableNames":[{"name":"value","nativeSrc":"676:5:19","nodeType":"YulIdentifier","src":"676:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:19","nodeType":"YulIdentifier","src":"740:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:19","nodeType":"YulIdentifier","src":"714:25:19"},"nativeSrc":"714:32:19","nodeType":"YulFunctionCall","src":"714:32:19"},"nativeSrc":"714:32:19","nodeType":"YulExpressionStatement","src":"714:32:19"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:19","nodeType":"YulTypedName","src":"644:6:19","type":""},{"name":"end","nativeSrc":"652:3:19","nodeType":"YulTypedName","src":"652:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:19","nodeType":"YulTypedName","src":"660:5:19","type":""}],"src":"615:137:19"},{"body":{"nativeSrc":"823:262:19","nodeType":"YulBlock","src":"823:262:19","statements":[{"body":{"nativeSrc":"869:83:19","nodeType":"YulBlock","src":"869:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:19","nodeType":"YulIdentifier","src":"871:77:19"},"nativeSrc":"871:79:19","nodeType":"YulFunctionCall","src":"871:79:19"},"nativeSrc":"871:79:19","nodeType":"YulExpressionStatement","src":"871:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:19","nodeType":"YulIdentifier","src":"844:7:19"},{"name":"headStart","nativeSrc":"853:9:19","nodeType":"YulIdentifier","src":"853:9:19"}],"functionName":{"name":"sub","nativeSrc":"840:3:19","nodeType":"YulIdentifier","src":"840:3:19"},"nativeSrc":"840:23:19","nodeType":"YulFunctionCall","src":"840:23:19"},{"kind":"number","nativeSrc":"865:2:19","nodeType":"YulLiteral","src":"865:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:19","nodeType":"YulIdentifier","src":"836:3:19"},"nativeSrc":"836:32:19","nodeType":"YulFunctionCall","src":"836:32:19"},"nativeSrc":"833:119:19","nodeType":"YulIf","src":"833:119:19"},{"nativeSrc":"962:116:19","nodeType":"YulBlock","src":"962:116:19","statements":[{"nativeSrc":"977:15:19","nodeType":"YulVariableDeclaration","src":"977:15:19","value":{"kind":"number","nativeSrc":"991:1:19","nodeType":"YulLiteral","src":"991:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:19","nodeType":"YulTypedName","src":"981:6:19","type":""}]},{"nativeSrc":"1006:62:19","nodeType":"YulAssignment","src":"1006:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:19","nodeType":"YulIdentifier","src":"1040:9:19"},{"name":"offset","nativeSrc":"1051:6:19","nodeType":"YulIdentifier","src":"1051:6:19"}],"functionName":{"name":"add","nativeSrc":"1036:3:19","nodeType":"YulIdentifier","src":"1036:3:19"},"nativeSrc":"1036:22:19","nodeType":"YulFunctionCall","src":"1036:22:19"},{"name":"dataEnd","nativeSrc":"1060:7:19","nodeType":"YulIdentifier","src":"1060:7:19"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:19","nodeType":"YulIdentifier","src":"1016:19:19"},"nativeSrc":"1016:52:19","nodeType":"YulFunctionCall","src":"1016:52:19"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:19","nodeType":"YulIdentifier","src":"1006:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:19","nodeType":"YulTypedName","src":"793:9:19","type":""},{"name":"dataEnd","nativeSrc":"804:7:19","nodeType":"YulTypedName","src":"804:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:19","nodeType":"YulTypedName","src":"816:6:19","type":""}],"src":"758:327:19"},{"body":{"nativeSrc":"1133:48:19","nodeType":"YulBlock","src":"1133:48:19","statements":[{"nativeSrc":"1143:32:19","nodeType":"YulAssignment","src":"1143:32:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:19","nodeType":"YulIdentifier","src":"1168:5:19"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:19","nodeType":"YulIdentifier","src":"1161:6:19"},"nativeSrc":"1161:13:19","nodeType":"YulFunctionCall","src":"1161:13:19"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:19","nodeType":"YulIdentifier","src":"1154:6:19"},"nativeSrc":"1154:21:19","nodeType":"YulFunctionCall","src":"1154:21:19"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:19","nodeType":"YulIdentifier","src":"1143:7:19"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:19","nodeType":"YulTypedName","src":"1115:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:19","nodeType":"YulTypedName","src":"1125:7:19","type":""}],"src":"1091:90:19"},{"body":{"nativeSrc":"1246:50:19","nodeType":"YulBlock","src":"1246:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:19","nodeType":"YulIdentifier","src":"1263:3:19"},{"arguments":[{"name":"value","nativeSrc":"1283:5:19","nodeType":"YulIdentifier","src":"1283:5:19"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:19","nodeType":"YulIdentifier","src":"1268:14:19"},"nativeSrc":"1268:21:19","nodeType":"YulFunctionCall","src":"1268:21:19"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:19","nodeType":"YulIdentifier","src":"1256:6:19"},"nativeSrc":"1256:34:19","nodeType":"YulFunctionCall","src":"1256:34:19"},"nativeSrc":"1256:34:19","nodeType":"YulExpressionStatement","src":"1256:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:19","nodeType":"YulTypedName","src":"1234:5:19","type":""},{"name":"pos","nativeSrc":"1241:3:19","nodeType":"YulTypedName","src":"1241:3:19","type":""}],"src":"1187:109:19"},{"body":{"nativeSrc":"1394:118:19","nodeType":"YulBlock","src":"1394:118:19","statements":[{"nativeSrc":"1404:26:19","nodeType":"YulAssignment","src":"1404:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:19","nodeType":"YulIdentifier","src":"1416:9:19"},{"kind":"number","nativeSrc":"1427:2:19","nodeType":"YulLiteral","src":"1427:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:19","nodeType":"YulIdentifier","src":"1412:3:19"},"nativeSrc":"1412:18:19","nodeType":"YulFunctionCall","src":"1412:18:19"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:19","nodeType":"YulIdentifier","src":"1404:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:19","nodeType":"YulIdentifier","src":"1478:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:19","nodeType":"YulIdentifier","src":"1491:9:19"},{"kind":"number","nativeSrc":"1502:1:19","nodeType":"YulLiteral","src":"1502:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:19","nodeType":"YulIdentifier","src":"1487:3:19"},"nativeSrc":"1487:17:19","nodeType":"YulFunctionCall","src":"1487:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:19","nodeType":"YulIdentifier","src":"1440:37:19"},"nativeSrc":"1440:65:19","nodeType":"YulFunctionCall","src":"1440:65:19"},"nativeSrc":"1440:65:19","nodeType":"YulExpressionStatement","src":"1440:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:19","nodeType":"YulTypedName","src":"1366:9:19","type":""},{"name":"value0","nativeSrc":"1378:6:19","nodeType":"YulTypedName","src":"1378:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:19","nodeType":"YulTypedName","src":"1389:4:19","type":""}],"src":"1302:210:19"},{"body":{"nativeSrc":"1563:81:19","nodeType":"YulBlock","src":"1563:81:19","statements":[{"nativeSrc":"1573:65:19","nodeType":"YulAssignment","src":"1573:65:19","value":{"arguments":[{"name":"value","nativeSrc":"1588:5:19","nodeType":"YulIdentifier","src":"1588:5:19"},{"kind":"number","nativeSrc":"1595:42:19","nodeType":"YulLiteral","src":"1595:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1584:3:19","nodeType":"YulIdentifier","src":"1584:3:19"},"nativeSrc":"1584:54:19","nodeType":"YulFunctionCall","src":"1584:54:19"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:19","nodeType":"YulIdentifier","src":"1573:7:19"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1518:126:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:19","nodeType":"YulTypedName","src":"1545:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:19","nodeType":"YulTypedName","src":"1555:7:19","type":""}],"src":"1518:126:19"},{"body":{"nativeSrc":"1695:51:19","nodeType":"YulBlock","src":"1695:51:19","statements":[{"nativeSrc":"1705:35:19","nodeType":"YulAssignment","src":"1705:35:19","value":{"arguments":[{"name":"value","nativeSrc":"1734:5:19","nodeType":"YulIdentifier","src":"1734:5:19"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1716:17:19","nodeType":"YulIdentifier","src":"1716:17:19"},"nativeSrc":"1716:24:19","nodeType":"YulFunctionCall","src":"1716:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"1705:7:19","nodeType":"YulIdentifier","src":"1705:7:19"}]}]},"name":"cleanup_t_address","nativeSrc":"1650:96:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1677:5:19","nodeType":"YulTypedName","src":"1677:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1687:7:19","nodeType":"YulTypedName","src":"1687:7:19","type":""}],"src":"1650:96:19"},{"body":{"nativeSrc":"1795:79:19","nodeType":"YulBlock","src":"1795:79:19","statements":[{"body":{"nativeSrc":"1852:16:19","nodeType":"YulBlock","src":"1852:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1861:1:19","nodeType":"YulLiteral","src":"1861:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1864:1:19","nodeType":"YulLiteral","src":"1864:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1854:6:19","nodeType":"YulIdentifier","src":"1854:6:19"},"nativeSrc":"1854:12:19","nodeType":"YulFunctionCall","src":"1854:12:19"},"nativeSrc":"1854:12:19","nodeType":"YulExpressionStatement","src":"1854:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1818:5:19","nodeType":"YulIdentifier","src":"1818:5:19"},{"arguments":[{"name":"value","nativeSrc":"1843:5:19","nodeType":"YulIdentifier","src":"1843:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1825:17:19","nodeType":"YulIdentifier","src":"1825:17:19"},"nativeSrc":"1825:24:19","nodeType":"YulFunctionCall","src":"1825:24:19"}],"functionName":{"name":"eq","nativeSrc":"1815:2:19","nodeType":"YulIdentifier","src":"1815:2:19"},"nativeSrc":"1815:35:19","nodeType":"YulFunctionCall","src":"1815:35:19"}],"functionName":{"name":"iszero","nativeSrc":"1808:6:19","nodeType":"YulIdentifier","src":"1808:6:19"},"nativeSrc":"1808:43:19","nodeType":"YulFunctionCall","src":"1808:43:19"},"nativeSrc":"1805:63:19","nodeType":"YulIf","src":"1805:63:19"}]},"name":"validator_revert_t_address","nativeSrc":"1752:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1788:5:19","nodeType":"YulTypedName","src":"1788:5:19","type":""}],"src":"1752:122:19"},{"body":{"nativeSrc":"1932:87:19","nodeType":"YulBlock","src":"1932:87:19","statements":[{"nativeSrc":"1942:29:19","nodeType":"YulAssignment","src":"1942:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"1964:6:19","nodeType":"YulIdentifier","src":"1964:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"1951:12:19","nodeType":"YulIdentifier","src":"1951:12:19"},"nativeSrc":"1951:20:19","nodeType":"YulFunctionCall","src":"1951:20:19"},"variableNames":[{"name":"value","nativeSrc":"1942:5:19","nodeType":"YulIdentifier","src":"1942:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2007:5:19","nodeType":"YulIdentifier","src":"2007:5:19"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1980:26:19","nodeType":"YulIdentifier","src":"1980:26:19"},"nativeSrc":"1980:33:19","nodeType":"YulFunctionCall","src":"1980:33:19"},"nativeSrc":"1980:33:19","nodeType":"YulExpressionStatement","src":"1980:33:19"}]},"name":"abi_decode_t_address","nativeSrc":"1880:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1910:6:19","nodeType":"YulTypedName","src":"1910:6:19","type":""},{"name":"end","nativeSrc":"1918:3:19","nodeType":"YulTypedName","src":"1918:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1926:5:19","nodeType":"YulTypedName","src":"1926:5:19","type":""}],"src":"1880:139:19"},{"body":{"nativeSrc":"2070:32:19","nodeType":"YulBlock","src":"2070:32:19","statements":[{"nativeSrc":"2080:16:19","nodeType":"YulAssignment","src":"2080:16:19","value":{"name":"value","nativeSrc":"2091:5:19","nodeType":"YulIdentifier","src":"2091:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"2080:7:19","nodeType":"YulIdentifier","src":"2080:7:19"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2025:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2052:5:19","nodeType":"YulTypedName","src":"2052:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2062:7:19","nodeType":"YulTypedName","src":"2062:7:19","type":""}],"src":"2025:77:19"},{"body":{"nativeSrc":"2151:79:19","nodeType":"YulBlock","src":"2151:79:19","statements":[{"body":{"nativeSrc":"2208:16:19","nodeType":"YulBlock","src":"2208:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2217:1:19","nodeType":"YulLiteral","src":"2217:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2220:1:19","nodeType":"YulLiteral","src":"2220:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2210:6:19","nodeType":"YulIdentifier","src":"2210:6:19"},"nativeSrc":"2210:12:19","nodeType":"YulFunctionCall","src":"2210:12:19"},"nativeSrc":"2210:12:19","nodeType":"YulExpressionStatement","src":"2210:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2174:5:19","nodeType":"YulIdentifier","src":"2174:5:19"},{"arguments":[{"name":"value","nativeSrc":"2199:5:19","nodeType":"YulIdentifier","src":"2199:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2181:17:19","nodeType":"YulIdentifier","src":"2181:17:19"},"nativeSrc":"2181:24:19","nodeType":"YulFunctionCall","src":"2181:24:19"}],"functionName":{"name":"eq","nativeSrc":"2171:2:19","nodeType":"YulIdentifier","src":"2171:2:19"},"nativeSrc":"2171:35:19","nodeType":"YulFunctionCall","src":"2171:35:19"}],"functionName":{"name":"iszero","nativeSrc":"2164:6:19","nodeType":"YulIdentifier","src":"2164:6:19"},"nativeSrc":"2164:43:19","nodeType":"YulFunctionCall","src":"2164:43:19"},"nativeSrc":"2161:63:19","nodeType":"YulIf","src":"2161:63:19"}]},"name":"validator_revert_t_uint256","nativeSrc":"2108:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2144:5:19","nodeType":"YulTypedName","src":"2144:5:19","type":""}],"src":"2108:122:19"},{"body":{"nativeSrc":"2288:87:19","nodeType":"YulBlock","src":"2288:87:19","statements":[{"nativeSrc":"2298:29:19","nodeType":"YulAssignment","src":"2298:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"2320:6:19","nodeType":"YulIdentifier","src":"2320:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"2307:12:19","nodeType":"YulIdentifier","src":"2307:12:19"},"nativeSrc":"2307:20:19","nodeType":"YulFunctionCall","src":"2307:20:19"},"variableNames":[{"name":"value","nativeSrc":"2298:5:19","nodeType":"YulIdentifier","src":"2298:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2363:5:19","nodeType":"YulIdentifier","src":"2363:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2336:26:19","nodeType":"YulIdentifier","src":"2336:26:19"},"nativeSrc":"2336:33:19","nodeType":"YulFunctionCall","src":"2336:33:19"},"nativeSrc":"2336:33:19","nodeType":"YulExpressionStatement","src":"2336:33:19"}]},"name":"abi_decode_t_uint256","nativeSrc":"2236:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2266:6:19","nodeType":"YulTypedName","src":"2266:6:19","type":""},{"name":"end","nativeSrc":"2274:3:19","nodeType":"YulTypedName","src":"2274:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2282:5:19","nodeType":"YulTypedName","src":"2282:5:19","type":""}],"src":"2236:139:19"},{"body":{"nativeSrc":"2470:28:19","nodeType":"YulBlock","src":"2470:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2487:1:19","nodeType":"YulLiteral","src":"2487:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2490:1:19","nodeType":"YulLiteral","src":"2490:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2480:6:19","nodeType":"YulIdentifier","src":"2480:6:19"},"nativeSrc":"2480:12:19","nodeType":"YulFunctionCall","src":"2480:12:19"},"nativeSrc":"2480:12:19","nodeType":"YulExpressionStatement","src":"2480:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2381:117:19","nodeType":"YulFunctionDefinition","src":"2381:117:19"},{"body":{"nativeSrc":"2593:28:19","nodeType":"YulBlock","src":"2593:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2610:1:19","nodeType":"YulLiteral","src":"2610:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2613:1:19","nodeType":"YulLiteral","src":"2613:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2603:6:19","nodeType":"YulIdentifier","src":"2603:6:19"},"nativeSrc":"2603:12:19","nodeType":"YulFunctionCall","src":"2603:12:19"},"nativeSrc":"2603:12:19","nodeType":"YulExpressionStatement","src":"2603:12:19"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"2504:117:19","nodeType":"YulFunctionDefinition","src":"2504:117:19"},{"body":{"nativeSrc":"2716:28:19","nodeType":"YulBlock","src":"2716:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2733:1:19","nodeType":"YulLiteral","src":"2733:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2736:1:19","nodeType":"YulLiteral","src":"2736:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2726:6:19","nodeType":"YulIdentifier","src":"2726:6:19"},"nativeSrc":"2726:12:19","nodeType":"YulFunctionCall","src":"2726:12:19"},"nativeSrc":"2726:12:19","nodeType":"YulExpressionStatement","src":"2726:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2627:117:19","nodeType":"YulFunctionDefinition","src":"2627:117:19"},{"body":{"nativeSrc":"2837:478:19","nodeType":"YulBlock","src":"2837:478:19","statements":[{"body":{"nativeSrc":"2886:83:19","nodeType":"YulBlock","src":"2886:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2888:77:19","nodeType":"YulIdentifier","src":"2888:77:19"},"nativeSrc":"2888:79:19","nodeType":"YulFunctionCall","src":"2888:79:19"},"nativeSrc":"2888:79:19","nodeType":"YulExpressionStatement","src":"2888:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2865:6:19","nodeType":"YulIdentifier","src":"2865:6:19"},{"kind":"number","nativeSrc":"2873:4:19","nodeType":"YulLiteral","src":"2873:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2861:3:19","nodeType":"YulIdentifier","src":"2861:3:19"},"nativeSrc":"2861:17:19","nodeType":"YulFunctionCall","src":"2861:17:19"},{"name":"end","nativeSrc":"2880:3:19","nodeType":"YulIdentifier","src":"2880:3:19"}],"functionName":{"name":"slt","nativeSrc":"2857:3:19","nodeType":"YulIdentifier","src":"2857:3:19"},"nativeSrc":"2857:27:19","nodeType":"YulFunctionCall","src":"2857:27:19"}],"functionName":{"name":"iszero","nativeSrc":"2850:6:19","nodeType":"YulIdentifier","src":"2850:6:19"},"nativeSrc":"2850:35:19","nodeType":"YulFunctionCall","src":"2850:35:19"},"nativeSrc":"2847:122:19","nodeType":"YulIf","src":"2847:122:19"},{"nativeSrc":"2978:30:19","nodeType":"YulAssignment","src":"2978:30:19","value":{"arguments":[{"name":"offset","nativeSrc":"3001:6:19","nodeType":"YulIdentifier","src":"3001:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"2988:12:19","nodeType":"YulIdentifier","src":"2988:12:19"},"nativeSrc":"2988:20:19","nodeType":"YulFunctionCall","src":"2988:20:19"},"variableNames":[{"name":"length","nativeSrc":"2978:6:19","nodeType":"YulIdentifier","src":"2978:6:19"}]},{"body":{"nativeSrc":"3051:83:19","nodeType":"YulBlock","src":"3051:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"3053:77:19","nodeType":"YulIdentifier","src":"3053:77:19"},"nativeSrc":"3053:79:19","nodeType":"YulFunctionCall","src":"3053:79:19"},"nativeSrc":"3053:79:19","nodeType":"YulExpressionStatement","src":"3053:79:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3023:6:19","nodeType":"YulIdentifier","src":"3023:6:19"},{"kind":"number","nativeSrc":"3031:18:19","nodeType":"YulLiteral","src":"3031:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3020:2:19","nodeType":"YulIdentifier","src":"3020:2:19"},"nativeSrc":"3020:30:19","nodeType":"YulFunctionCall","src":"3020:30:19"},"nativeSrc":"3017:117:19","nodeType":"YulIf","src":"3017:117:19"},{"nativeSrc":"3143:29:19","nodeType":"YulAssignment","src":"3143:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"3159:6:19","nodeType":"YulIdentifier","src":"3159:6:19"},{"kind":"number","nativeSrc":"3167:4:19","nodeType":"YulLiteral","src":"3167:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3155:3:19","nodeType":"YulIdentifier","src":"3155:3:19"},"nativeSrc":"3155:17:19","nodeType":"YulFunctionCall","src":"3155:17:19"},"variableNames":[{"name":"arrayPos","nativeSrc":"3143:8:19","nodeType":"YulIdentifier","src":"3143:8:19"}]},{"body":{"nativeSrc":"3226:83:19","nodeType":"YulBlock","src":"3226:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3228:77:19","nodeType":"YulIdentifier","src":"3228:77:19"},"nativeSrc":"3228:79:19","nodeType":"YulFunctionCall","src":"3228:79:19"},"nativeSrc":"3228:79:19","nodeType":"YulExpressionStatement","src":"3228:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"3191:8:19","nodeType":"YulIdentifier","src":"3191:8:19"},{"arguments":[{"name":"length","nativeSrc":"3205:6:19","nodeType":"YulIdentifier","src":"3205:6:19"},{"kind":"number","nativeSrc":"3213:4:19","nodeType":"YulLiteral","src":"3213:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"3201:3:19","nodeType":"YulIdentifier","src":"3201:3:19"},"nativeSrc":"3201:17:19","nodeType":"YulFunctionCall","src":"3201:17:19"}],"functionName":{"name":"add","nativeSrc":"3187:3:19","nodeType":"YulIdentifier","src":"3187:3:19"},"nativeSrc":"3187:32:19","nodeType":"YulFunctionCall","src":"3187:32:19"},{"name":"end","nativeSrc":"3221:3:19","nodeType":"YulIdentifier","src":"3221:3:19"}],"functionName":{"name":"gt","nativeSrc":"3184:2:19","nodeType":"YulIdentifier","src":"3184:2:19"},"nativeSrc":"3184:41:19","nodeType":"YulFunctionCall","src":"3184:41:19"},"nativeSrc":"3181:128:19","nodeType":"YulIf","src":"3181:128:19"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"2763:552:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2804:6:19","nodeType":"YulTypedName","src":"2804:6:19","type":""},{"name":"end","nativeSrc":"2812:3:19","nodeType":"YulTypedName","src":"2812:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2820:8:19","nodeType":"YulTypedName","src":"2820:8:19","type":""},{"name":"length","nativeSrc":"2830:6:19","nodeType":"YulTypedName","src":"2830:6:19","type":""}],"src":"2763:552:19"},{"body":{"nativeSrc":"3457:827:19","nodeType":"YulBlock","src":"3457:827:19","statements":[{"body":{"nativeSrc":"3504:83:19","nodeType":"YulBlock","src":"3504:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3506:77:19","nodeType":"YulIdentifier","src":"3506:77:19"},"nativeSrc":"3506:79:19","nodeType":"YulFunctionCall","src":"3506:79:19"},"nativeSrc":"3506:79:19","nodeType":"YulExpressionStatement","src":"3506:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3478:7:19","nodeType":"YulIdentifier","src":"3478:7:19"},{"name":"headStart","nativeSrc":"3487:9:19","nodeType":"YulIdentifier","src":"3487:9:19"}],"functionName":{"name":"sub","nativeSrc":"3474:3:19","nodeType":"YulIdentifier","src":"3474:3:19"},"nativeSrc":"3474:23:19","nodeType":"YulFunctionCall","src":"3474:23:19"},{"kind":"number","nativeSrc":"3499:3:19","nodeType":"YulLiteral","src":"3499:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"3470:3:19","nodeType":"YulIdentifier","src":"3470:3:19"},"nativeSrc":"3470:33:19","nodeType":"YulFunctionCall","src":"3470:33:19"},"nativeSrc":"3467:120:19","nodeType":"YulIf","src":"3467:120:19"},{"nativeSrc":"3597:117:19","nodeType":"YulBlock","src":"3597:117:19","statements":[{"nativeSrc":"3612:15:19","nodeType":"YulVariableDeclaration","src":"3612:15:19","value":{"kind":"number","nativeSrc":"3626:1:19","nodeType":"YulLiteral","src":"3626:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3616:6:19","nodeType":"YulTypedName","src":"3616:6:19","type":""}]},{"nativeSrc":"3641:63:19","nodeType":"YulAssignment","src":"3641:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3676:9:19","nodeType":"YulIdentifier","src":"3676:9:19"},{"name":"offset","nativeSrc":"3687:6:19","nodeType":"YulIdentifier","src":"3687:6:19"}],"functionName":{"name":"add","nativeSrc":"3672:3:19","nodeType":"YulIdentifier","src":"3672:3:19"},"nativeSrc":"3672:22:19","nodeType":"YulFunctionCall","src":"3672:22:19"},{"name":"dataEnd","nativeSrc":"3696:7:19","nodeType":"YulIdentifier","src":"3696:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3651:20:19","nodeType":"YulIdentifier","src":"3651:20:19"},"nativeSrc":"3651:53:19","nodeType":"YulFunctionCall","src":"3651:53:19"},"variableNames":[{"name":"value0","nativeSrc":"3641:6:19","nodeType":"YulIdentifier","src":"3641:6:19"}]}]},{"nativeSrc":"3724:118:19","nodeType":"YulBlock","src":"3724:118:19","statements":[{"nativeSrc":"3739:16:19","nodeType":"YulVariableDeclaration","src":"3739:16:19","value":{"kind":"number","nativeSrc":"3753:2:19","nodeType":"YulLiteral","src":"3753:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3743:6:19","nodeType":"YulTypedName","src":"3743:6:19","type":""}]},{"nativeSrc":"3769:63:19","nodeType":"YulAssignment","src":"3769:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3804:9:19","nodeType":"YulIdentifier","src":"3804:9:19"},{"name":"offset","nativeSrc":"3815:6:19","nodeType":"YulIdentifier","src":"3815:6:19"}],"functionName":{"name":"add","nativeSrc":"3800:3:19","nodeType":"YulIdentifier","src":"3800:3:19"},"nativeSrc":"3800:22:19","nodeType":"YulFunctionCall","src":"3800:22:19"},{"name":"dataEnd","nativeSrc":"3824:7:19","nodeType":"YulIdentifier","src":"3824:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3779:20:19","nodeType":"YulIdentifier","src":"3779:20:19"},"nativeSrc":"3779:53:19","nodeType":"YulFunctionCall","src":"3779:53:19"},"variableNames":[{"name":"value1","nativeSrc":"3769:6:19","nodeType":"YulIdentifier","src":"3769:6:19"}]}]},{"nativeSrc":"3852:118:19","nodeType":"YulBlock","src":"3852:118:19","statements":[{"nativeSrc":"3867:16:19","nodeType":"YulVariableDeclaration","src":"3867:16:19","value":{"kind":"number","nativeSrc":"3881:2:19","nodeType":"YulLiteral","src":"3881:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3871:6:19","nodeType":"YulTypedName","src":"3871:6:19","type":""}]},{"nativeSrc":"3897:63:19","nodeType":"YulAssignment","src":"3897:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3932:9:19","nodeType":"YulIdentifier","src":"3932:9:19"},{"name":"offset","nativeSrc":"3943:6:19","nodeType":"YulIdentifier","src":"3943:6:19"}],"functionName":{"name":"add","nativeSrc":"3928:3:19","nodeType":"YulIdentifier","src":"3928:3:19"},"nativeSrc":"3928:22:19","nodeType":"YulFunctionCall","src":"3928:22:19"},{"name":"dataEnd","nativeSrc":"3952:7:19","nodeType":"YulIdentifier","src":"3952:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3907:20:19","nodeType":"YulIdentifier","src":"3907:20:19"},"nativeSrc":"3907:53:19","nodeType":"YulFunctionCall","src":"3907:53:19"},"variableNames":[{"name":"value2","nativeSrc":"3897:6:19","nodeType":"YulIdentifier","src":"3897:6:19"}]}]},{"nativeSrc":"3980:297:19","nodeType":"YulBlock","src":"3980:297:19","statements":[{"nativeSrc":"3995:46:19","nodeType":"YulVariableDeclaration","src":"3995:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4026:9:19","nodeType":"YulIdentifier","src":"4026:9:19"},{"kind":"number","nativeSrc":"4037:2:19","nodeType":"YulLiteral","src":"4037:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4022:3:19","nodeType":"YulIdentifier","src":"4022:3:19"},"nativeSrc":"4022:18:19","nodeType":"YulFunctionCall","src":"4022:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"4009:12:19","nodeType":"YulIdentifier","src":"4009:12:19"},"nativeSrc":"4009:32:19","nodeType":"YulFunctionCall","src":"4009:32:19"},"variables":[{"name":"offset","nativeSrc":"3999:6:19","nodeType":"YulTypedName","src":"3999:6:19","type":""}]},{"body":{"nativeSrc":"4088:83:19","nodeType":"YulBlock","src":"4088:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4090:77:19","nodeType":"YulIdentifier","src":"4090:77:19"},"nativeSrc":"4090:79:19","nodeType":"YulFunctionCall","src":"4090:79:19"},"nativeSrc":"4090:79:19","nodeType":"YulExpressionStatement","src":"4090:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4060:6:19","nodeType":"YulIdentifier","src":"4060:6:19"},{"kind":"number","nativeSrc":"4068:18:19","nodeType":"YulLiteral","src":"4068:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4057:2:19","nodeType":"YulIdentifier","src":"4057:2:19"},"nativeSrc":"4057:30:19","nodeType":"YulFunctionCall","src":"4057:30:19"},"nativeSrc":"4054:117:19","nodeType":"YulIf","src":"4054:117:19"},{"nativeSrc":"4185:82:19","nodeType":"YulAssignment","src":"4185:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4239:9:19","nodeType":"YulIdentifier","src":"4239:9:19"},{"name":"offset","nativeSrc":"4250:6:19","nodeType":"YulIdentifier","src":"4250:6:19"}],"functionName":{"name":"add","nativeSrc":"4235:3:19","nodeType":"YulIdentifier","src":"4235:3:19"},"nativeSrc":"4235:22:19","nodeType":"YulFunctionCall","src":"4235:22:19"},{"name":"dataEnd","nativeSrc":"4259:7:19","nodeType":"YulIdentifier","src":"4259:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"4203:31:19","nodeType":"YulIdentifier","src":"4203:31:19"},"nativeSrc":"4203:64:19","nodeType":"YulFunctionCall","src":"4203:64:19"},"variableNames":[{"name":"value3","nativeSrc":"4185:6:19","nodeType":"YulIdentifier","src":"4185:6:19"},{"name":"value4","nativeSrc":"4193:6:19","nodeType":"YulIdentifier","src":"4193:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"3321:963:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3395:9:19","nodeType":"YulTypedName","src":"3395:9:19","type":""},{"name":"dataEnd","nativeSrc":"3406:7:19","nodeType":"YulTypedName","src":"3406:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3418:6:19","nodeType":"YulTypedName","src":"3418:6:19","type":""},{"name":"value1","nativeSrc":"3426:6:19","nodeType":"YulTypedName","src":"3426:6:19","type":""},{"name":"value2","nativeSrc":"3434:6:19","nodeType":"YulTypedName","src":"3434:6:19","type":""},{"name":"value3","nativeSrc":"3442:6:19","nodeType":"YulTypedName","src":"3442:6:19","type":""},{"name":"value4","nativeSrc":"3450:6:19","nodeType":"YulTypedName","src":"3450:6:19","type":""}],"src":"3321:963:19"},{"body":{"nativeSrc":"4353:52:19","nodeType":"YulBlock","src":"4353:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4370:3:19","nodeType":"YulIdentifier","src":"4370:3:19"},{"arguments":[{"name":"value","nativeSrc":"4392:5:19","nodeType":"YulIdentifier","src":"4392:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"4375:16:19","nodeType":"YulIdentifier","src":"4375:16:19"},"nativeSrc":"4375:23:19","nodeType":"YulFunctionCall","src":"4375:23:19"}],"functionName":{"name":"mstore","nativeSrc":"4363:6:19","nodeType":"YulIdentifier","src":"4363:6:19"},"nativeSrc":"4363:36:19","nodeType":"YulFunctionCall","src":"4363:36:19"},"nativeSrc":"4363:36:19","nodeType":"YulExpressionStatement","src":"4363:36:19"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"4290:115:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4341:5:19","nodeType":"YulTypedName","src":"4341:5:19","type":""},{"name":"pos","nativeSrc":"4348:3:19","nodeType":"YulTypedName","src":"4348:3:19","type":""}],"src":"4290:115:19"},{"body":{"nativeSrc":"4507:122:19","nodeType":"YulBlock","src":"4507:122:19","statements":[{"nativeSrc":"4517:26:19","nodeType":"YulAssignment","src":"4517:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4529:9:19","nodeType":"YulIdentifier","src":"4529:9:19"},{"kind":"number","nativeSrc":"4540:2:19","nodeType":"YulLiteral","src":"4540:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4525:3:19","nodeType":"YulIdentifier","src":"4525:3:19"},"nativeSrc":"4525:18:19","nodeType":"YulFunctionCall","src":"4525:18:19"},"variableNames":[{"name":"tail","nativeSrc":"4517:4:19","nodeType":"YulIdentifier","src":"4517:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4595:6:19","nodeType":"YulIdentifier","src":"4595:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"4608:9:19","nodeType":"YulIdentifier","src":"4608:9:19"},{"kind":"number","nativeSrc":"4619:1:19","nodeType":"YulLiteral","src":"4619:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4604:3:19","nodeType":"YulIdentifier","src":"4604:3:19"},"nativeSrc":"4604:17:19","nodeType":"YulFunctionCall","src":"4604:17:19"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"4553:41:19","nodeType":"YulIdentifier","src":"4553:41:19"},"nativeSrc":"4553:69:19","nodeType":"YulFunctionCall","src":"4553:69:19"},"nativeSrc":"4553:69:19","nodeType":"YulExpressionStatement","src":"4553:69:19"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"4411:218:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4479:9:19","nodeType":"YulTypedName","src":"4479:9:19","type":""},{"name":"value0","nativeSrc":"4491:6:19","nodeType":"YulTypedName","src":"4491:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4502:4:19","nodeType":"YulTypedName","src":"4502:4:19","type":""}],"src":"4411:218:19"},{"body":{"nativeSrc":"4680:32:19","nodeType":"YulBlock","src":"4680:32:19","statements":[{"nativeSrc":"4690:16:19","nodeType":"YulAssignment","src":"4690:16:19","value":{"name":"value","nativeSrc":"4701:5:19","nodeType":"YulIdentifier","src":"4701:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"4690:7:19","nodeType":"YulIdentifier","src":"4690:7:19"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4635:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4662:5:19","nodeType":"YulTypedName","src":"4662:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4672:7:19","nodeType":"YulTypedName","src":"4672:7:19","type":""}],"src":"4635:77:19"},{"body":{"nativeSrc":"4761:79:19","nodeType":"YulBlock","src":"4761:79:19","statements":[{"body":{"nativeSrc":"4818:16:19","nodeType":"YulBlock","src":"4818:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4827:1:19","nodeType":"YulLiteral","src":"4827:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4830:1:19","nodeType":"YulLiteral","src":"4830:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4820:6:19","nodeType":"YulIdentifier","src":"4820:6:19"},"nativeSrc":"4820:12:19","nodeType":"YulFunctionCall","src":"4820:12:19"},"nativeSrc":"4820:12:19","nodeType":"YulExpressionStatement","src":"4820:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4784:5:19","nodeType":"YulIdentifier","src":"4784:5:19"},{"arguments":[{"name":"value","nativeSrc":"4809:5:19","nodeType":"YulIdentifier","src":"4809:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4791:17:19","nodeType":"YulIdentifier","src":"4791:17:19"},"nativeSrc":"4791:24:19","nodeType":"YulFunctionCall","src":"4791:24:19"}],"functionName":{"name":"eq","nativeSrc":"4781:2:19","nodeType":"YulIdentifier","src":"4781:2:19"},"nativeSrc":"4781:35:19","nodeType":"YulFunctionCall","src":"4781:35:19"}],"functionName":{"name":"iszero","nativeSrc":"4774:6:19","nodeType":"YulIdentifier","src":"4774:6:19"},"nativeSrc":"4774:43:19","nodeType":"YulFunctionCall","src":"4774:43:19"},"nativeSrc":"4771:63:19","nodeType":"YulIf","src":"4771:63:19"}]},"name":"validator_revert_t_bytes32","nativeSrc":"4718:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4754:5:19","nodeType":"YulTypedName","src":"4754:5:19","type":""}],"src":"4718:122:19"},{"body":{"nativeSrc":"4898:87:19","nodeType":"YulBlock","src":"4898:87:19","statements":[{"nativeSrc":"4908:29:19","nodeType":"YulAssignment","src":"4908:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"4930:6:19","nodeType":"YulIdentifier","src":"4930:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"4917:12:19","nodeType":"YulIdentifier","src":"4917:12:19"},"nativeSrc":"4917:20:19","nodeType":"YulFunctionCall","src":"4917:20:19"},"variableNames":[{"name":"value","nativeSrc":"4908:5:19","nodeType":"YulIdentifier","src":"4908:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4973:5:19","nodeType":"YulIdentifier","src":"4973:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"4946:26:19","nodeType":"YulIdentifier","src":"4946:26:19"},"nativeSrc":"4946:33:19","nodeType":"YulFunctionCall","src":"4946:33:19"},"nativeSrc":"4946:33:19","nodeType":"YulExpressionStatement","src":"4946:33:19"}]},"name":"abi_decode_t_bytes32","nativeSrc":"4846:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4876:6:19","nodeType":"YulTypedName","src":"4876:6:19","type":""},{"name":"end","nativeSrc":"4884:3:19","nodeType":"YulTypedName","src":"4884:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4892:5:19","nodeType":"YulTypedName","src":"4892:5:19","type":""}],"src":"4846:139:19"},{"body":{"nativeSrc":"5080:28:19","nodeType":"YulBlock","src":"5080:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5097:1:19","nodeType":"YulLiteral","src":"5097:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5100:1:19","nodeType":"YulLiteral","src":"5100:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5090:6:19","nodeType":"YulIdentifier","src":"5090:6:19"},"nativeSrc":"5090:12:19","nodeType":"YulFunctionCall","src":"5090:12:19"},"nativeSrc":"5090:12:19","nodeType":"YulExpressionStatement","src":"5090:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4991:117:19","nodeType":"YulFunctionDefinition","src":"4991:117:19"},{"body":{"nativeSrc":"5162:54:19","nodeType":"YulBlock","src":"5162:54:19","statements":[{"nativeSrc":"5172:38:19","nodeType":"YulAssignment","src":"5172:38:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5190:5:19","nodeType":"YulIdentifier","src":"5190:5:19"},{"kind":"number","nativeSrc":"5197:2:19","nodeType":"YulLiteral","src":"5197:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5186:3:19","nodeType":"YulIdentifier","src":"5186:3:19"},"nativeSrc":"5186:14:19","nodeType":"YulFunctionCall","src":"5186:14:19"},{"arguments":[{"kind":"number","nativeSrc":"5206:2:19","nodeType":"YulLiteral","src":"5206:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5202:3:19","nodeType":"YulIdentifier","src":"5202:3:19"},"nativeSrc":"5202:7:19","nodeType":"YulFunctionCall","src":"5202:7:19"}],"functionName":{"name":"and","nativeSrc":"5182:3:19","nodeType":"YulIdentifier","src":"5182:3:19"},"nativeSrc":"5182:28:19","nodeType":"YulFunctionCall","src":"5182:28:19"},"variableNames":[{"name":"result","nativeSrc":"5172:6:19","nodeType":"YulIdentifier","src":"5172:6:19"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"5114:102:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5145:5:19","nodeType":"YulTypedName","src":"5145:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5155:6:19","nodeType":"YulTypedName","src":"5155:6:19","type":""}],"src":"5114:102:19"},{"body":{"nativeSrc":"5250:152:19","nodeType":"YulBlock","src":"5250:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5267:1:19","nodeType":"YulLiteral","src":"5267:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5270:77:19","nodeType":"YulLiteral","src":"5270:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5260:6:19","nodeType":"YulIdentifier","src":"5260:6:19"},"nativeSrc":"5260:88:19","nodeType":"YulFunctionCall","src":"5260:88:19"},"nativeSrc":"5260:88:19","nodeType":"YulExpressionStatement","src":"5260:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5364:1:19","nodeType":"YulLiteral","src":"5364:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"5367:4:19","nodeType":"YulLiteral","src":"5367:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5357:6:19","nodeType":"YulIdentifier","src":"5357:6:19"},"nativeSrc":"5357:15:19","nodeType":"YulFunctionCall","src":"5357:15:19"},"nativeSrc":"5357:15:19","nodeType":"YulExpressionStatement","src":"5357:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5388:1:19","nodeType":"YulLiteral","src":"5388:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5391:4:19","nodeType":"YulLiteral","src":"5391:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5381:6:19","nodeType":"YulIdentifier","src":"5381:6:19"},"nativeSrc":"5381:15:19","nodeType":"YulFunctionCall","src":"5381:15:19"},"nativeSrc":"5381:15:19","nodeType":"YulExpressionStatement","src":"5381:15:19"}]},"name":"panic_error_0x41","nativeSrc":"5222:180:19","nodeType":"YulFunctionDefinition","src":"5222:180:19"},{"body":{"nativeSrc":"5451:238:19","nodeType":"YulBlock","src":"5451:238:19","statements":[{"nativeSrc":"5461:58:19","nodeType":"YulVariableDeclaration","src":"5461:58:19","value":{"arguments":[{"name":"memPtr","nativeSrc":"5483:6:19","nodeType":"YulIdentifier","src":"5483:6:19"},{"arguments":[{"name":"size","nativeSrc":"5513:4:19","nodeType":"YulIdentifier","src":"5513:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5491:21:19","nodeType":"YulIdentifier","src":"5491:21:19"},"nativeSrc":"5491:27:19","nodeType":"YulFunctionCall","src":"5491:27:19"}],"functionName":{"name":"add","nativeSrc":"5479:3:19","nodeType":"YulIdentifier","src":"5479:3:19"},"nativeSrc":"5479:40:19","nodeType":"YulFunctionCall","src":"5479:40:19"},"variables":[{"name":"newFreePtr","nativeSrc":"5465:10:19","nodeType":"YulTypedName","src":"5465:10:19","type":""}]},{"body":{"nativeSrc":"5630:22:19","nodeType":"YulBlock","src":"5630:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5632:16:19","nodeType":"YulIdentifier","src":"5632:16:19"},"nativeSrc":"5632:18:19","nodeType":"YulFunctionCall","src":"5632:18:19"},"nativeSrc":"5632:18:19","nodeType":"YulExpressionStatement","src":"5632:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5573:10:19","nodeType":"YulIdentifier","src":"5573:10:19"},{"kind":"number","nativeSrc":"5585:18:19","nodeType":"YulLiteral","src":"5585:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5570:2:19","nodeType":"YulIdentifier","src":"5570:2:19"},"nativeSrc":"5570:34:19","nodeType":"YulFunctionCall","src":"5570:34:19"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5609:10:19","nodeType":"YulIdentifier","src":"5609:10:19"},{"name":"memPtr","nativeSrc":"5621:6:19","nodeType":"YulIdentifier","src":"5621:6:19"}],"functionName":{"name":"lt","nativeSrc":"5606:2:19","nodeType":"YulIdentifier","src":"5606:2:19"},"nativeSrc":"5606:22:19","nodeType":"YulFunctionCall","src":"5606:22:19"}],"functionName":{"name":"or","nativeSrc":"5567:2:19","nodeType":"YulIdentifier","src":"5567:2:19"},"nativeSrc":"5567:62:19","nodeType":"YulFunctionCall","src":"5567:62:19"},"nativeSrc":"5564:88:19","nodeType":"YulIf","src":"5564:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5668:2:19","nodeType":"YulLiteral","src":"5668:2:19","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5672:10:19","nodeType":"YulIdentifier","src":"5672:10:19"}],"functionName":{"name":"mstore","nativeSrc":"5661:6:19","nodeType":"YulIdentifier","src":"5661:6:19"},"nativeSrc":"5661:22:19","nodeType":"YulFunctionCall","src":"5661:22:19"},"nativeSrc":"5661:22:19","nodeType":"YulExpressionStatement","src":"5661:22:19"}]},"name":"finalize_allocation","nativeSrc":"5408:281:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5437:6:19","nodeType":"YulTypedName","src":"5437:6:19","type":""},{"name":"size","nativeSrc":"5445:4:19","nodeType":"YulTypedName","src":"5445:4:19","type":""}],"src":"5408:281:19"},{"body":{"nativeSrc":"5736:88:19","nodeType":"YulBlock","src":"5736:88:19","statements":[{"nativeSrc":"5746:30:19","nodeType":"YulAssignment","src":"5746:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"5756:18:19","nodeType":"YulIdentifier","src":"5756:18:19"},"nativeSrc":"5756:20:19","nodeType":"YulFunctionCall","src":"5756:20:19"},"variableNames":[{"name":"memPtr","nativeSrc":"5746:6:19","nodeType":"YulIdentifier","src":"5746:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5805:6:19","nodeType":"YulIdentifier","src":"5805:6:19"},{"name":"size","nativeSrc":"5813:4:19","nodeType":"YulIdentifier","src":"5813:4:19"}],"functionName":{"name":"finalize_allocation","nativeSrc":"5785:19:19","nodeType":"YulIdentifier","src":"5785:19:19"},"nativeSrc":"5785:33:19","nodeType":"YulFunctionCall","src":"5785:33:19"},"nativeSrc":"5785:33:19","nodeType":"YulExpressionStatement","src":"5785:33:19"}]},"name":"allocate_memory","nativeSrc":"5695:129:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"5720:4:19","nodeType":"YulTypedName","src":"5720:4:19","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"5729:6:19","nodeType":"YulTypedName","src":"5729:6:19","type":""}],"src":"5695:129:19"},{"body":{"nativeSrc":"5896:241:19","nodeType":"YulBlock","src":"5896:241:19","statements":[{"body":{"nativeSrc":"6001:22:19","nodeType":"YulBlock","src":"6001:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6003:16:19","nodeType":"YulIdentifier","src":"6003:16:19"},"nativeSrc":"6003:18:19","nodeType":"YulFunctionCall","src":"6003:18:19"},"nativeSrc":"6003:18:19","nodeType":"YulExpressionStatement","src":"6003:18:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5973:6:19","nodeType":"YulIdentifier","src":"5973:6:19"},{"kind":"number","nativeSrc":"5981:18:19","nodeType":"YulLiteral","src":"5981:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5970:2:19","nodeType":"YulIdentifier","src":"5970:2:19"},"nativeSrc":"5970:30:19","nodeType":"YulFunctionCall","src":"5970:30:19"},"nativeSrc":"5967:56:19","nodeType":"YulIf","src":"5967:56:19"},{"nativeSrc":"6033:37:19","nodeType":"YulAssignment","src":"6033:37:19","value":{"arguments":[{"name":"length","nativeSrc":"6063:6:19","nodeType":"YulIdentifier","src":"6063:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6041:21:19","nodeType":"YulIdentifier","src":"6041:21:19"},"nativeSrc":"6041:29:19","nodeType":"YulFunctionCall","src":"6041:29:19"},"variableNames":[{"name":"size","nativeSrc":"6033:4:19","nodeType":"YulIdentifier","src":"6033:4:19"}]},{"nativeSrc":"6107:23:19","nodeType":"YulAssignment","src":"6107:23:19","value":{"arguments":[{"name":"size","nativeSrc":"6119:4:19","nodeType":"YulIdentifier","src":"6119:4:19"},{"kind":"number","nativeSrc":"6125:4:19","nodeType":"YulLiteral","src":"6125:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6115:3:19","nodeType":"YulIdentifier","src":"6115:3:19"},"nativeSrc":"6115:15:19","nodeType":"YulFunctionCall","src":"6115:15:19"},"variableNames":[{"name":"size","nativeSrc":"6107:4:19","nodeType":"YulIdentifier","src":"6107:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"5830:307:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"5880:6:19","nodeType":"YulTypedName","src":"5880:6:19","type":""}],"returnVariables":[{"name":"size","nativeSrc":"5891:4:19","nodeType":"YulTypedName","src":"5891:4:19","type":""}],"src":"5830:307:19"},{"body":{"nativeSrc":"6207:84:19","nodeType":"YulBlock","src":"6207:84:19","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6231:3:19","nodeType":"YulIdentifier","src":"6231:3:19"},{"name":"src","nativeSrc":"6236:3:19","nodeType":"YulIdentifier","src":"6236:3:19"},{"name":"length","nativeSrc":"6241:6:19","nodeType":"YulIdentifier","src":"6241:6:19"}],"functionName":{"name":"calldatacopy","nativeSrc":"6218:12:19","nodeType":"YulIdentifier","src":"6218:12:19"},"nativeSrc":"6218:30:19","nodeType":"YulFunctionCall","src":"6218:30:19"},"nativeSrc":"6218:30:19","nodeType":"YulExpressionStatement","src":"6218:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6268:3:19","nodeType":"YulIdentifier","src":"6268:3:19"},{"name":"length","nativeSrc":"6273:6:19","nodeType":"YulIdentifier","src":"6273:6:19"}],"functionName":{"name":"add","nativeSrc":"6264:3:19","nodeType":"YulIdentifier","src":"6264:3:19"},"nativeSrc":"6264:16:19","nodeType":"YulFunctionCall","src":"6264:16:19"},{"kind":"number","nativeSrc":"6282:1:19","nodeType":"YulLiteral","src":"6282:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6257:6:19","nodeType":"YulIdentifier","src":"6257:6:19"},"nativeSrc":"6257:27:19","nodeType":"YulFunctionCall","src":"6257:27:19"},"nativeSrc":"6257:27:19","nodeType":"YulExpressionStatement","src":"6257:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6143:148:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6189:3:19","nodeType":"YulTypedName","src":"6189:3:19","type":""},{"name":"dst","nativeSrc":"6194:3:19","nodeType":"YulTypedName","src":"6194:3:19","type":""},{"name":"length","nativeSrc":"6199:6:19","nodeType":"YulTypedName","src":"6199:6:19","type":""}],"src":"6143:148:19"},{"body":{"nativeSrc":"6380:340:19","nodeType":"YulBlock","src":"6380:340:19","statements":[{"nativeSrc":"6390:74:19","nodeType":"YulAssignment","src":"6390:74:19","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6456:6:19","nodeType":"YulIdentifier","src":"6456:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6415:40:19","nodeType":"YulIdentifier","src":"6415:40:19"},"nativeSrc":"6415:48:19","nodeType":"YulFunctionCall","src":"6415:48:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"6399:15:19","nodeType":"YulIdentifier","src":"6399:15:19"},"nativeSrc":"6399:65:19","nodeType":"YulFunctionCall","src":"6399:65:19"},"variableNames":[{"name":"array","nativeSrc":"6390:5:19","nodeType":"YulIdentifier","src":"6390:5:19"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6480:5:19","nodeType":"YulIdentifier","src":"6480:5:19"},{"name":"length","nativeSrc":"6487:6:19","nodeType":"YulIdentifier","src":"6487:6:19"}],"functionName":{"name":"mstore","nativeSrc":"6473:6:19","nodeType":"YulIdentifier","src":"6473:6:19"},"nativeSrc":"6473:21:19","nodeType":"YulFunctionCall","src":"6473:21:19"},"nativeSrc":"6473:21:19","nodeType":"YulExpressionStatement","src":"6473:21:19"},{"nativeSrc":"6503:27:19","nodeType":"YulVariableDeclaration","src":"6503:27:19","value":{"arguments":[{"name":"array","nativeSrc":"6518:5:19","nodeType":"YulIdentifier","src":"6518:5:19"},{"kind":"number","nativeSrc":"6525:4:19","nodeType":"YulLiteral","src":"6525:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6514:3:19","nodeType":"YulIdentifier","src":"6514:3:19"},"nativeSrc":"6514:16:19","nodeType":"YulFunctionCall","src":"6514:16:19"},"variables":[{"name":"dst","nativeSrc":"6507:3:19","nodeType":"YulTypedName","src":"6507:3:19","type":""}]},{"body":{"nativeSrc":"6568:83:19","nodeType":"YulBlock","src":"6568:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6570:77:19","nodeType":"YulIdentifier","src":"6570:77:19"},"nativeSrc":"6570:79:19","nodeType":"YulFunctionCall","src":"6570:79:19"},"nativeSrc":"6570:79:19","nodeType":"YulExpressionStatement","src":"6570:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6549:3:19","nodeType":"YulIdentifier","src":"6549:3:19"},{"name":"length","nativeSrc":"6554:6:19","nodeType":"YulIdentifier","src":"6554:6:19"}],"functionName":{"name":"add","nativeSrc":"6545:3:19","nodeType":"YulIdentifier","src":"6545:3:19"},"nativeSrc":"6545:16:19","nodeType":"YulFunctionCall","src":"6545:16:19"},{"name":"end","nativeSrc":"6563:3:19","nodeType":"YulIdentifier","src":"6563:3:19"}],"functionName":{"name":"gt","nativeSrc":"6542:2:19","nodeType":"YulIdentifier","src":"6542:2:19"},"nativeSrc":"6542:25:19","nodeType":"YulFunctionCall","src":"6542:25:19"},"nativeSrc":"6539:112:19","nodeType":"YulIf","src":"6539:112:19"},{"expression":{"arguments":[{"name":"src","nativeSrc":"6697:3:19","nodeType":"YulIdentifier","src":"6697:3:19"},{"name":"dst","nativeSrc":"6702:3:19","nodeType":"YulIdentifier","src":"6702:3:19"},{"name":"length","nativeSrc":"6707:6:19","nodeType":"YulIdentifier","src":"6707:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6660:36:19","nodeType":"YulIdentifier","src":"6660:36:19"},"nativeSrc":"6660:54:19","nodeType":"YulFunctionCall","src":"6660:54:19"},"nativeSrc":"6660:54:19","nodeType":"YulExpressionStatement","src":"6660:54:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6297:423:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6353:3:19","nodeType":"YulTypedName","src":"6353:3:19","type":""},{"name":"length","nativeSrc":"6358:6:19","nodeType":"YulTypedName","src":"6358:6:19","type":""},{"name":"end","nativeSrc":"6366:3:19","nodeType":"YulTypedName","src":"6366:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6374:5:19","nodeType":"YulTypedName","src":"6374:5:19","type":""}],"src":"6297:423:19"},{"body":{"nativeSrc":"6800:277:19","nodeType":"YulBlock","src":"6800:277:19","statements":[{"body":{"nativeSrc":"6849:83:19","nodeType":"YulBlock","src":"6849:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6851:77:19","nodeType":"YulIdentifier","src":"6851:77:19"},"nativeSrc":"6851:79:19","nodeType":"YulFunctionCall","src":"6851:79:19"},"nativeSrc":"6851:79:19","nodeType":"YulExpressionStatement","src":"6851:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6828:6:19","nodeType":"YulIdentifier","src":"6828:6:19"},{"kind":"number","nativeSrc":"6836:4:19","nodeType":"YulLiteral","src":"6836:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6824:3:19","nodeType":"YulIdentifier","src":"6824:3:19"},"nativeSrc":"6824:17:19","nodeType":"YulFunctionCall","src":"6824:17:19"},{"name":"end","nativeSrc":"6843:3:19","nodeType":"YulIdentifier","src":"6843:3:19"}],"functionName":{"name":"slt","nativeSrc":"6820:3:19","nodeType":"YulIdentifier","src":"6820:3:19"},"nativeSrc":"6820:27:19","nodeType":"YulFunctionCall","src":"6820:27:19"}],"functionName":{"name":"iszero","nativeSrc":"6813:6:19","nodeType":"YulIdentifier","src":"6813:6:19"},"nativeSrc":"6813:35:19","nodeType":"YulFunctionCall","src":"6813:35:19"},"nativeSrc":"6810:122:19","nodeType":"YulIf","src":"6810:122:19"},{"nativeSrc":"6941:34:19","nodeType":"YulVariableDeclaration","src":"6941:34:19","value":{"arguments":[{"name":"offset","nativeSrc":"6968:6:19","nodeType":"YulIdentifier","src":"6968:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"6955:12:19","nodeType":"YulIdentifier","src":"6955:12:19"},"nativeSrc":"6955:20:19","nodeType":"YulFunctionCall","src":"6955:20:19"},"variables":[{"name":"length","nativeSrc":"6945:6:19","nodeType":"YulTypedName","src":"6945:6:19","type":""}]},{"nativeSrc":"6984:87:19","nodeType":"YulAssignment","src":"6984:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7044:6:19","nodeType":"YulIdentifier","src":"7044:6:19"},{"kind":"number","nativeSrc":"7052:4:19","nodeType":"YulLiteral","src":"7052:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7040:3:19","nodeType":"YulIdentifier","src":"7040:3:19"},"nativeSrc":"7040:17:19","nodeType":"YulFunctionCall","src":"7040:17:19"},{"name":"length","nativeSrc":"7059:6:19","nodeType":"YulIdentifier","src":"7059:6:19"},{"name":"end","nativeSrc":"7067:3:19","nodeType":"YulIdentifier","src":"7067:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6993:46:19","nodeType":"YulIdentifier","src":"6993:46:19"},"nativeSrc":"6993:78:19","nodeType":"YulFunctionCall","src":"6993:78:19"},"variableNames":[{"name":"array","nativeSrc":"6984:5:19","nodeType":"YulIdentifier","src":"6984:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"6739:338:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6778:6:19","nodeType":"YulTypedName","src":"6778:6:19","type":""},{"name":"end","nativeSrc":"6786:3:19","nodeType":"YulTypedName","src":"6786:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6794:5:19","nodeType":"YulTypedName","src":"6794:5:19","type":""}],"src":"6739:338:19"},{"body":{"nativeSrc":"7175:560:19","nodeType":"YulBlock","src":"7175:560:19","statements":[{"body":{"nativeSrc":"7221:83:19","nodeType":"YulBlock","src":"7221:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7223:77:19","nodeType":"YulIdentifier","src":"7223:77:19"},"nativeSrc":"7223:79:19","nodeType":"YulFunctionCall","src":"7223:79:19"},"nativeSrc":"7223:79:19","nodeType":"YulExpressionStatement","src":"7223:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7196:7:19","nodeType":"YulIdentifier","src":"7196:7:19"},{"name":"headStart","nativeSrc":"7205:9:19","nodeType":"YulIdentifier","src":"7205:9:19"}],"functionName":{"name":"sub","nativeSrc":"7192:3:19","nodeType":"YulIdentifier","src":"7192:3:19"},"nativeSrc":"7192:23:19","nodeType":"YulFunctionCall","src":"7192:23:19"},{"kind":"number","nativeSrc":"7217:2:19","nodeType":"YulLiteral","src":"7217:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7188:3:19","nodeType":"YulIdentifier","src":"7188:3:19"},"nativeSrc":"7188:32:19","nodeType":"YulFunctionCall","src":"7188:32:19"},"nativeSrc":"7185:119:19","nodeType":"YulIf","src":"7185:119:19"},{"nativeSrc":"7314:117:19","nodeType":"YulBlock","src":"7314:117:19","statements":[{"nativeSrc":"7329:15:19","nodeType":"YulVariableDeclaration","src":"7329:15:19","value":{"kind":"number","nativeSrc":"7343:1:19","nodeType":"YulLiteral","src":"7343:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7333:6:19","nodeType":"YulTypedName","src":"7333:6:19","type":""}]},{"nativeSrc":"7358:63:19","nodeType":"YulAssignment","src":"7358:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7393:9:19","nodeType":"YulIdentifier","src":"7393:9:19"},{"name":"offset","nativeSrc":"7404:6:19","nodeType":"YulIdentifier","src":"7404:6:19"}],"functionName":{"name":"add","nativeSrc":"7389:3:19","nodeType":"YulIdentifier","src":"7389:3:19"},"nativeSrc":"7389:22:19","nodeType":"YulFunctionCall","src":"7389:22:19"},{"name":"dataEnd","nativeSrc":"7413:7:19","nodeType":"YulIdentifier","src":"7413:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7368:20:19","nodeType":"YulIdentifier","src":"7368:20:19"},"nativeSrc":"7368:53:19","nodeType":"YulFunctionCall","src":"7368:53:19"},"variableNames":[{"name":"value0","nativeSrc":"7358:6:19","nodeType":"YulIdentifier","src":"7358:6:19"}]}]},{"nativeSrc":"7441:287:19","nodeType":"YulBlock","src":"7441:287:19","statements":[{"nativeSrc":"7456:46:19","nodeType":"YulVariableDeclaration","src":"7456:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7487:9:19","nodeType":"YulIdentifier","src":"7487:9:19"},{"kind":"number","nativeSrc":"7498:2:19","nodeType":"YulLiteral","src":"7498:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7483:3:19","nodeType":"YulIdentifier","src":"7483:3:19"},"nativeSrc":"7483:18:19","nodeType":"YulFunctionCall","src":"7483:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"7470:12:19","nodeType":"YulIdentifier","src":"7470:12:19"},"nativeSrc":"7470:32:19","nodeType":"YulFunctionCall","src":"7470:32:19"},"variables":[{"name":"offset","nativeSrc":"7460:6:19","nodeType":"YulTypedName","src":"7460:6:19","type":""}]},{"body":{"nativeSrc":"7549:83:19","nodeType":"YulBlock","src":"7549:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7551:77:19","nodeType":"YulIdentifier","src":"7551:77:19"},"nativeSrc":"7551:79:19","nodeType":"YulFunctionCall","src":"7551:79:19"},"nativeSrc":"7551:79:19","nodeType":"YulExpressionStatement","src":"7551:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7521:6:19","nodeType":"YulIdentifier","src":"7521:6:19"},{"kind":"number","nativeSrc":"7529:18:19","nodeType":"YulLiteral","src":"7529:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7518:2:19","nodeType":"YulIdentifier","src":"7518:2:19"},"nativeSrc":"7518:30:19","nodeType":"YulFunctionCall","src":"7518:30:19"},"nativeSrc":"7515:117:19","nodeType":"YulIf","src":"7515:117:19"},{"nativeSrc":"7646:72:19","nodeType":"YulAssignment","src":"7646:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7690:9:19","nodeType":"YulIdentifier","src":"7690:9:19"},{"name":"offset","nativeSrc":"7701:6:19","nodeType":"YulIdentifier","src":"7701:6:19"}],"functionName":{"name":"add","nativeSrc":"7686:3:19","nodeType":"YulIdentifier","src":"7686:3:19"},"nativeSrc":"7686:22:19","nodeType":"YulFunctionCall","src":"7686:22:19"},{"name":"dataEnd","nativeSrc":"7710:7:19","nodeType":"YulIdentifier","src":"7710:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7656:29:19","nodeType":"YulIdentifier","src":"7656:29:19"},"nativeSrc":"7656:62:19","nodeType":"YulFunctionCall","src":"7656:62:19"},"variableNames":[{"name":"value1","nativeSrc":"7646:6:19","nodeType":"YulIdentifier","src":"7646:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nativeSrc":"7083:652:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7137:9:19","nodeType":"YulTypedName","src":"7137:9:19","type":""},{"name":"dataEnd","nativeSrc":"7148:7:19","nodeType":"YulTypedName","src":"7148:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7160:6:19","nodeType":"YulTypedName","src":"7160:6:19","type":""},{"name":"value1","nativeSrc":"7168:6:19","nodeType":"YulTypedName","src":"7168:6:19","type":""}],"src":"7083:652:19"},{"body":{"nativeSrc":"7800:51:19","nodeType":"YulBlock","src":"7800:51:19","statements":[{"nativeSrc":"7810:35:19","nodeType":"YulAssignment","src":"7810:35:19","value":{"arguments":[{"name":"value","nativeSrc":"7839:5:19","nodeType":"YulIdentifier","src":"7839:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7821:17:19","nodeType":"YulIdentifier","src":"7821:17:19"},"nativeSrc":"7821:24:19","nodeType":"YulFunctionCall","src":"7821:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"7810:7:19","nodeType":"YulIdentifier","src":"7810:7:19"}]}]},"name":"cleanup_t_contract$_IERC20_$346","nativeSrc":"7741:110:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7782:5:19","nodeType":"YulTypedName","src":"7782:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7792:7:19","nodeType":"YulTypedName","src":"7792:7:19","type":""}],"src":"7741:110:19"},{"body":{"nativeSrc":"7914:93:19","nodeType":"YulBlock","src":"7914:93:19","statements":[{"body":{"nativeSrc":"7985:16:19","nodeType":"YulBlock","src":"7985:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7994:1:19","nodeType":"YulLiteral","src":"7994:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7997:1:19","nodeType":"YulLiteral","src":"7997:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7987:6:19","nodeType":"YulIdentifier","src":"7987:6:19"},"nativeSrc":"7987:12:19","nodeType":"YulFunctionCall","src":"7987:12:19"},"nativeSrc":"7987:12:19","nodeType":"YulExpressionStatement","src":"7987:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7937:5:19","nodeType":"YulIdentifier","src":"7937:5:19"},{"arguments":[{"name":"value","nativeSrc":"7976:5:19","nodeType":"YulIdentifier","src":"7976:5:19"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$346","nativeSrc":"7944:31:19","nodeType":"YulIdentifier","src":"7944:31:19"},"nativeSrc":"7944:38:19","nodeType":"YulFunctionCall","src":"7944:38:19"}],"functionName":{"name":"eq","nativeSrc":"7934:2:19","nodeType":"YulIdentifier","src":"7934:2:19"},"nativeSrc":"7934:49:19","nodeType":"YulFunctionCall","src":"7934:49:19"}],"functionName":{"name":"iszero","nativeSrc":"7927:6:19","nodeType":"YulIdentifier","src":"7927:6:19"},"nativeSrc":"7927:57:19","nodeType":"YulFunctionCall","src":"7927:57:19"},"nativeSrc":"7924:77:19","nodeType":"YulIf","src":"7924:77:19"}]},"name":"validator_revert_t_contract$_IERC20_$346","nativeSrc":"7857:150:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7907:5:19","nodeType":"YulTypedName","src":"7907:5:19","type":""}],"src":"7857:150:19"},{"body":{"nativeSrc":"8079:101:19","nodeType":"YulBlock","src":"8079:101:19","statements":[{"nativeSrc":"8089:29:19","nodeType":"YulAssignment","src":"8089:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"8111:6:19","nodeType":"YulIdentifier","src":"8111:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"8098:12:19","nodeType":"YulIdentifier","src":"8098:12:19"},"nativeSrc":"8098:20:19","nodeType":"YulFunctionCall","src":"8098:20:19"},"variableNames":[{"name":"value","nativeSrc":"8089:5:19","nodeType":"YulIdentifier","src":"8089:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8168:5:19","nodeType":"YulIdentifier","src":"8168:5:19"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$346","nativeSrc":"8127:40:19","nodeType":"YulIdentifier","src":"8127:40:19"},"nativeSrc":"8127:47:19","nodeType":"YulFunctionCall","src":"8127:47:19"},"nativeSrc":"8127:47:19","nodeType":"YulExpressionStatement","src":"8127:47:19"}]},"name":"abi_decode_t_contract$_IERC20_$346","nativeSrc":"8013:167:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8057:6:19","nodeType":"YulTypedName","src":"8057:6:19","type":""},{"name":"end","nativeSrc":"8065:3:19","nodeType":"YulTypedName","src":"8065:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8073:5:19","nodeType":"YulTypedName","src":"8073:5:19","type":""}],"src":"8013:167:19"},{"body":{"nativeSrc":"8300:533:19","nodeType":"YulBlock","src":"8300:533:19","statements":[{"body":{"nativeSrc":"8346:83:19","nodeType":"YulBlock","src":"8346:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8348:77:19","nodeType":"YulIdentifier","src":"8348:77:19"},"nativeSrc":"8348:79:19","nodeType":"YulFunctionCall","src":"8348:79:19"},"nativeSrc":"8348:79:19","nodeType":"YulExpressionStatement","src":"8348:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8321:7:19","nodeType":"YulIdentifier","src":"8321:7:19"},{"name":"headStart","nativeSrc":"8330:9:19","nodeType":"YulIdentifier","src":"8330:9:19"}],"functionName":{"name":"sub","nativeSrc":"8317:3:19","nodeType":"YulIdentifier","src":"8317:3:19"},"nativeSrc":"8317:23:19","nodeType":"YulFunctionCall","src":"8317:23:19"},{"kind":"number","nativeSrc":"8342:2:19","nodeType":"YulLiteral","src":"8342:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8313:3:19","nodeType":"YulIdentifier","src":"8313:3:19"},"nativeSrc":"8313:32:19","nodeType":"YulFunctionCall","src":"8313:32:19"},"nativeSrc":"8310:119:19","nodeType":"YulIf","src":"8310:119:19"},{"nativeSrc":"8439:117:19","nodeType":"YulBlock","src":"8439:117:19","statements":[{"nativeSrc":"8454:15:19","nodeType":"YulVariableDeclaration","src":"8454:15:19","value":{"kind":"number","nativeSrc":"8468:1:19","nodeType":"YulLiteral","src":"8468:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8458:6:19","nodeType":"YulTypedName","src":"8458:6:19","type":""}]},{"nativeSrc":"8483:63:19","nodeType":"YulAssignment","src":"8483:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8518:9:19","nodeType":"YulIdentifier","src":"8518:9:19"},{"name":"offset","nativeSrc":"8529:6:19","nodeType":"YulIdentifier","src":"8529:6:19"}],"functionName":{"name":"add","nativeSrc":"8514:3:19","nodeType":"YulIdentifier","src":"8514:3:19"},"nativeSrc":"8514:22:19","nodeType":"YulFunctionCall","src":"8514:22:19"},{"name":"dataEnd","nativeSrc":"8538:7:19","nodeType":"YulIdentifier","src":"8538:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8493:20:19","nodeType":"YulIdentifier","src":"8493:20:19"},"nativeSrc":"8493:53:19","nodeType":"YulFunctionCall","src":"8493:53:19"},"variableNames":[{"name":"value0","nativeSrc":"8483:6:19","nodeType":"YulIdentifier","src":"8483:6:19"}]}]},{"nativeSrc":"8566:118:19","nodeType":"YulBlock","src":"8566:118:19","statements":[{"nativeSrc":"8581:16:19","nodeType":"YulVariableDeclaration","src":"8581:16:19","value":{"kind":"number","nativeSrc":"8595:2:19","nodeType":"YulLiteral","src":"8595:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8585:6:19","nodeType":"YulTypedName","src":"8585:6:19","type":""}]},{"nativeSrc":"8611:63:19","nodeType":"YulAssignment","src":"8611:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8646:9:19","nodeType":"YulIdentifier","src":"8646:9:19"},{"name":"offset","nativeSrc":"8657:6:19","nodeType":"YulIdentifier","src":"8657:6:19"}],"functionName":{"name":"add","nativeSrc":"8642:3:19","nodeType":"YulIdentifier","src":"8642:3:19"},"nativeSrc":"8642:22:19","nodeType":"YulFunctionCall","src":"8642:22:19"},{"name":"dataEnd","nativeSrc":"8666:7:19","nodeType":"YulIdentifier","src":"8666:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8621:20:19","nodeType":"YulIdentifier","src":"8621:20:19"},"nativeSrc":"8621:53:19","nodeType":"YulFunctionCall","src":"8621:53:19"},"variableNames":[{"name":"value1","nativeSrc":"8611:6:19","nodeType":"YulIdentifier","src":"8611:6:19"}]}]},{"nativeSrc":"8694:132:19","nodeType":"YulBlock","src":"8694:132:19","statements":[{"nativeSrc":"8709:16:19","nodeType":"YulVariableDeclaration","src":"8709:16:19","value":{"kind":"number","nativeSrc":"8723:2:19","nodeType":"YulLiteral","src":"8723:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8713:6:19","nodeType":"YulTypedName","src":"8713:6:19","type":""}]},{"nativeSrc":"8739:77:19","nodeType":"YulAssignment","src":"8739:77:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8788:9:19","nodeType":"YulIdentifier","src":"8788:9:19"},{"name":"offset","nativeSrc":"8799:6:19","nodeType":"YulIdentifier","src":"8799:6:19"}],"functionName":{"name":"add","nativeSrc":"8784:3:19","nodeType":"YulIdentifier","src":"8784:3:19"},"nativeSrc":"8784:22:19","nodeType":"YulFunctionCall","src":"8784:22:19"},{"name":"dataEnd","nativeSrc":"8808:7:19","nodeType":"YulIdentifier","src":"8808:7:19"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$346","nativeSrc":"8749:34:19","nodeType":"YulIdentifier","src":"8749:34:19"},"nativeSrc":"8749:67:19","nodeType":"YulFunctionCall","src":"8749:67:19"},"variableNames":[{"name":"value2","nativeSrc":"8739:6:19","nodeType":"YulIdentifier","src":"8739:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$346","nativeSrc":"8186:647:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8254:9:19","nodeType":"YulTypedName","src":"8254:9:19","type":""},{"name":"dataEnd","nativeSrc":"8265:7:19","nodeType":"YulTypedName","src":"8265:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8277:6:19","nodeType":"YulTypedName","src":"8277:6:19","type":""},{"name":"value1","nativeSrc":"8285:6:19","nodeType":"YulTypedName","src":"8285:6:19","type":""},{"name":"value2","nativeSrc":"8293:6:19","nodeType":"YulTypedName","src":"8293:6:19","type":""}],"src":"8186:647:19"},{"body":{"nativeSrc":"8904:53:19","nodeType":"YulBlock","src":"8904:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8921:3:19","nodeType":"YulIdentifier","src":"8921:3:19"},{"arguments":[{"name":"value","nativeSrc":"8944:5:19","nodeType":"YulIdentifier","src":"8944:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8926:17:19","nodeType":"YulIdentifier","src":"8926:17:19"},"nativeSrc":"8926:24:19","nodeType":"YulFunctionCall","src":"8926:24:19"}],"functionName":{"name":"mstore","nativeSrc":"8914:6:19","nodeType":"YulIdentifier","src":"8914:6:19"},"nativeSrc":"8914:37:19","nodeType":"YulFunctionCall","src":"8914:37:19"},"nativeSrc":"8914:37:19","nodeType":"YulExpressionStatement","src":"8914:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8839:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8892:5:19","nodeType":"YulTypedName","src":"8892:5:19","type":""},{"name":"pos","nativeSrc":"8899:3:19","nodeType":"YulTypedName","src":"8899:3:19","type":""}],"src":"8839:118:19"},{"body":{"nativeSrc":"9061:124:19","nodeType":"YulBlock","src":"9061:124:19","statements":[{"nativeSrc":"9071:26:19","nodeType":"YulAssignment","src":"9071:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"9083:9:19","nodeType":"YulIdentifier","src":"9083:9:19"},{"kind":"number","nativeSrc":"9094:2:19","nodeType":"YulLiteral","src":"9094:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9079:3:19","nodeType":"YulIdentifier","src":"9079:3:19"},"nativeSrc":"9079:18:19","nodeType":"YulFunctionCall","src":"9079:18:19"},"variableNames":[{"name":"tail","nativeSrc":"9071:4:19","nodeType":"YulIdentifier","src":"9071:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9151:6:19","nodeType":"YulIdentifier","src":"9151:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"9164:9:19","nodeType":"YulIdentifier","src":"9164:9:19"},{"kind":"number","nativeSrc":"9175:1:19","nodeType":"YulLiteral","src":"9175:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9160:3:19","nodeType":"YulIdentifier","src":"9160:3:19"},"nativeSrc":"9160:17:19","nodeType":"YulFunctionCall","src":"9160:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9107:43:19","nodeType":"YulIdentifier","src":"9107:43:19"},"nativeSrc":"9107:71:19","nodeType":"YulFunctionCall","src":"9107:71:19"},"nativeSrc":"9107:71:19","nodeType":"YulExpressionStatement","src":"9107:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8963:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9033:9:19","nodeType":"YulTypedName","src":"9033:9:19","type":""},{"name":"value0","nativeSrc":"9045:6:19","nodeType":"YulTypedName","src":"9045:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9056:4:19","nodeType":"YulTypedName","src":"9056:4:19","type":""}],"src":"8963:222:19"},{"body":{"nativeSrc":"9310:698:19","nodeType":"YulBlock","src":"9310:698:19","statements":[{"body":{"nativeSrc":"9356:83:19","nodeType":"YulBlock","src":"9356:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9358:77:19","nodeType":"YulIdentifier","src":"9358:77:19"},"nativeSrc":"9358:79:19","nodeType":"YulFunctionCall","src":"9358:79:19"},"nativeSrc":"9358:79:19","nodeType":"YulExpressionStatement","src":"9358:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9331:7:19","nodeType":"YulIdentifier","src":"9331:7:19"},{"name":"headStart","nativeSrc":"9340:9:19","nodeType":"YulIdentifier","src":"9340:9:19"}],"functionName":{"name":"sub","nativeSrc":"9327:3:19","nodeType":"YulIdentifier","src":"9327:3:19"},"nativeSrc":"9327:23:19","nodeType":"YulFunctionCall","src":"9327:23:19"},{"kind":"number","nativeSrc":"9352:2:19","nodeType":"YulLiteral","src":"9352:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"9323:3:19","nodeType":"YulIdentifier","src":"9323:3:19"},"nativeSrc":"9323:32:19","nodeType":"YulFunctionCall","src":"9323:32:19"},"nativeSrc":"9320:119:19","nodeType":"YulIf","src":"9320:119:19"},{"nativeSrc":"9449:117:19","nodeType":"YulBlock","src":"9449:117:19","statements":[{"nativeSrc":"9464:15:19","nodeType":"YulVariableDeclaration","src":"9464:15:19","value":{"kind":"number","nativeSrc":"9478:1:19","nodeType":"YulLiteral","src":"9478:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9468:6:19","nodeType":"YulTypedName","src":"9468:6:19","type":""}]},{"nativeSrc":"9493:63:19","nodeType":"YulAssignment","src":"9493:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9528:9:19","nodeType":"YulIdentifier","src":"9528:9:19"},{"name":"offset","nativeSrc":"9539:6:19","nodeType":"YulIdentifier","src":"9539:6:19"}],"functionName":{"name":"add","nativeSrc":"9524:3:19","nodeType":"YulIdentifier","src":"9524:3:19"},"nativeSrc":"9524:22:19","nodeType":"YulFunctionCall","src":"9524:22:19"},{"name":"dataEnd","nativeSrc":"9548:7:19","nodeType":"YulIdentifier","src":"9548:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9503:20:19","nodeType":"YulIdentifier","src":"9503:20:19"},"nativeSrc":"9503:53:19","nodeType":"YulFunctionCall","src":"9503:53:19"},"variableNames":[{"name":"value0","nativeSrc":"9493:6:19","nodeType":"YulIdentifier","src":"9493:6:19"}]}]},{"nativeSrc":"9576:118:19","nodeType":"YulBlock","src":"9576:118:19","statements":[{"nativeSrc":"9591:16:19","nodeType":"YulVariableDeclaration","src":"9591:16:19","value":{"kind":"number","nativeSrc":"9605:2:19","nodeType":"YulLiteral","src":"9605:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9595:6:19","nodeType":"YulTypedName","src":"9595:6:19","type":""}]},{"nativeSrc":"9621:63:19","nodeType":"YulAssignment","src":"9621:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9656:9:19","nodeType":"YulIdentifier","src":"9656:9:19"},{"name":"offset","nativeSrc":"9667:6:19","nodeType":"YulIdentifier","src":"9667:6:19"}],"functionName":{"name":"add","nativeSrc":"9652:3:19","nodeType":"YulIdentifier","src":"9652:3:19"},"nativeSrc":"9652:22:19","nodeType":"YulFunctionCall","src":"9652:22:19"},{"name":"dataEnd","nativeSrc":"9676:7:19","nodeType":"YulIdentifier","src":"9676:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9631:20:19","nodeType":"YulIdentifier","src":"9631:20:19"},"nativeSrc":"9631:53:19","nodeType":"YulFunctionCall","src":"9631:53:19"},"variableNames":[{"name":"value1","nativeSrc":"9621:6:19","nodeType":"YulIdentifier","src":"9621:6:19"}]}]},{"nativeSrc":"9704:297:19","nodeType":"YulBlock","src":"9704:297:19","statements":[{"nativeSrc":"9719:46:19","nodeType":"YulVariableDeclaration","src":"9719:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9750:9:19","nodeType":"YulIdentifier","src":"9750:9:19"},{"kind":"number","nativeSrc":"9761:2:19","nodeType":"YulLiteral","src":"9761:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9746:3:19","nodeType":"YulIdentifier","src":"9746:3:19"},"nativeSrc":"9746:18:19","nodeType":"YulFunctionCall","src":"9746:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"9733:12:19","nodeType":"YulIdentifier","src":"9733:12:19"},"nativeSrc":"9733:32:19","nodeType":"YulFunctionCall","src":"9733:32:19"},"variables":[{"name":"offset","nativeSrc":"9723:6:19","nodeType":"YulTypedName","src":"9723:6:19","type":""}]},{"body":{"nativeSrc":"9812:83:19","nodeType":"YulBlock","src":"9812:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9814:77:19","nodeType":"YulIdentifier","src":"9814:77:19"},"nativeSrc":"9814:79:19","nodeType":"YulFunctionCall","src":"9814:79:19"},"nativeSrc":"9814:79:19","nodeType":"YulExpressionStatement","src":"9814:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9784:6:19","nodeType":"YulIdentifier","src":"9784:6:19"},{"kind":"number","nativeSrc":"9792:18:19","nodeType":"YulLiteral","src":"9792:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9781:2:19","nodeType":"YulIdentifier","src":"9781:2:19"},"nativeSrc":"9781:30:19","nodeType":"YulFunctionCall","src":"9781:30:19"},"nativeSrc":"9778:117:19","nodeType":"YulIf","src":"9778:117:19"},{"nativeSrc":"9909:82:19","nodeType":"YulAssignment","src":"9909:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9963:9:19","nodeType":"YulIdentifier","src":"9963:9:19"},{"name":"offset","nativeSrc":"9974:6:19","nodeType":"YulIdentifier","src":"9974:6:19"}],"functionName":{"name":"add","nativeSrc":"9959:3:19","nodeType":"YulIdentifier","src":"9959:3:19"},"nativeSrc":"9959:22:19","nodeType":"YulFunctionCall","src":"9959:22:19"},{"name":"dataEnd","nativeSrc":"9983:7:19","nodeType":"YulIdentifier","src":"9983:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"9927:31:19","nodeType":"YulIdentifier","src":"9927:31:19"},"nativeSrc":"9927:64:19","nodeType":"YulFunctionCall","src":"9927:64:19"},"variableNames":[{"name":"value2","nativeSrc":"9909:6:19","nodeType":"YulIdentifier","src":"9909:6:19"},{"name":"value3","nativeSrc":"9917:6:19","nodeType":"YulIdentifier","src":"9917:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"9191:817:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9256:9:19","nodeType":"YulTypedName","src":"9256:9:19","type":""},{"name":"dataEnd","nativeSrc":"9267:7:19","nodeType":"YulTypedName","src":"9267:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9279:6:19","nodeType":"YulTypedName","src":"9279:6:19","type":""},{"name":"value1","nativeSrc":"9287:6:19","nodeType":"YulTypedName","src":"9287:6:19","type":""},{"name":"value2","nativeSrc":"9295:6:19","nodeType":"YulTypedName","src":"9295:6:19","type":""},{"name":"value3","nativeSrc":"9303:6:19","nodeType":"YulTypedName","src":"9303:6:19","type":""}],"src":"9191:817:19"},{"body":{"nativeSrc":"10072:40:19","nodeType":"YulBlock","src":"10072:40:19","statements":[{"nativeSrc":"10083:22:19","nodeType":"YulAssignment","src":"10083:22:19","value":{"arguments":[{"name":"value","nativeSrc":"10099:5:19","nodeType":"YulIdentifier","src":"10099:5:19"}],"functionName":{"name":"mload","nativeSrc":"10093:5:19","nodeType":"YulIdentifier","src":"10093:5:19"},"nativeSrc":"10093:12:19","nodeType":"YulFunctionCall","src":"10093:12:19"},"variableNames":[{"name":"length","nativeSrc":"10083:6:19","nodeType":"YulIdentifier","src":"10083:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10014:98:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10055:5:19","nodeType":"YulTypedName","src":"10055:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10065:6:19","nodeType":"YulTypedName","src":"10065:6:19","type":""}],"src":"10014:98:19"},{"body":{"nativeSrc":"10213:73:19","nodeType":"YulBlock","src":"10213:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10230:3:19","nodeType":"YulIdentifier","src":"10230:3:19"},{"name":"length","nativeSrc":"10235:6:19","nodeType":"YulIdentifier","src":"10235:6:19"}],"functionName":{"name":"mstore","nativeSrc":"10223:6:19","nodeType":"YulIdentifier","src":"10223:6:19"},"nativeSrc":"10223:19:19","nodeType":"YulFunctionCall","src":"10223:19:19"},"nativeSrc":"10223:19:19","nodeType":"YulExpressionStatement","src":"10223:19:19"},{"nativeSrc":"10251:29:19","nodeType":"YulAssignment","src":"10251:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"10270:3:19","nodeType":"YulIdentifier","src":"10270:3:19"},{"kind":"number","nativeSrc":"10275:4:19","nodeType":"YulLiteral","src":"10275:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10266:3:19","nodeType":"YulIdentifier","src":"10266:3:19"},"nativeSrc":"10266:14:19","nodeType":"YulFunctionCall","src":"10266:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"10251:11:19","nodeType":"YulIdentifier","src":"10251:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10118:168:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10185:3:19","nodeType":"YulTypedName","src":"10185:3:19","type":""},{"name":"length","nativeSrc":"10190:6:19","nodeType":"YulTypedName","src":"10190:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10201:11:19","nodeType":"YulTypedName","src":"10201:11:19","type":""}],"src":"10118:168:19"},{"body":{"nativeSrc":"10354:186:19","nodeType":"YulBlock","src":"10354:186:19","statements":[{"nativeSrc":"10365:10:19","nodeType":"YulVariableDeclaration","src":"10365:10:19","value":{"kind":"number","nativeSrc":"10374:1:19","nodeType":"YulLiteral","src":"10374:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10369:1:19","nodeType":"YulTypedName","src":"10369:1:19","type":""}]},{"body":{"nativeSrc":"10434:63:19","nodeType":"YulBlock","src":"10434:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10459:3:19","nodeType":"YulIdentifier","src":"10459:3:19"},{"name":"i","nativeSrc":"10464:1:19","nodeType":"YulIdentifier","src":"10464:1:19"}],"functionName":{"name":"add","nativeSrc":"10455:3:19","nodeType":"YulIdentifier","src":"10455:3:19"},"nativeSrc":"10455:11:19","nodeType":"YulFunctionCall","src":"10455:11:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10478:3:19","nodeType":"YulIdentifier","src":"10478:3:19"},{"name":"i","nativeSrc":"10483:1:19","nodeType":"YulIdentifier","src":"10483:1:19"}],"functionName":{"name":"add","nativeSrc":"10474:3:19","nodeType":"YulIdentifier","src":"10474:3:19"},"nativeSrc":"10474:11:19","nodeType":"YulFunctionCall","src":"10474:11:19"}],"functionName":{"name":"mload","nativeSrc":"10468:5:19","nodeType":"YulIdentifier","src":"10468:5:19"},"nativeSrc":"10468:18:19","nodeType":"YulFunctionCall","src":"10468:18:19"}],"functionName":{"name":"mstore","nativeSrc":"10448:6:19","nodeType":"YulIdentifier","src":"10448:6:19"},"nativeSrc":"10448:39:19","nodeType":"YulFunctionCall","src":"10448:39:19"},"nativeSrc":"10448:39:19","nodeType":"YulExpressionStatement","src":"10448:39:19"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10395:1:19","nodeType":"YulIdentifier","src":"10395:1:19"},{"name":"length","nativeSrc":"10398:6:19","nodeType":"YulIdentifier","src":"10398:6:19"}],"functionName":{"name":"lt","nativeSrc":"10392:2:19","nodeType":"YulIdentifier","src":"10392:2:19"},"nativeSrc":"10392:13:19","nodeType":"YulFunctionCall","src":"10392:13:19"},"nativeSrc":"10384:113:19","nodeType":"YulForLoop","post":{"nativeSrc":"10406:19:19","nodeType":"YulBlock","src":"10406:19:19","statements":[{"nativeSrc":"10408:15:19","nodeType":"YulAssignment","src":"10408:15:19","value":{"arguments":[{"name":"i","nativeSrc":"10417:1:19","nodeType":"YulIdentifier","src":"10417:1:19"},{"kind":"number","nativeSrc":"10420:2:19","nodeType":"YulLiteral","src":"10420:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10413:3:19","nodeType":"YulIdentifier","src":"10413:3:19"},"nativeSrc":"10413:10:19","nodeType":"YulFunctionCall","src":"10413:10:19"},"variableNames":[{"name":"i","nativeSrc":"10408:1:19","nodeType":"YulIdentifier","src":"10408:1:19"}]}]},"pre":{"nativeSrc":"10388:3:19","nodeType":"YulBlock","src":"10388:3:19","statements":[]},"src":"10384:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10517:3:19","nodeType":"YulIdentifier","src":"10517:3:19"},{"name":"length","nativeSrc":"10522:6:19","nodeType":"YulIdentifier","src":"10522:6:19"}],"functionName":{"name":"add","nativeSrc":"10513:3:19","nodeType":"YulIdentifier","src":"10513:3:19"},"nativeSrc":"10513:16:19","nodeType":"YulFunctionCall","src":"10513:16:19"},{"kind":"number","nativeSrc":"10531:1:19","nodeType":"YulLiteral","src":"10531:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10506:6:19","nodeType":"YulIdentifier","src":"10506:6:19"},"nativeSrc":"10506:27:19","nodeType":"YulFunctionCall","src":"10506:27:19"},"nativeSrc":"10506:27:19","nodeType":"YulExpressionStatement","src":"10506:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10292:248:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10336:3:19","nodeType":"YulTypedName","src":"10336:3:19","type":""},{"name":"dst","nativeSrc":"10341:3:19","nodeType":"YulTypedName","src":"10341:3:19","type":""},{"name":"length","nativeSrc":"10346:6:19","nodeType":"YulTypedName","src":"10346:6:19","type":""}],"src":"10292:248:19"},{"body":{"nativeSrc":"10636:283:19","nodeType":"YulBlock","src":"10636:283:19","statements":[{"nativeSrc":"10646:52:19","nodeType":"YulVariableDeclaration","src":"10646:52:19","value":{"arguments":[{"name":"value","nativeSrc":"10692:5:19","nodeType":"YulIdentifier","src":"10692:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10660:31:19","nodeType":"YulIdentifier","src":"10660:31:19"},"nativeSrc":"10660:38:19","nodeType":"YulFunctionCall","src":"10660:38:19"},"variables":[{"name":"length","nativeSrc":"10650:6:19","nodeType":"YulTypedName","src":"10650:6:19","type":""}]},{"nativeSrc":"10707:77:19","nodeType":"YulAssignment","src":"10707:77:19","value":{"arguments":[{"name":"pos","nativeSrc":"10772:3:19","nodeType":"YulIdentifier","src":"10772:3:19"},{"name":"length","nativeSrc":"10777:6:19","nodeType":"YulIdentifier","src":"10777:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10714:57:19","nodeType":"YulIdentifier","src":"10714:57:19"},"nativeSrc":"10714:70:19","nodeType":"YulFunctionCall","src":"10714:70:19"},"variableNames":[{"name":"pos","nativeSrc":"10707:3:19","nodeType":"YulIdentifier","src":"10707:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10832:5:19","nodeType":"YulIdentifier","src":"10832:5:19"},{"kind":"number","nativeSrc":"10839:4:19","nodeType":"YulLiteral","src":"10839:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10828:3:19","nodeType":"YulIdentifier","src":"10828:3:19"},"nativeSrc":"10828:16:19","nodeType":"YulFunctionCall","src":"10828:16:19"},{"name":"pos","nativeSrc":"10846:3:19","nodeType":"YulIdentifier","src":"10846:3:19"},{"name":"length","nativeSrc":"10851:6:19","nodeType":"YulIdentifier","src":"10851:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10793:34:19","nodeType":"YulIdentifier","src":"10793:34:19"},"nativeSrc":"10793:65:19","nodeType":"YulFunctionCall","src":"10793:65:19"},"nativeSrc":"10793:65:19","nodeType":"YulExpressionStatement","src":"10793:65:19"},{"nativeSrc":"10867:46:19","nodeType":"YulAssignment","src":"10867:46:19","value":{"arguments":[{"name":"pos","nativeSrc":"10878:3:19","nodeType":"YulIdentifier","src":"10878:3:19"},{"arguments":[{"name":"length","nativeSrc":"10905:6:19","nodeType":"YulIdentifier","src":"10905:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10883:21:19","nodeType":"YulIdentifier","src":"10883:21:19"},"nativeSrc":"10883:29:19","nodeType":"YulFunctionCall","src":"10883:29:19"}],"functionName":{"name":"add","nativeSrc":"10874:3:19","nodeType":"YulIdentifier","src":"10874:3:19"},"nativeSrc":"10874:39:19","nodeType":"YulFunctionCall","src":"10874:39:19"},"variableNames":[{"name":"end","nativeSrc":"10867:3:19","nodeType":"YulIdentifier","src":"10867:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10546:373:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10617:5:19","nodeType":"YulTypedName","src":"10617:5:19","type":""},{"name":"pos","nativeSrc":"10624:3:19","nodeType":"YulTypedName","src":"10624:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10632:3:19","nodeType":"YulTypedName","src":"10632:3:19","type":""}],"src":"10546:373:19"},{"body":{"nativeSrc":"11041:193:19","nodeType":"YulBlock","src":"11041:193:19","statements":[{"nativeSrc":"11051:26:19","nodeType":"YulAssignment","src":"11051:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"11063:9:19","nodeType":"YulIdentifier","src":"11063:9:19"},{"kind":"number","nativeSrc":"11074:2:19","nodeType":"YulLiteral","src":"11074:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11059:3:19","nodeType":"YulIdentifier","src":"11059:3:19"},"nativeSrc":"11059:18:19","nodeType":"YulFunctionCall","src":"11059:18:19"},"variableNames":[{"name":"tail","nativeSrc":"11051:4:19","nodeType":"YulIdentifier","src":"11051:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11098:9:19","nodeType":"YulIdentifier","src":"11098:9:19"},{"kind":"number","nativeSrc":"11109:1:19","nodeType":"YulLiteral","src":"11109:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11094:3:19","nodeType":"YulIdentifier","src":"11094:3:19"},"nativeSrc":"11094:17:19","nodeType":"YulFunctionCall","src":"11094:17:19"},{"arguments":[{"name":"tail","nativeSrc":"11117:4:19","nodeType":"YulIdentifier","src":"11117:4:19"},{"name":"headStart","nativeSrc":"11123:9:19","nodeType":"YulIdentifier","src":"11123:9:19"}],"functionName":{"name":"sub","nativeSrc":"11113:3:19","nodeType":"YulIdentifier","src":"11113:3:19"},"nativeSrc":"11113:20:19","nodeType":"YulFunctionCall","src":"11113:20:19"}],"functionName":{"name":"mstore","nativeSrc":"11087:6:19","nodeType":"YulIdentifier","src":"11087:6:19"},"nativeSrc":"11087:47:19","nodeType":"YulFunctionCall","src":"11087:47:19"},"nativeSrc":"11087:47:19","nodeType":"YulExpressionStatement","src":"11087:47:19"},{"nativeSrc":"11143:84:19","nodeType":"YulAssignment","src":"11143:84:19","value":{"arguments":[{"name":"value0","nativeSrc":"11213:6:19","nodeType":"YulIdentifier","src":"11213:6:19"},{"name":"tail","nativeSrc":"11222:4:19","nodeType":"YulIdentifier","src":"11222:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"11151:61:19","nodeType":"YulIdentifier","src":"11151:61:19"},"nativeSrc":"11151:76:19","nodeType":"YulFunctionCall","src":"11151:76:19"},"variableNames":[{"name":"tail","nativeSrc":"11143:4:19","nodeType":"YulIdentifier","src":"11143:4:19"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10925:309:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11013:9:19","nodeType":"YulTypedName","src":"11013:9:19","type":""},{"name":"value0","nativeSrc":"11025:6:19","nodeType":"YulTypedName","src":"11025:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11036:4:19","nodeType":"YulTypedName","src":"11036:4:19","type":""}],"src":"10925:309:19"},{"body":{"nativeSrc":"11305:53:19","nodeType":"YulBlock","src":"11305:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11322:3:19","nodeType":"YulIdentifier","src":"11322:3:19"},{"arguments":[{"name":"value","nativeSrc":"11345:5:19","nodeType":"YulIdentifier","src":"11345:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11327:17:19","nodeType":"YulIdentifier","src":"11327:17:19"},"nativeSrc":"11327:24:19","nodeType":"YulFunctionCall","src":"11327:24:19"}],"functionName":{"name":"mstore","nativeSrc":"11315:6:19","nodeType":"YulIdentifier","src":"11315:6:19"},"nativeSrc":"11315:37:19","nodeType":"YulFunctionCall","src":"11315:37:19"},"nativeSrc":"11315:37:19","nodeType":"YulExpressionStatement","src":"11315:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11240:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11293:5:19","nodeType":"YulTypedName","src":"11293:5:19","type":""},{"name":"pos","nativeSrc":"11300:3:19","nodeType":"YulTypedName","src":"11300:3:19","type":""}],"src":"11240:118:19"},{"body":{"nativeSrc":"11462:124:19","nodeType":"YulBlock","src":"11462:124:19","statements":[{"nativeSrc":"11472:26:19","nodeType":"YulAssignment","src":"11472:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"11484:9:19","nodeType":"YulIdentifier","src":"11484:9:19"},{"kind":"number","nativeSrc":"11495:2:19","nodeType":"YulLiteral","src":"11495:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11480:3:19","nodeType":"YulIdentifier","src":"11480:3:19"},"nativeSrc":"11480:18:19","nodeType":"YulFunctionCall","src":"11480:18:19"},"variableNames":[{"name":"tail","nativeSrc":"11472:4:19","nodeType":"YulIdentifier","src":"11472:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11552:6:19","nodeType":"YulIdentifier","src":"11552:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"11565:9:19","nodeType":"YulIdentifier","src":"11565:9:19"},{"kind":"number","nativeSrc":"11576:1:19","nodeType":"YulLiteral","src":"11576:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11561:3:19","nodeType":"YulIdentifier","src":"11561:3:19"},"nativeSrc":"11561:17:19","nodeType":"YulFunctionCall","src":"11561:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11508:43:19","nodeType":"YulIdentifier","src":"11508:43:19"},"nativeSrc":"11508:71:19","nodeType":"YulFunctionCall","src":"11508:71:19"},"nativeSrc":"11508:71:19","nodeType":"YulExpressionStatement","src":"11508:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"11364:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11434:9:19","nodeType":"YulTypedName","src":"11434:9:19","type":""},{"name":"value0","nativeSrc":"11446:6:19","nodeType":"YulTypedName","src":"11446:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11457:4:19","nodeType":"YulTypedName","src":"11457:4:19","type":""}],"src":"11364:222:19"},{"body":{"nativeSrc":"11746:288:19","nodeType":"YulBlock","src":"11746:288:19","statements":[{"nativeSrc":"11756:26:19","nodeType":"YulAssignment","src":"11756:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"11768:9:19","nodeType":"YulIdentifier","src":"11768:9:19"},{"kind":"number","nativeSrc":"11779:2:19","nodeType":"YulLiteral","src":"11779:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11764:3:19","nodeType":"YulIdentifier","src":"11764:3:19"},"nativeSrc":"11764:18:19","nodeType":"YulFunctionCall","src":"11764:18:19"},"variableNames":[{"name":"tail","nativeSrc":"11756:4:19","nodeType":"YulIdentifier","src":"11756:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11836:6:19","nodeType":"YulIdentifier","src":"11836:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"11849:9:19","nodeType":"YulIdentifier","src":"11849:9:19"},{"kind":"number","nativeSrc":"11860:1:19","nodeType":"YulLiteral","src":"11860:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11845:3:19","nodeType":"YulIdentifier","src":"11845:3:19"},"nativeSrc":"11845:17:19","nodeType":"YulFunctionCall","src":"11845:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11792:43:19","nodeType":"YulIdentifier","src":"11792:43:19"},"nativeSrc":"11792:71:19","nodeType":"YulFunctionCall","src":"11792:71:19"},"nativeSrc":"11792:71:19","nodeType":"YulExpressionStatement","src":"11792:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11917:6:19","nodeType":"YulIdentifier","src":"11917:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"11930:9:19","nodeType":"YulIdentifier","src":"11930:9:19"},{"kind":"number","nativeSrc":"11941:2:19","nodeType":"YulLiteral","src":"11941:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11926:3:19","nodeType":"YulIdentifier","src":"11926:3:19"},"nativeSrc":"11926:18:19","nodeType":"YulFunctionCall","src":"11926:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11873:43:19","nodeType":"YulIdentifier","src":"11873:43:19"},"nativeSrc":"11873:72:19","nodeType":"YulFunctionCall","src":"11873:72:19"},"nativeSrc":"11873:72:19","nodeType":"YulExpressionStatement","src":"11873:72:19"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11999:6:19","nodeType":"YulIdentifier","src":"11999:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"12012:9:19","nodeType":"YulIdentifier","src":"12012:9:19"},{"kind":"number","nativeSrc":"12023:2:19","nodeType":"YulLiteral","src":"12023:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12008:3:19","nodeType":"YulIdentifier","src":"12008:3:19"},"nativeSrc":"12008:18:19","nodeType":"YulFunctionCall","src":"12008:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11955:43:19","nodeType":"YulIdentifier","src":"11955:43:19"},"nativeSrc":"11955:72:19","nodeType":"YulFunctionCall","src":"11955:72:19"},"nativeSrc":"11955:72:19","nodeType":"YulExpressionStatement","src":"11955:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"11592:442:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11702:9:19","nodeType":"YulTypedName","src":"11702:9:19","type":""},{"name":"value2","nativeSrc":"11714:6:19","nodeType":"YulTypedName","src":"11714:6:19","type":""},{"name":"value1","nativeSrc":"11722:6:19","nodeType":"YulTypedName","src":"11722:6:19","type":""},{"name":"value0","nativeSrc":"11730:6:19","nodeType":"YulTypedName","src":"11730:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11741:4:19","nodeType":"YulTypedName","src":"11741:4:19","type":""}],"src":"11592:442:19"},{"body":{"nativeSrc":"12147:478:19","nodeType":"YulBlock","src":"12147:478:19","statements":[{"body":{"nativeSrc":"12196:83:19","nodeType":"YulBlock","src":"12196:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"12198:77:19","nodeType":"YulIdentifier","src":"12198:77:19"},"nativeSrc":"12198:79:19","nodeType":"YulFunctionCall","src":"12198:79:19"},"nativeSrc":"12198:79:19","nodeType":"YulExpressionStatement","src":"12198:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"12175:6:19","nodeType":"YulIdentifier","src":"12175:6:19"},{"kind":"number","nativeSrc":"12183:4:19","nodeType":"YulLiteral","src":"12183:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"12171:3:19","nodeType":"YulIdentifier","src":"12171:3:19"},"nativeSrc":"12171:17:19","nodeType":"YulFunctionCall","src":"12171:17:19"},{"name":"end","nativeSrc":"12190:3:19","nodeType":"YulIdentifier","src":"12190:3:19"}],"functionName":{"name":"slt","nativeSrc":"12167:3:19","nodeType":"YulIdentifier","src":"12167:3:19"},"nativeSrc":"12167:27:19","nodeType":"YulFunctionCall","src":"12167:27:19"}],"functionName":{"name":"iszero","nativeSrc":"12160:6:19","nodeType":"YulIdentifier","src":"12160:6:19"},"nativeSrc":"12160:35:19","nodeType":"YulFunctionCall","src":"12160:35:19"},"nativeSrc":"12157:122:19","nodeType":"YulIf","src":"12157:122:19"},{"nativeSrc":"12288:30:19","nodeType":"YulAssignment","src":"12288:30:19","value":{"arguments":[{"name":"offset","nativeSrc":"12311:6:19","nodeType":"YulIdentifier","src":"12311:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"12298:12:19","nodeType":"YulIdentifier","src":"12298:12:19"},"nativeSrc":"12298:20:19","nodeType":"YulFunctionCall","src":"12298:20:19"},"variableNames":[{"name":"length","nativeSrc":"12288:6:19","nodeType":"YulIdentifier","src":"12288:6:19"}]},{"body":{"nativeSrc":"12361:83:19","nodeType":"YulBlock","src":"12361:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"12363:77:19","nodeType":"YulIdentifier","src":"12363:77:19"},"nativeSrc":"12363:79:19","nodeType":"YulFunctionCall","src":"12363:79:19"},"nativeSrc":"12363:79:19","nodeType":"YulExpressionStatement","src":"12363:79:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12333:6:19","nodeType":"YulIdentifier","src":"12333:6:19"},{"kind":"number","nativeSrc":"12341:18:19","nodeType":"YulLiteral","src":"12341:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12330:2:19","nodeType":"YulIdentifier","src":"12330:2:19"},"nativeSrc":"12330:30:19","nodeType":"YulFunctionCall","src":"12330:30:19"},"nativeSrc":"12327:117:19","nodeType":"YulIf","src":"12327:117:19"},{"nativeSrc":"12453:29:19","nodeType":"YulAssignment","src":"12453:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"12469:6:19","nodeType":"YulIdentifier","src":"12469:6:19"},{"kind":"number","nativeSrc":"12477:4:19","nodeType":"YulLiteral","src":"12477:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12465:3:19","nodeType":"YulIdentifier","src":"12465:3:19"},"nativeSrc":"12465:17:19","nodeType":"YulFunctionCall","src":"12465:17:19"},"variableNames":[{"name":"arrayPos","nativeSrc":"12453:8:19","nodeType":"YulIdentifier","src":"12453:8:19"}]},{"body":{"nativeSrc":"12536:83:19","nodeType":"YulBlock","src":"12536:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"12538:77:19","nodeType":"YulIdentifier","src":"12538:77:19"},"nativeSrc":"12538:79:19","nodeType":"YulFunctionCall","src":"12538:79:19"},"nativeSrc":"12538:79:19","nodeType":"YulExpressionStatement","src":"12538:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"12501:8:19","nodeType":"YulIdentifier","src":"12501:8:19"},{"arguments":[{"name":"length","nativeSrc":"12515:6:19","nodeType":"YulIdentifier","src":"12515:6:19"},{"kind":"number","nativeSrc":"12523:4:19","nodeType":"YulLiteral","src":"12523:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"12511:3:19","nodeType":"YulIdentifier","src":"12511:3:19"},"nativeSrc":"12511:17:19","nodeType":"YulFunctionCall","src":"12511:17:19"}],"functionName":{"name":"add","nativeSrc":"12497:3:19","nodeType":"YulIdentifier","src":"12497:3:19"},"nativeSrc":"12497:32:19","nodeType":"YulFunctionCall","src":"12497:32:19"},{"name":"end","nativeSrc":"12531:3:19","nodeType":"YulIdentifier","src":"12531:3:19"}],"functionName":{"name":"gt","nativeSrc":"12494:2:19","nodeType":"YulIdentifier","src":"12494:2:19"},"nativeSrc":"12494:41:19","nodeType":"YulFunctionCall","src":"12494:41:19"},"nativeSrc":"12491:128:19","nodeType":"YulIf","src":"12491:128:19"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"12057:568:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12114:6:19","nodeType":"YulTypedName","src":"12114:6:19","type":""},{"name":"end","nativeSrc":"12122:3:19","nodeType":"YulTypedName","src":"12122:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"12130:8:19","nodeType":"YulTypedName","src":"12130:8:19","type":""},{"name":"length","nativeSrc":"12140:6:19","nodeType":"YulTypedName","src":"12140:6:19","type":""}],"src":"12057:568:19"},{"body":{"nativeSrc":"12854:1346:19","nodeType":"YulBlock","src":"12854:1346:19","statements":[{"body":{"nativeSrc":"12901:83:19","nodeType":"YulBlock","src":"12901:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12903:77:19","nodeType":"YulIdentifier","src":"12903:77:19"},"nativeSrc":"12903:79:19","nodeType":"YulFunctionCall","src":"12903:79:19"},"nativeSrc":"12903:79:19","nodeType":"YulExpressionStatement","src":"12903:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12875:7:19","nodeType":"YulIdentifier","src":"12875:7:19"},{"name":"headStart","nativeSrc":"12884:9:19","nodeType":"YulIdentifier","src":"12884:9:19"}],"functionName":{"name":"sub","nativeSrc":"12871:3:19","nodeType":"YulIdentifier","src":"12871:3:19"},"nativeSrc":"12871:23:19","nodeType":"YulFunctionCall","src":"12871:23:19"},{"kind":"number","nativeSrc":"12896:3:19","nodeType":"YulLiteral","src":"12896:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"12867:3:19","nodeType":"YulIdentifier","src":"12867:3:19"},"nativeSrc":"12867:33:19","nodeType":"YulFunctionCall","src":"12867:33:19"},"nativeSrc":"12864:120:19","nodeType":"YulIf","src":"12864:120:19"},{"nativeSrc":"12994:117:19","nodeType":"YulBlock","src":"12994:117:19","statements":[{"nativeSrc":"13009:15:19","nodeType":"YulVariableDeclaration","src":"13009:15:19","value":{"kind":"number","nativeSrc":"13023:1:19","nodeType":"YulLiteral","src":"13023:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13013:6:19","nodeType":"YulTypedName","src":"13013:6:19","type":""}]},{"nativeSrc":"13038:63:19","nodeType":"YulAssignment","src":"13038:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13073:9:19","nodeType":"YulIdentifier","src":"13073:9:19"},{"name":"offset","nativeSrc":"13084:6:19","nodeType":"YulIdentifier","src":"13084:6:19"}],"functionName":{"name":"add","nativeSrc":"13069:3:19","nodeType":"YulIdentifier","src":"13069:3:19"},"nativeSrc":"13069:22:19","nodeType":"YulFunctionCall","src":"13069:22:19"},{"name":"dataEnd","nativeSrc":"13093:7:19","nodeType":"YulIdentifier","src":"13093:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13048:20:19","nodeType":"YulIdentifier","src":"13048:20:19"},"nativeSrc":"13048:53:19","nodeType":"YulFunctionCall","src":"13048:53:19"},"variableNames":[{"name":"value0","nativeSrc":"13038:6:19","nodeType":"YulIdentifier","src":"13038:6:19"}]}]},{"nativeSrc":"13121:118:19","nodeType":"YulBlock","src":"13121:118:19","statements":[{"nativeSrc":"13136:16:19","nodeType":"YulVariableDeclaration","src":"13136:16:19","value":{"kind":"number","nativeSrc":"13150:2:19","nodeType":"YulLiteral","src":"13150:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13140:6:19","nodeType":"YulTypedName","src":"13140:6:19","type":""}]},{"nativeSrc":"13166:63:19","nodeType":"YulAssignment","src":"13166:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13201:9:19","nodeType":"YulIdentifier","src":"13201:9:19"},{"name":"offset","nativeSrc":"13212:6:19","nodeType":"YulIdentifier","src":"13212:6:19"}],"functionName":{"name":"add","nativeSrc":"13197:3:19","nodeType":"YulIdentifier","src":"13197:3:19"},"nativeSrc":"13197:22:19","nodeType":"YulFunctionCall","src":"13197:22:19"},{"name":"dataEnd","nativeSrc":"13221:7:19","nodeType":"YulIdentifier","src":"13221:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13176:20:19","nodeType":"YulIdentifier","src":"13176:20:19"},"nativeSrc":"13176:53:19","nodeType":"YulFunctionCall","src":"13176:53:19"},"variableNames":[{"name":"value1","nativeSrc":"13166:6:19","nodeType":"YulIdentifier","src":"13166:6:19"}]}]},{"nativeSrc":"13249:313:19","nodeType":"YulBlock","src":"13249:313:19","statements":[{"nativeSrc":"13264:46:19","nodeType":"YulVariableDeclaration","src":"13264:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13295:9:19","nodeType":"YulIdentifier","src":"13295:9:19"},{"kind":"number","nativeSrc":"13306:2:19","nodeType":"YulLiteral","src":"13306:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13291:3:19","nodeType":"YulIdentifier","src":"13291:3:19"},"nativeSrc":"13291:18:19","nodeType":"YulFunctionCall","src":"13291:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"13278:12:19","nodeType":"YulIdentifier","src":"13278:12:19"},"nativeSrc":"13278:32:19","nodeType":"YulFunctionCall","src":"13278:32:19"},"variables":[{"name":"offset","nativeSrc":"13268:6:19","nodeType":"YulTypedName","src":"13268:6:19","type":""}]},{"body":{"nativeSrc":"13357:83:19","nodeType":"YulBlock","src":"13357:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"13359:77:19","nodeType":"YulIdentifier","src":"13359:77:19"},"nativeSrc":"13359:79:19","nodeType":"YulFunctionCall","src":"13359:79:19"},"nativeSrc":"13359:79:19","nodeType":"YulExpressionStatement","src":"13359:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13329:6:19","nodeType":"YulIdentifier","src":"13329:6:19"},{"kind":"number","nativeSrc":"13337:18:19","nodeType":"YulLiteral","src":"13337:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13326:2:19","nodeType":"YulIdentifier","src":"13326:2:19"},"nativeSrc":"13326:30:19","nodeType":"YulFunctionCall","src":"13326:30:19"},"nativeSrc":"13323:117:19","nodeType":"YulIf","src":"13323:117:19"},{"nativeSrc":"13454:98:19","nodeType":"YulAssignment","src":"13454:98:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13524:9:19","nodeType":"YulIdentifier","src":"13524:9:19"},{"name":"offset","nativeSrc":"13535:6:19","nodeType":"YulIdentifier","src":"13535:6:19"}],"functionName":{"name":"add","nativeSrc":"13520:3:19","nodeType":"YulIdentifier","src":"13520:3:19"},"nativeSrc":"13520:22:19","nodeType":"YulFunctionCall","src":"13520:22:19"},{"name":"dataEnd","nativeSrc":"13544:7:19","nodeType":"YulIdentifier","src":"13544:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"13472:47:19","nodeType":"YulIdentifier","src":"13472:47:19"},"nativeSrc":"13472:80:19","nodeType":"YulFunctionCall","src":"13472:80:19"},"variableNames":[{"name":"value2","nativeSrc":"13454:6:19","nodeType":"YulIdentifier","src":"13454:6:19"},{"name":"value3","nativeSrc":"13462:6:19","nodeType":"YulIdentifier","src":"13462:6:19"}]}]},{"nativeSrc":"13572:313:19","nodeType":"YulBlock","src":"13572:313:19","statements":[{"nativeSrc":"13587:46:19","nodeType":"YulVariableDeclaration","src":"13587:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13618:9:19","nodeType":"YulIdentifier","src":"13618:9:19"},{"kind":"number","nativeSrc":"13629:2:19","nodeType":"YulLiteral","src":"13629:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13614:3:19","nodeType":"YulIdentifier","src":"13614:3:19"},"nativeSrc":"13614:18:19","nodeType":"YulFunctionCall","src":"13614:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"13601:12:19","nodeType":"YulIdentifier","src":"13601:12:19"},"nativeSrc":"13601:32:19","nodeType":"YulFunctionCall","src":"13601:32:19"},"variables":[{"name":"offset","nativeSrc":"13591:6:19","nodeType":"YulTypedName","src":"13591:6:19","type":""}]},{"body":{"nativeSrc":"13680:83:19","nodeType":"YulBlock","src":"13680:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"13682:77:19","nodeType":"YulIdentifier","src":"13682:77:19"},"nativeSrc":"13682:79:19","nodeType":"YulFunctionCall","src":"13682:79:19"},"nativeSrc":"13682:79:19","nodeType":"YulExpressionStatement","src":"13682:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13652:6:19","nodeType":"YulIdentifier","src":"13652:6:19"},{"kind":"number","nativeSrc":"13660:18:19","nodeType":"YulLiteral","src":"13660:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13649:2:19","nodeType":"YulIdentifier","src":"13649:2:19"},"nativeSrc":"13649:30:19","nodeType":"YulFunctionCall","src":"13649:30:19"},"nativeSrc":"13646:117:19","nodeType":"YulIf","src":"13646:117:19"},{"nativeSrc":"13777:98:19","nodeType":"YulAssignment","src":"13777:98:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13847:9:19","nodeType":"YulIdentifier","src":"13847:9:19"},{"name":"offset","nativeSrc":"13858:6:19","nodeType":"YulIdentifier","src":"13858:6:19"}],"functionName":{"name":"add","nativeSrc":"13843:3:19","nodeType":"YulIdentifier","src":"13843:3:19"},"nativeSrc":"13843:22:19","nodeType":"YulFunctionCall","src":"13843:22:19"},{"name":"dataEnd","nativeSrc":"13867:7:19","nodeType":"YulIdentifier","src":"13867:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"13795:47:19","nodeType":"YulIdentifier","src":"13795:47:19"},"nativeSrc":"13795:80:19","nodeType":"YulFunctionCall","src":"13795:80:19"},"variableNames":[{"name":"value4","nativeSrc":"13777:6:19","nodeType":"YulIdentifier","src":"13777:6:19"},{"name":"value5","nativeSrc":"13785:6:19","nodeType":"YulIdentifier","src":"13785:6:19"}]}]},{"nativeSrc":"13895:298:19","nodeType":"YulBlock","src":"13895:298:19","statements":[{"nativeSrc":"13910:47:19","nodeType":"YulVariableDeclaration","src":"13910:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13941:9:19","nodeType":"YulIdentifier","src":"13941:9:19"},{"kind":"number","nativeSrc":"13952:3:19","nodeType":"YulLiteral","src":"13952:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13937:3:19","nodeType":"YulIdentifier","src":"13937:3:19"},"nativeSrc":"13937:19:19","nodeType":"YulFunctionCall","src":"13937:19:19"}],"functionName":{"name":"calldataload","nativeSrc":"13924:12:19","nodeType":"YulIdentifier","src":"13924:12:19"},"nativeSrc":"13924:33:19","nodeType":"YulFunctionCall","src":"13924:33:19"},"variables":[{"name":"offset","nativeSrc":"13914:6:19","nodeType":"YulTypedName","src":"13914:6:19","type":""}]},{"body":{"nativeSrc":"14004:83:19","nodeType":"YulBlock","src":"14004:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14006:77:19","nodeType":"YulIdentifier","src":"14006:77:19"},"nativeSrc":"14006:79:19","nodeType":"YulFunctionCall","src":"14006:79:19"},"nativeSrc":"14006:79:19","nodeType":"YulExpressionStatement","src":"14006:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13976:6:19","nodeType":"YulIdentifier","src":"13976:6:19"},{"kind":"number","nativeSrc":"13984:18:19","nodeType":"YulLiteral","src":"13984:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13973:2:19","nodeType":"YulIdentifier","src":"13973:2:19"},"nativeSrc":"13973:30:19","nodeType":"YulFunctionCall","src":"13973:30:19"},"nativeSrc":"13970:117:19","nodeType":"YulIf","src":"13970:117:19"},{"nativeSrc":"14101:82:19","nodeType":"YulAssignment","src":"14101:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14155:9:19","nodeType":"YulIdentifier","src":"14155:9:19"},{"name":"offset","nativeSrc":"14166:6:19","nodeType":"YulIdentifier","src":"14166:6:19"}],"functionName":{"name":"add","nativeSrc":"14151:3:19","nodeType":"YulIdentifier","src":"14151:3:19"},"nativeSrc":"14151:22:19","nodeType":"YulFunctionCall","src":"14151:22:19"},{"name":"dataEnd","nativeSrc":"14175:7:19","nodeType":"YulIdentifier","src":"14175:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"14119:31:19","nodeType":"YulIdentifier","src":"14119:31:19"},"nativeSrc":"14119:64:19","nodeType":"YulFunctionCall","src":"14119:64:19"},"variableNames":[{"name":"value6","nativeSrc":"14101:6:19","nodeType":"YulIdentifier","src":"14101:6:19"},{"name":"value7","nativeSrc":"14109:6:19","nodeType":"YulIdentifier","src":"14109:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nativeSrc":"12631:1569:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12768:9:19","nodeType":"YulTypedName","src":"12768:9:19","type":""},{"name":"dataEnd","nativeSrc":"12779:7:19","nodeType":"YulTypedName","src":"12779:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12791:6:19","nodeType":"YulTypedName","src":"12791:6:19","type":""},{"name":"value1","nativeSrc":"12799:6:19","nodeType":"YulTypedName","src":"12799:6:19","type":""},{"name":"value2","nativeSrc":"12807:6:19","nodeType":"YulTypedName","src":"12807:6:19","type":""},{"name":"value3","nativeSrc":"12815:6:19","nodeType":"YulTypedName","src":"12815:6:19","type":""},{"name":"value4","nativeSrc":"12823:6:19","nodeType":"YulTypedName","src":"12823:6:19","type":""},{"name":"value5","nativeSrc":"12831:6:19","nodeType":"YulTypedName","src":"12831:6:19","type":""},{"name":"value6","nativeSrc":"12839:6:19","nodeType":"YulTypedName","src":"12839:6:19","type":""},{"name":"value7","nativeSrc":"12847:6:19","nodeType":"YulTypedName","src":"12847:6:19","type":""}],"src":"12631:1569:19"},{"body":{"nativeSrc":"14259:51:19","nodeType":"YulBlock","src":"14259:51:19","statements":[{"nativeSrc":"14269:35:19","nodeType":"YulAssignment","src":"14269:35:19","value":{"arguments":[{"name":"value","nativeSrc":"14298:5:19","nodeType":"YulIdentifier","src":"14298:5:19"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"14280:17:19","nodeType":"YulIdentifier","src":"14280:17:19"},"nativeSrc":"14280:24:19","nodeType":"YulFunctionCall","src":"14280:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"14269:7:19","nodeType":"YulIdentifier","src":"14269:7:19"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"14206:104:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14241:5:19","nodeType":"YulTypedName","src":"14241:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14251:7:19","nodeType":"YulTypedName","src":"14251:7:19","type":""}],"src":"14206:104:19"},{"body":{"nativeSrc":"14367:87:19","nodeType":"YulBlock","src":"14367:87:19","statements":[{"body":{"nativeSrc":"14432:16:19","nodeType":"YulBlock","src":"14432:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14441:1:19","nodeType":"YulLiteral","src":"14441:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"14444:1:19","nodeType":"YulLiteral","src":"14444:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14434:6:19","nodeType":"YulIdentifier","src":"14434:6:19"},"nativeSrc":"14434:12:19","nodeType":"YulFunctionCall","src":"14434:12:19"},"nativeSrc":"14434:12:19","nodeType":"YulExpressionStatement","src":"14434:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14390:5:19","nodeType":"YulIdentifier","src":"14390:5:19"},{"arguments":[{"name":"value","nativeSrc":"14423:5:19","nodeType":"YulIdentifier","src":"14423:5:19"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"14397:25:19","nodeType":"YulIdentifier","src":"14397:25:19"},"nativeSrc":"14397:32:19","nodeType":"YulFunctionCall","src":"14397:32:19"}],"functionName":{"name":"eq","nativeSrc":"14387:2:19","nodeType":"YulIdentifier","src":"14387:2:19"},"nativeSrc":"14387:43:19","nodeType":"YulFunctionCall","src":"14387:43:19"}],"functionName":{"name":"iszero","nativeSrc":"14380:6:19","nodeType":"YulIdentifier","src":"14380:6:19"},"nativeSrc":"14380:51:19","nodeType":"YulFunctionCall","src":"14380:51:19"},"nativeSrc":"14377:71:19","nodeType":"YulIf","src":"14377:71:19"}]},"name":"validator_revert_t_address_payable","nativeSrc":"14316:138:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14360:5:19","nodeType":"YulTypedName","src":"14360:5:19","type":""}],"src":"14316:138:19"},{"body":{"nativeSrc":"14520:95:19","nodeType":"YulBlock","src":"14520:95:19","statements":[{"nativeSrc":"14530:29:19","nodeType":"YulAssignment","src":"14530:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"14552:6:19","nodeType":"YulIdentifier","src":"14552:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"14539:12:19","nodeType":"YulIdentifier","src":"14539:12:19"},"nativeSrc":"14539:20:19","nodeType":"YulFunctionCall","src":"14539:20:19"},"variableNames":[{"name":"value","nativeSrc":"14530:5:19","nodeType":"YulIdentifier","src":"14530:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14603:5:19","nodeType":"YulIdentifier","src":"14603:5:19"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"14568:34:19","nodeType":"YulIdentifier","src":"14568:34:19"},"nativeSrc":"14568:41:19","nodeType":"YulFunctionCall","src":"14568:41:19"},"nativeSrc":"14568:41:19","nodeType":"YulExpressionStatement","src":"14568:41:19"}]},"name":"abi_decode_t_address_payable","nativeSrc":"14460:155:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14498:6:19","nodeType":"YulTypedName","src":"14498:6:19","type":""},{"name":"end","nativeSrc":"14506:3:19","nodeType":"YulTypedName","src":"14506:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14514:5:19","nodeType":"YulTypedName","src":"14514:5:19","type":""}],"src":"14460:155:19"},{"body":{"nativeSrc":"14712:399:19","nodeType":"YulBlock","src":"14712:399:19","statements":[{"body":{"nativeSrc":"14758:83:19","nodeType":"YulBlock","src":"14758:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14760:77:19","nodeType":"YulIdentifier","src":"14760:77:19"},"nativeSrc":"14760:79:19","nodeType":"YulFunctionCall","src":"14760:79:19"},"nativeSrc":"14760:79:19","nodeType":"YulExpressionStatement","src":"14760:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14733:7:19","nodeType":"YulIdentifier","src":"14733:7:19"},{"name":"headStart","nativeSrc":"14742:9:19","nodeType":"YulIdentifier","src":"14742:9:19"}],"functionName":{"name":"sub","nativeSrc":"14729:3:19","nodeType":"YulIdentifier","src":"14729:3:19"},"nativeSrc":"14729:23:19","nodeType":"YulFunctionCall","src":"14729:23:19"},{"kind":"number","nativeSrc":"14754:2:19","nodeType":"YulLiteral","src":"14754:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"14725:3:19","nodeType":"YulIdentifier","src":"14725:3:19"},"nativeSrc":"14725:32:19","nodeType":"YulFunctionCall","src":"14725:32:19"},"nativeSrc":"14722:119:19","nodeType":"YulIf","src":"14722:119:19"},{"nativeSrc":"14851:125:19","nodeType":"YulBlock","src":"14851:125:19","statements":[{"nativeSrc":"14866:15:19","nodeType":"YulVariableDeclaration","src":"14866:15:19","value":{"kind":"number","nativeSrc":"14880:1:19","nodeType":"YulLiteral","src":"14880:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14870:6:19","nodeType":"YulTypedName","src":"14870:6:19","type":""}]},{"nativeSrc":"14895:71:19","nodeType":"YulAssignment","src":"14895:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14938:9:19","nodeType":"YulIdentifier","src":"14938:9:19"},{"name":"offset","nativeSrc":"14949:6:19","nodeType":"YulIdentifier","src":"14949:6:19"}],"functionName":{"name":"add","nativeSrc":"14934:3:19","nodeType":"YulIdentifier","src":"14934:3:19"},"nativeSrc":"14934:22:19","nodeType":"YulFunctionCall","src":"14934:22:19"},{"name":"dataEnd","nativeSrc":"14958:7:19","nodeType":"YulIdentifier","src":"14958:7:19"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"14905:28:19","nodeType":"YulIdentifier","src":"14905:28:19"},"nativeSrc":"14905:61:19","nodeType":"YulFunctionCall","src":"14905:61:19"},"variableNames":[{"name":"value0","nativeSrc":"14895:6:19","nodeType":"YulIdentifier","src":"14895:6:19"}]}]},{"nativeSrc":"14986:118:19","nodeType":"YulBlock","src":"14986:118:19","statements":[{"nativeSrc":"15001:16:19","nodeType":"YulVariableDeclaration","src":"15001:16:19","value":{"kind":"number","nativeSrc":"15015:2:19","nodeType":"YulLiteral","src":"15015:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15005:6:19","nodeType":"YulTypedName","src":"15005:6:19","type":""}]},{"nativeSrc":"15031:63:19","nodeType":"YulAssignment","src":"15031:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15066:9:19","nodeType":"YulIdentifier","src":"15066:9:19"},{"name":"offset","nativeSrc":"15077:6:19","nodeType":"YulIdentifier","src":"15077:6:19"}],"functionName":{"name":"add","nativeSrc":"15062:3:19","nodeType":"YulIdentifier","src":"15062:3:19"},"nativeSrc":"15062:22:19","nodeType":"YulFunctionCall","src":"15062:22:19"},{"name":"dataEnd","nativeSrc":"15086:7:19","nodeType":"YulIdentifier","src":"15086:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15041:20:19","nodeType":"YulIdentifier","src":"15041:20:19"},"nativeSrc":"15041:53:19","nodeType":"YulFunctionCall","src":"15041:53:19"},"variableNames":[{"name":"value1","nativeSrc":"15031:6:19","nodeType":"YulIdentifier","src":"15031:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"14621:490:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14674:9:19","nodeType":"YulTypedName","src":"14674:9:19","type":""},{"name":"dataEnd","nativeSrc":"14685:7:19","nodeType":"YulTypedName","src":"14685:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14697:6:19","nodeType":"YulTypedName","src":"14697:6:19","type":""},{"name":"value1","nativeSrc":"14705:6:19","nodeType":"YulTypedName","src":"14705:6:19","type":""}],"src":"14621:490:19"},{"body":{"nativeSrc":"15270:956:19","nodeType":"YulBlock","src":"15270:956:19","statements":[{"body":{"nativeSrc":"15317:83:19","nodeType":"YulBlock","src":"15317:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15319:77:19","nodeType":"YulIdentifier","src":"15319:77:19"},"nativeSrc":"15319:79:19","nodeType":"YulFunctionCall","src":"15319:79:19"},"nativeSrc":"15319:79:19","nodeType":"YulExpressionStatement","src":"15319:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15291:7:19","nodeType":"YulIdentifier","src":"15291:7:19"},{"name":"headStart","nativeSrc":"15300:9:19","nodeType":"YulIdentifier","src":"15300:9:19"}],"functionName":{"name":"sub","nativeSrc":"15287:3:19","nodeType":"YulIdentifier","src":"15287:3:19"},"nativeSrc":"15287:23:19","nodeType":"YulFunctionCall","src":"15287:23:19"},{"kind":"number","nativeSrc":"15312:3:19","nodeType":"YulLiteral","src":"15312:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"15283:3:19","nodeType":"YulIdentifier","src":"15283:3:19"},"nativeSrc":"15283:33:19","nodeType":"YulFunctionCall","src":"15283:33:19"},"nativeSrc":"15280:120:19","nodeType":"YulIf","src":"15280:120:19"},{"nativeSrc":"15410:117:19","nodeType":"YulBlock","src":"15410:117:19","statements":[{"nativeSrc":"15425:15:19","nodeType":"YulVariableDeclaration","src":"15425:15:19","value":{"kind":"number","nativeSrc":"15439:1:19","nodeType":"YulLiteral","src":"15439:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15429:6:19","nodeType":"YulTypedName","src":"15429:6:19","type":""}]},{"nativeSrc":"15454:63:19","nodeType":"YulAssignment","src":"15454:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15489:9:19","nodeType":"YulIdentifier","src":"15489:9:19"},{"name":"offset","nativeSrc":"15500:6:19","nodeType":"YulIdentifier","src":"15500:6:19"}],"functionName":{"name":"add","nativeSrc":"15485:3:19","nodeType":"YulIdentifier","src":"15485:3:19"},"nativeSrc":"15485:22:19","nodeType":"YulFunctionCall","src":"15485:22:19"},{"name":"dataEnd","nativeSrc":"15509:7:19","nodeType":"YulIdentifier","src":"15509:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15464:20:19","nodeType":"YulIdentifier","src":"15464:20:19"},"nativeSrc":"15464:53:19","nodeType":"YulFunctionCall","src":"15464:53:19"},"variableNames":[{"name":"value0","nativeSrc":"15454:6:19","nodeType":"YulIdentifier","src":"15454:6:19"}]}]},{"nativeSrc":"15537:118:19","nodeType":"YulBlock","src":"15537:118:19","statements":[{"nativeSrc":"15552:16:19","nodeType":"YulVariableDeclaration","src":"15552:16:19","value":{"kind":"number","nativeSrc":"15566:2:19","nodeType":"YulLiteral","src":"15566:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15556:6:19","nodeType":"YulTypedName","src":"15556:6:19","type":""}]},{"nativeSrc":"15582:63:19","nodeType":"YulAssignment","src":"15582:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15617:9:19","nodeType":"YulIdentifier","src":"15617:9:19"},{"name":"offset","nativeSrc":"15628:6:19","nodeType":"YulIdentifier","src":"15628:6:19"}],"functionName":{"name":"add","nativeSrc":"15613:3:19","nodeType":"YulIdentifier","src":"15613:3:19"},"nativeSrc":"15613:22:19","nodeType":"YulFunctionCall","src":"15613:22:19"},{"name":"dataEnd","nativeSrc":"15637:7:19","nodeType":"YulIdentifier","src":"15637:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15592:20:19","nodeType":"YulIdentifier","src":"15592:20:19"},"nativeSrc":"15592:53:19","nodeType":"YulFunctionCall","src":"15592:53:19"},"variableNames":[{"name":"value1","nativeSrc":"15582:6:19","nodeType":"YulIdentifier","src":"15582:6:19"}]}]},{"nativeSrc":"15665:118:19","nodeType":"YulBlock","src":"15665:118:19","statements":[{"nativeSrc":"15680:16:19","nodeType":"YulVariableDeclaration","src":"15680:16:19","value":{"kind":"number","nativeSrc":"15694:2:19","nodeType":"YulLiteral","src":"15694:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"15684:6:19","nodeType":"YulTypedName","src":"15684:6:19","type":""}]},{"nativeSrc":"15710:63:19","nodeType":"YulAssignment","src":"15710:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15745:9:19","nodeType":"YulIdentifier","src":"15745:9:19"},{"name":"offset","nativeSrc":"15756:6:19","nodeType":"YulIdentifier","src":"15756:6:19"}],"functionName":{"name":"add","nativeSrc":"15741:3:19","nodeType":"YulIdentifier","src":"15741:3:19"},"nativeSrc":"15741:22:19","nodeType":"YulFunctionCall","src":"15741:22:19"},{"name":"dataEnd","nativeSrc":"15765:7:19","nodeType":"YulIdentifier","src":"15765:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15720:20:19","nodeType":"YulIdentifier","src":"15720:20:19"},"nativeSrc":"15720:53:19","nodeType":"YulFunctionCall","src":"15720:53:19"},"variableNames":[{"name":"value2","nativeSrc":"15710:6:19","nodeType":"YulIdentifier","src":"15710:6:19"}]}]},{"nativeSrc":"15793:118:19","nodeType":"YulBlock","src":"15793:118:19","statements":[{"nativeSrc":"15808:16:19","nodeType":"YulVariableDeclaration","src":"15808:16:19","value":{"kind":"number","nativeSrc":"15822:2:19","nodeType":"YulLiteral","src":"15822:2:19","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"15812:6:19","nodeType":"YulTypedName","src":"15812:6:19","type":""}]},{"nativeSrc":"15838:63:19","nodeType":"YulAssignment","src":"15838:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15873:9:19","nodeType":"YulIdentifier","src":"15873:9:19"},{"name":"offset","nativeSrc":"15884:6:19","nodeType":"YulIdentifier","src":"15884:6:19"}],"functionName":{"name":"add","nativeSrc":"15869:3:19","nodeType":"YulIdentifier","src":"15869:3:19"},"nativeSrc":"15869:22:19","nodeType":"YulFunctionCall","src":"15869:22:19"},{"name":"dataEnd","nativeSrc":"15893:7:19","nodeType":"YulIdentifier","src":"15893:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15848:20:19","nodeType":"YulIdentifier","src":"15848:20:19"},"nativeSrc":"15848:53:19","nodeType":"YulFunctionCall","src":"15848:53:19"},"variableNames":[{"name":"value3","nativeSrc":"15838:6:19","nodeType":"YulIdentifier","src":"15838:6:19"}]}]},{"nativeSrc":"15921:298:19","nodeType":"YulBlock","src":"15921:298:19","statements":[{"nativeSrc":"15936:47:19","nodeType":"YulVariableDeclaration","src":"15936:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15967:9:19","nodeType":"YulIdentifier","src":"15967:9:19"},{"kind":"number","nativeSrc":"15978:3:19","nodeType":"YulLiteral","src":"15978:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15963:3:19","nodeType":"YulIdentifier","src":"15963:3:19"},"nativeSrc":"15963:19:19","nodeType":"YulFunctionCall","src":"15963:19:19"}],"functionName":{"name":"calldataload","nativeSrc":"15950:12:19","nodeType":"YulIdentifier","src":"15950:12:19"},"nativeSrc":"15950:33:19","nodeType":"YulFunctionCall","src":"15950:33:19"},"variables":[{"name":"offset","nativeSrc":"15940:6:19","nodeType":"YulTypedName","src":"15940:6:19","type":""}]},{"body":{"nativeSrc":"16030:83:19","nodeType":"YulBlock","src":"16030:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"16032:77:19","nodeType":"YulIdentifier","src":"16032:77:19"},"nativeSrc":"16032:79:19","nodeType":"YulFunctionCall","src":"16032:79:19"},"nativeSrc":"16032:79:19","nodeType":"YulExpressionStatement","src":"16032:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"16002:6:19","nodeType":"YulIdentifier","src":"16002:6:19"},{"kind":"number","nativeSrc":"16010:18:19","nodeType":"YulLiteral","src":"16010:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15999:2:19","nodeType":"YulIdentifier","src":"15999:2:19"},"nativeSrc":"15999:30:19","nodeType":"YulFunctionCall","src":"15999:30:19"},"nativeSrc":"15996:117:19","nodeType":"YulIf","src":"15996:117:19"},{"nativeSrc":"16127:82:19","nodeType":"YulAssignment","src":"16127:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16181:9:19","nodeType":"YulIdentifier","src":"16181:9:19"},{"name":"offset","nativeSrc":"16192:6:19","nodeType":"YulIdentifier","src":"16192:6:19"}],"functionName":{"name":"add","nativeSrc":"16177:3:19","nodeType":"YulIdentifier","src":"16177:3:19"},"nativeSrc":"16177:22:19","nodeType":"YulFunctionCall","src":"16177:22:19"},{"name":"dataEnd","nativeSrc":"16201:7:19","nodeType":"YulIdentifier","src":"16201:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"16145:31:19","nodeType":"YulIdentifier","src":"16145:31:19"},"nativeSrc":"16145:64:19","nodeType":"YulFunctionCall","src":"16145:64:19"},"variableNames":[{"name":"value4","nativeSrc":"16127:6:19","nodeType":"YulIdentifier","src":"16127:6:19"},{"name":"value5","nativeSrc":"16135:6:19","nodeType":"YulIdentifier","src":"16135:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nativeSrc":"15117:1109:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15200:9:19","nodeType":"YulTypedName","src":"15200:9:19","type":""},{"name":"dataEnd","nativeSrc":"15211:7:19","nodeType":"YulTypedName","src":"15211:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15223:6:19","nodeType":"YulTypedName","src":"15223:6:19","type":""},{"name":"value1","nativeSrc":"15231:6:19","nodeType":"YulTypedName","src":"15231:6:19","type":""},{"name":"value2","nativeSrc":"15239:6:19","nodeType":"YulTypedName","src":"15239:6:19","type":""},{"name":"value3","nativeSrc":"15247:6:19","nodeType":"YulTypedName","src":"15247:6:19","type":""},{"name":"value4","nativeSrc":"15255:6:19","nodeType":"YulTypedName","src":"15255:6:19","type":""},{"name":"value5","nativeSrc":"15263:6:19","nodeType":"YulTypedName","src":"15263:6:19","type":""}],"src":"15117:1109:19"},{"body":{"nativeSrc":"16328:73:19","nodeType":"YulBlock","src":"16328:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16345:3:19","nodeType":"YulIdentifier","src":"16345:3:19"},{"name":"length","nativeSrc":"16350:6:19","nodeType":"YulIdentifier","src":"16350:6:19"}],"functionName":{"name":"mstore","nativeSrc":"16338:6:19","nodeType":"YulIdentifier","src":"16338:6:19"},"nativeSrc":"16338:19:19","nodeType":"YulFunctionCall","src":"16338:19:19"},"nativeSrc":"16338:19:19","nodeType":"YulExpressionStatement","src":"16338:19:19"},{"nativeSrc":"16366:29:19","nodeType":"YulAssignment","src":"16366:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"16385:3:19","nodeType":"YulIdentifier","src":"16385:3:19"},{"kind":"number","nativeSrc":"16390:4:19","nodeType":"YulLiteral","src":"16390:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16381:3:19","nodeType":"YulIdentifier","src":"16381:3:19"},"nativeSrc":"16381:14:19","nodeType":"YulFunctionCall","src":"16381:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"16366:11:19","nodeType":"YulIdentifier","src":"16366:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16232:169:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16300:3:19","nodeType":"YulTypedName","src":"16300:3:19","type":""},{"name":"length","nativeSrc":"16305:6:19","nodeType":"YulTypedName","src":"16305:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16316:11:19","nodeType":"YulTypedName","src":"16316:11:19","type":""}],"src":"16232:169:19"},{"body":{"nativeSrc":"16513:59:19","nodeType":"YulBlock","src":"16513:59:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16535:6:19","nodeType":"YulIdentifier","src":"16535:6:19"},{"kind":"number","nativeSrc":"16543:1:19","nodeType":"YulLiteral","src":"16543:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16531:3:19","nodeType":"YulIdentifier","src":"16531:3:19"},"nativeSrc":"16531:14:19","nodeType":"YulFunctionCall","src":"16531:14:19"},{"hexValue":"4e6f7420746f6b656e206f776e6572","kind":"string","nativeSrc":"16547:17:19","nodeType":"YulLiteral","src":"16547:17:19","type":"","value":"Not token owner"}],"functionName":{"name":"mstore","nativeSrc":"16524:6:19","nodeType":"YulIdentifier","src":"16524:6:19"},"nativeSrc":"16524:41:19","nodeType":"YulFunctionCall","src":"16524:41:19"},"nativeSrc":"16524:41:19","nodeType":"YulExpressionStatement","src":"16524:41:19"}]},"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"16407:165:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16505:6:19","nodeType":"YulTypedName","src":"16505:6:19","type":""}],"src":"16407:165:19"},{"body":{"nativeSrc":"16724:220:19","nodeType":"YulBlock","src":"16724:220:19","statements":[{"nativeSrc":"16734:74:19","nodeType":"YulAssignment","src":"16734:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"16800:3:19","nodeType":"YulIdentifier","src":"16800:3:19"},{"kind":"number","nativeSrc":"16805:2:19","nodeType":"YulLiteral","src":"16805:2:19","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16741:58:19","nodeType":"YulIdentifier","src":"16741:58:19"},"nativeSrc":"16741:67:19","nodeType":"YulFunctionCall","src":"16741:67:19"},"variableNames":[{"name":"pos","nativeSrc":"16734:3:19","nodeType":"YulIdentifier","src":"16734:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16906:3:19","nodeType":"YulIdentifier","src":"16906:3:19"}],"functionName":{"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"16817:88:19","nodeType":"YulIdentifier","src":"16817:88:19"},"nativeSrc":"16817:93:19","nodeType":"YulFunctionCall","src":"16817:93:19"},"nativeSrc":"16817:93:19","nodeType":"YulExpressionStatement","src":"16817:93:19"},{"nativeSrc":"16919:19:19","nodeType":"YulAssignment","src":"16919:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"16930:3:19","nodeType":"YulIdentifier","src":"16930:3:19"},{"kind":"number","nativeSrc":"16935:2:19","nodeType":"YulLiteral","src":"16935:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16926:3:19","nodeType":"YulIdentifier","src":"16926:3:19"},"nativeSrc":"16926:12:19","nodeType":"YulFunctionCall","src":"16926:12:19"},"variableNames":[{"name":"end","nativeSrc":"16919:3:19","nodeType":"YulIdentifier","src":"16919:3:19"}]}]},"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"16578:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16712:3:19","nodeType":"YulTypedName","src":"16712:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16720:3:19","nodeType":"YulTypedName","src":"16720:3:19","type":""}],"src":"16578:366:19"},{"body":{"nativeSrc":"17121:248:19","nodeType":"YulBlock","src":"17121:248:19","statements":[{"nativeSrc":"17131:26:19","nodeType":"YulAssignment","src":"17131:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"17143:9:19","nodeType":"YulIdentifier","src":"17143:9:19"},{"kind":"number","nativeSrc":"17154:2:19","nodeType":"YulLiteral","src":"17154:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17139:3:19","nodeType":"YulIdentifier","src":"17139:3:19"},"nativeSrc":"17139:18:19","nodeType":"YulFunctionCall","src":"17139:18:19"},"variableNames":[{"name":"tail","nativeSrc":"17131:4:19","nodeType":"YulIdentifier","src":"17131:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17178:9:19","nodeType":"YulIdentifier","src":"17178:9:19"},{"kind":"number","nativeSrc":"17189:1:19","nodeType":"YulLiteral","src":"17189:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17174:3:19","nodeType":"YulIdentifier","src":"17174:3:19"},"nativeSrc":"17174:17:19","nodeType":"YulFunctionCall","src":"17174:17:19"},{"arguments":[{"name":"tail","nativeSrc":"17197:4:19","nodeType":"YulIdentifier","src":"17197:4:19"},{"name":"headStart","nativeSrc":"17203:9:19","nodeType":"YulIdentifier","src":"17203:9:19"}],"functionName":{"name":"sub","nativeSrc":"17193:3:19","nodeType":"YulIdentifier","src":"17193:3:19"},"nativeSrc":"17193:20:19","nodeType":"YulFunctionCall","src":"17193:20:19"}],"functionName":{"name":"mstore","nativeSrc":"17167:6:19","nodeType":"YulIdentifier","src":"17167:6:19"},"nativeSrc":"17167:47:19","nodeType":"YulFunctionCall","src":"17167:47:19"},"nativeSrc":"17167:47:19","nodeType":"YulExpressionStatement","src":"17167:47:19"},{"nativeSrc":"17223:139:19","nodeType":"YulAssignment","src":"17223:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"17357:4:19","nodeType":"YulIdentifier","src":"17357:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"17231:124:19","nodeType":"YulIdentifier","src":"17231:124:19"},"nativeSrc":"17231:131:19","nodeType":"YulFunctionCall","src":"17231:131:19"},"variableNames":[{"name":"tail","nativeSrc":"17223:4:19","nodeType":"YulIdentifier","src":"17223:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16950:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17101:9:19","nodeType":"YulTypedName","src":"17101:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17116:4:19","nodeType":"YulTypedName","src":"17116:4:19","type":""}],"src":"16950:419:19"},{"body":{"nativeSrc":"17481:66:19","nodeType":"YulBlock","src":"17481:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17503:6:19","nodeType":"YulIdentifier","src":"17503:6:19"},{"kind":"number","nativeSrc":"17511:1:19","nodeType":"YulLiteral","src":"17511:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17499:3:19","nodeType":"YulIdentifier","src":"17499:3:19"},"nativeSrc":"17499:14:19","nodeType":"YulFunctionCall","src":"17499:14:19"},{"hexValue":"496e76616c6964207461726765742061646472657373","kind":"string","nativeSrc":"17515:24:19","nodeType":"YulLiteral","src":"17515:24:19","type":"","value":"Invalid target address"}],"functionName":{"name":"mstore","nativeSrc":"17492:6:19","nodeType":"YulIdentifier","src":"17492:6:19"},"nativeSrc":"17492:48:19","nodeType":"YulFunctionCall","src":"17492:48:19"},"nativeSrc":"17492:48:19","nodeType":"YulExpressionStatement","src":"17492:48:19"}]},"name":"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","nativeSrc":"17375:172:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17473:6:19","nodeType":"YulTypedName","src":"17473:6:19","type":""}],"src":"17375:172:19"},{"body":{"nativeSrc":"17699:220:19","nodeType":"YulBlock","src":"17699:220:19","statements":[{"nativeSrc":"17709:74:19","nodeType":"YulAssignment","src":"17709:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"17775:3:19","nodeType":"YulIdentifier","src":"17775:3:19"},{"kind":"number","nativeSrc":"17780:2:19","nodeType":"YulLiteral","src":"17780:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17716:58:19","nodeType":"YulIdentifier","src":"17716:58:19"},"nativeSrc":"17716:67:19","nodeType":"YulFunctionCall","src":"17716:67:19"},"variableNames":[{"name":"pos","nativeSrc":"17709:3:19","nodeType":"YulIdentifier","src":"17709:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17881:3:19","nodeType":"YulIdentifier","src":"17881:3:19"}],"functionName":{"name":"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","nativeSrc":"17792:88:19","nodeType":"YulIdentifier","src":"17792:88:19"},"nativeSrc":"17792:93:19","nodeType":"YulFunctionCall","src":"17792:93:19"},"nativeSrc":"17792:93:19","nodeType":"YulExpressionStatement","src":"17792:93:19"},{"nativeSrc":"17894:19:19","nodeType":"YulAssignment","src":"17894:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"17905:3:19","nodeType":"YulIdentifier","src":"17905:3:19"},{"kind":"number","nativeSrc":"17910:2:19","nodeType":"YulLiteral","src":"17910:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17901:3:19","nodeType":"YulIdentifier","src":"17901:3:19"},"nativeSrc":"17901:12:19","nodeType":"YulFunctionCall","src":"17901:12:19"},"variableNames":[{"name":"end","nativeSrc":"17894:3:19","nodeType":"YulIdentifier","src":"17894:3:19"}]}]},"name":"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack","nativeSrc":"17553:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17687:3:19","nodeType":"YulTypedName","src":"17687:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17695:3:19","nodeType":"YulTypedName","src":"17695:3:19","type":""}],"src":"17553:366:19"},{"body":{"nativeSrc":"18096:248:19","nodeType":"YulBlock","src":"18096:248:19","statements":[{"nativeSrc":"18106:26:19","nodeType":"YulAssignment","src":"18106:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"18118:9:19","nodeType":"YulIdentifier","src":"18118:9:19"},{"kind":"number","nativeSrc":"18129:2:19","nodeType":"YulLiteral","src":"18129:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18114:3:19","nodeType":"YulIdentifier","src":"18114:3:19"},"nativeSrc":"18114:18:19","nodeType":"YulFunctionCall","src":"18114:18:19"},"variableNames":[{"name":"tail","nativeSrc":"18106:4:19","nodeType":"YulIdentifier","src":"18106:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18153:9:19","nodeType":"YulIdentifier","src":"18153:9:19"},{"kind":"number","nativeSrc":"18164:1:19","nodeType":"YulLiteral","src":"18164:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18149:3:19","nodeType":"YulIdentifier","src":"18149:3:19"},"nativeSrc":"18149:17:19","nodeType":"YulFunctionCall","src":"18149:17:19"},{"arguments":[{"name":"tail","nativeSrc":"18172:4:19","nodeType":"YulIdentifier","src":"18172:4:19"},{"name":"headStart","nativeSrc":"18178:9:19","nodeType":"YulIdentifier","src":"18178:9:19"}],"functionName":{"name":"sub","nativeSrc":"18168:3:19","nodeType":"YulIdentifier","src":"18168:3:19"},"nativeSrc":"18168:20:19","nodeType":"YulFunctionCall","src":"18168:20:19"}],"functionName":{"name":"mstore","nativeSrc":"18142:6:19","nodeType":"YulIdentifier","src":"18142:6:19"},"nativeSrc":"18142:47:19","nodeType":"YulFunctionCall","src":"18142:47:19"},"nativeSrc":"18142:47:19","nodeType":"YulExpressionStatement","src":"18142:47:19"},{"nativeSrc":"18198:139:19","nodeType":"YulAssignment","src":"18198:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"18332:4:19","nodeType":"YulIdentifier","src":"18332:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack","nativeSrc":"18206:124:19","nodeType":"YulIdentifier","src":"18206:124:19"},"nativeSrc":"18206:131:19","nodeType":"YulFunctionCall","src":"18206:131:19"},"variableNames":[{"name":"tail","nativeSrc":"18198:4:19","nodeType":"YulIdentifier","src":"18198:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17925:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18076:9:19","nodeType":"YulTypedName","src":"18076:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18091:4:19","nodeType":"YulTypedName","src":"18091:4:19","type":""}],"src":"17925:419:19"},{"body":{"nativeSrc":"18413:80:19","nodeType":"YulBlock","src":"18413:80:19","statements":[{"nativeSrc":"18423:22:19","nodeType":"YulAssignment","src":"18423:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"18438:6:19","nodeType":"YulIdentifier","src":"18438:6:19"}],"functionName":{"name":"mload","nativeSrc":"18432:5:19","nodeType":"YulIdentifier","src":"18432:5:19"},"nativeSrc":"18432:13:19","nodeType":"YulFunctionCall","src":"18432:13:19"},"variableNames":[{"name":"value","nativeSrc":"18423:5:19","nodeType":"YulIdentifier","src":"18423:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"18481:5:19","nodeType":"YulIdentifier","src":"18481:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"18454:26:19","nodeType":"YulIdentifier","src":"18454:26:19"},"nativeSrc":"18454:33:19","nodeType":"YulFunctionCall","src":"18454:33:19"},"nativeSrc":"18454:33:19","nodeType":"YulExpressionStatement","src":"18454:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"18350:143:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18391:6:19","nodeType":"YulTypedName","src":"18391:6:19","type":""},{"name":"end","nativeSrc":"18399:3:19","nodeType":"YulTypedName","src":"18399:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"18407:5:19","nodeType":"YulTypedName","src":"18407:5:19","type":""}],"src":"18350:143:19"},{"body":{"nativeSrc":"18576:274:19","nodeType":"YulBlock","src":"18576:274:19","statements":[{"body":{"nativeSrc":"18622:83:19","nodeType":"YulBlock","src":"18622:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18624:77:19","nodeType":"YulIdentifier","src":"18624:77:19"},"nativeSrc":"18624:79:19","nodeType":"YulFunctionCall","src":"18624:79:19"},"nativeSrc":"18624:79:19","nodeType":"YulExpressionStatement","src":"18624:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18597:7:19","nodeType":"YulIdentifier","src":"18597:7:19"},{"name":"headStart","nativeSrc":"18606:9:19","nodeType":"YulIdentifier","src":"18606:9:19"}],"functionName":{"name":"sub","nativeSrc":"18593:3:19","nodeType":"YulIdentifier","src":"18593:3:19"},"nativeSrc":"18593:23:19","nodeType":"YulFunctionCall","src":"18593:23:19"},{"kind":"number","nativeSrc":"18618:2:19","nodeType":"YulLiteral","src":"18618:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18589:3:19","nodeType":"YulIdentifier","src":"18589:3:19"},"nativeSrc":"18589:32:19","nodeType":"YulFunctionCall","src":"18589:32:19"},"nativeSrc":"18586:119:19","nodeType":"YulIf","src":"18586:119:19"},{"nativeSrc":"18715:128:19","nodeType":"YulBlock","src":"18715:128:19","statements":[{"nativeSrc":"18730:15:19","nodeType":"YulVariableDeclaration","src":"18730:15:19","value":{"kind":"number","nativeSrc":"18744:1:19","nodeType":"YulLiteral","src":"18744:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18734:6:19","nodeType":"YulTypedName","src":"18734:6:19","type":""}]},{"nativeSrc":"18759:74:19","nodeType":"YulAssignment","src":"18759:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18805:9:19","nodeType":"YulIdentifier","src":"18805:9:19"},{"name":"offset","nativeSrc":"18816:6:19","nodeType":"YulIdentifier","src":"18816:6:19"}],"functionName":{"name":"add","nativeSrc":"18801:3:19","nodeType":"YulIdentifier","src":"18801:3:19"},"nativeSrc":"18801:22:19","nodeType":"YulFunctionCall","src":"18801:22:19"},{"name":"dataEnd","nativeSrc":"18825:7:19","nodeType":"YulIdentifier","src":"18825:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"18769:31:19","nodeType":"YulIdentifier","src":"18769:31:19"},"nativeSrc":"18769:64:19","nodeType":"YulFunctionCall","src":"18769:64:19"},"variableNames":[{"name":"value0","nativeSrc":"18759:6:19","nodeType":"YulIdentifier","src":"18759:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"18499:351:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18546:9:19","nodeType":"YulTypedName","src":"18546:9:19","type":""},{"name":"dataEnd","nativeSrc":"18557:7:19","nodeType":"YulTypedName","src":"18557:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18569:6:19","nodeType":"YulTypedName","src":"18569:6:19","type":""}],"src":"18499:351:19"},{"body":{"nativeSrc":"18962:62:19","nodeType":"YulBlock","src":"18962:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18984:6:19","nodeType":"YulIdentifier","src":"18984:6:19"},{"kind":"number","nativeSrc":"18992:1:19","nodeType":"YulLiteral","src":"18992:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18980:3:19","nodeType":"YulIdentifier","src":"18980:3:19"},"nativeSrc":"18980:14:19","nodeType":"YulFunctionCall","src":"18980:14:19"},{"hexValue":"496e73756666696369656e742066756e6473","kind":"string","nativeSrc":"18996:20:19","nodeType":"YulLiteral","src":"18996:20:19","type":"","value":"Insufficient funds"}],"functionName":{"name":"mstore","nativeSrc":"18973:6:19","nodeType":"YulIdentifier","src":"18973:6:19"},"nativeSrc":"18973:44:19","nodeType":"YulFunctionCall","src":"18973:44:19"},"nativeSrc":"18973:44:19","nodeType":"YulExpressionStatement","src":"18973:44:19"}]},"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"18856:168:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18954:6:19","nodeType":"YulTypedName","src":"18954:6:19","type":""}],"src":"18856:168:19"},{"body":{"nativeSrc":"19176:220:19","nodeType":"YulBlock","src":"19176:220:19","statements":[{"nativeSrc":"19186:74:19","nodeType":"YulAssignment","src":"19186:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"19252:3:19","nodeType":"YulIdentifier","src":"19252:3:19"},{"kind":"number","nativeSrc":"19257:2:19","nodeType":"YulLiteral","src":"19257:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19193:58:19","nodeType":"YulIdentifier","src":"19193:58:19"},"nativeSrc":"19193:67:19","nodeType":"YulFunctionCall","src":"19193:67:19"},"variableNames":[{"name":"pos","nativeSrc":"19186:3:19","nodeType":"YulIdentifier","src":"19186:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19358:3:19","nodeType":"YulIdentifier","src":"19358:3:19"}],"functionName":{"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"19269:88:19","nodeType":"YulIdentifier","src":"19269:88:19"},"nativeSrc":"19269:93:19","nodeType":"YulFunctionCall","src":"19269:93:19"},"nativeSrc":"19269:93:19","nodeType":"YulExpressionStatement","src":"19269:93:19"},{"nativeSrc":"19371:19:19","nodeType":"YulAssignment","src":"19371:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"19382:3:19","nodeType":"YulIdentifier","src":"19382:3:19"},{"kind":"number","nativeSrc":"19387:2:19","nodeType":"YulLiteral","src":"19387:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19378:3:19","nodeType":"YulIdentifier","src":"19378:3:19"},"nativeSrc":"19378:12:19","nodeType":"YulFunctionCall","src":"19378:12:19"},"variableNames":[{"name":"end","nativeSrc":"19371:3:19","nodeType":"YulIdentifier","src":"19371:3:19"}]}]},"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"19030:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19164:3:19","nodeType":"YulTypedName","src":"19164:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19172:3:19","nodeType":"YulTypedName","src":"19172:3:19","type":""}],"src":"19030:366:19"},{"body":{"nativeSrc":"19573:248:19","nodeType":"YulBlock","src":"19573:248:19","statements":[{"nativeSrc":"19583:26:19","nodeType":"YulAssignment","src":"19583:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"19595:9:19","nodeType":"YulIdentifier","src":"19595:9:19"},{"kind":"number","nativeSrc":"19606:2:19","nodeType":"YulLiteral","src":"19606:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19591:3:19","nodeType":"YulIdentifier","src":"19591:3:19"},"nativeSrc":"19591:18:19","nodeType":"YulFunctionCall","src":"19591:18:19"},"variableNames":[{"name":"tail","nativeSrc":"19583:4:19","nodeType":"YulIdentifier","src":"19583:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19630:9:19","nodeType":"YulIdentifier","src":"19630:9:19"},{"kind":"number","nativeSrc":"19641:1:19","nodeType":"YulLiteral","src":"19641:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19626:3:19","nodeType":"YulIdentifier","src":"19626:3:19"},"nativeSrc":"19626:17:19","nodeType":"YulFunctionCall","src":"19626:17:19"},{"arguments":[{"name":"tail","nativeSrc":"19649:4:19","nodeType":"YulIdentifier","src":"19649:4:19"},{"name":"headStart","nativeSrc":"19655:9:19","nodeType":"YulIdentifier","src":"19655:9:19"}],"functionName":{"name":"sub","nativeSrc":"19645:3:19","nodeType":"YulIdentifier","src":"19645:3:19"},"nativeSrc":"19645:20:19","nodeType":"YulFunctionCall","src":"19645:20:19"}],"functionName":{"name":"mstore","nativeSrc":"19619:6:19","nodeType":"YulIdentifier","src":"19619:6:19"},"nativeSrc":"19619:47:19","nodeType":"YulFunctionCall","src":"19619:47:19"},"nativeSrc":"19619:47:19","nodeType":"YulExpressionStatement","src":"19619:47:19"},{"nativeSrc":"19675:139:19","nodeType":"YulAssignment","src":"19675:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"19809:4:19","nodeType":"YulIdentifier","src":"19809:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"19683:124:19","nodeType":"YulIdentifier","src":"19683:124:19"},"nativeSrc":"19683:131:19","nodeType":"YulFunctionCall","src":"19683:131:19"},"variableNames":[{"name":"tail","nativeSrc":"19675:4:19","nodeType":"YulIdentifier","src":"19675:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19402:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19553:9:19","nodeType":"YulTypedName","src":"19553:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19568:4:19","nodeType":"YulTypedName","src":"19568:4:19","type":""}],"src":"19402:419:19"},{"body":{"nativeSrc":"19855:152:19","nodeType":"YulBlock","src":"19855:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19872:1:19","nodeType":"YulLiteral","src":"19872:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"19875:77:19","nodeType":"YulLiteral","src":"19875:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19865:6:19","nodeType":"YulIdentifier","src":"19865:6:19"},"nativeSrc":"19865:88:19","nodeType":"YulFunctionCall","src":"19865:88:19"},"nativeSrc":"19865:88:19","nodeType":"YulExpressionStatement","src":"19865:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19969:1:19","nodeType":"YulLiteral","src":"19969:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"19972:4:19","nodeType":"YulLiteral","src":"19972:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"19962:6:19","nodeType":"YulIdentifier","src":"19962:6:19"},"nativeSrc":"19962:15:19","nodeType":"YulFunctionCall","src":"19962:15:19"},"nativeSrc":"19962:15:19","nodeType":"YulExpressionStatement","src":"19962:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19993:1:19","nodeType":"YulLiteral","src":"19993:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"19996:4:19","nodeType":"YulLiteral","src":"19996:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19986:6:19","nodeType":"YulIdentifier","src":"19986:6:19"},"nativeSrc":"19986:15:19","nodeType":"YulFunctionCall","src":"19986:15:19"},"nativeSrc":"19986:15:19","nodeType":"YulExpressionStatement","src":"19986:15:19"}]},"name":"panic_error_0x11","nativeSrc":"19827:180:19","nodeType":"YulFunctionDefinition","src":"19827:180:19"},{"body":{"nativeSrc":"20056:190:19","nodeType":"YulBlock","src":"20056:190:19","statements":[{"nativeSrc":"20066:33:19","nodeType":"YulAssignment","src":"20066:33:19","value":{"arguments":[{"name":"value","nativeSrc":"20093:5:19","nodeType":"YulIdentifier","src":"20093:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20075:17:19","nodeType":"YulIdentifier","src":"20075:17:19"},"nativeSrc":"20075:24:19","nodeType":"YulFunctionCall","src":"20075:24:19"},"variableNames":[{"name":"value","nativeSrc":"20066:5:19","nodeType":"YulIdentifier","src":"20066:5:19"}]},{"body":{"nativeSrc":"20189:22:19","nodeType":"YulBlock","src":"20189:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20191:16:19","nodeType":"YulIdentifier","src":"20191:16:19"},"nativeSrc":"20191:18:19","nodeType":"YulFunctionCall","src":"20191:18:19"},"nativeSrc":"20191:18:19","nodeType":"YulExpressionStatement","src":"20191:18:19"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"20114:5:19","nodeType":"YulIdentifier","src":"20114:5:19"},{"kind":"number","nativeSrc":"20121:66:19","nodeType":"YulLiteral","src":"20121:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"20111:2:19","nodeType":"YulIdentifier","src":"20111:2:19"},"nativeSrc":"20111:77:19","nodeType":"YulFunctionCall","src":"20111:77:19"},"nativeSrc":"20108:103:19","nodeType":"YulIf","src":"20108:103:19"},{"nativeSrc":"20220:20:19","nodeType":"YulAssignment","src":"20220:20:19","value":{"arguments":[{"name":"value","nativeSrc":"20231:5:19","nodeType":"YulIdentifier","src":"20231:5:19"},{"kind":"number","nativeSrc":"20238:1:19","nodeType":"YulLiteral","src":"20238:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20227:3:19","nodeType":"YulIdentifier","src":"20227:3:19"},"nativeSrc":"20227:13:19","nodeType":"YulFunctionCall","src":"20227:13:19"},"variableNames":[{"name":"ret","nativeSrc":"20220:3:19","nodeType":"YulIdentifier","src":"20220:3:19"}]}]},"name":"increment_t_uint256","nativeSrc":"20013:233:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20042:5:19","nodeType":"YulTypedName","src":"20042:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20052:3:19","nodeType":"YulTypedName","src":"20052:3:19","type":""}],"src":"20013:233:19"},{"body":{"nativeSrc":"20378:206:19","nodeType":"YulBlock","src":"20378:206:19","statements":[{"nativeSrc":"20388:26:19","nodeType":"YulAssignment","src":"20388:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"20400:9:19","nodeType":"YulIdentifier","src":"20400:9:19"},{"kind":"number","nativeSrc":"20411:2:19","nodeType":"YulLiteral","src":"20411:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20396:3:19","nodeType":"YulIdentifier","src":"20396:3:19"},"nativeSrc":"20396:18:19","nodeType":"YulFunctionCall","src":"20396:18:19"},"variableNames":[{"name":"tail","nativeSrc":"20388:4:19","nodeType":"YulIdentifier","src":"20388:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20468:6:19","nodeType":"YulIdentifier","src":"20468:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"20481:9:19","nodeType":"YulIdentifier","src":"20481:9:19"},{"kind":"number","nativeSrc":"20492:1:19","nodeType":"YulLiteral","src":"20492:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20477:3:19","nodeType":"YulIdentifier","src":"20477:3:19"},"nativeSrc":"20477:17:19","nodeType":"YulFunctionCall","src":"20477:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20424:43:19","nodeType":"YulIdentifier","src":"20424:43:19"},"nativeSrc":"20424:71:19","nodeType":"YulFunctionCall","src":"20424:71:19"},"nativeSrc":"20424:71:19","nodeType":"YulExpressionStatement","src":"20424:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20549:6:19","nodeType":"YulIdentifier","src":"20549:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"20562:9:19","nodeType":"YulIdentifier","src":"20562:9:19"},{"kind":"number","nativeSrc":"20573:2:19","nodeType":"YulLiteral","src":"20573:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20558:3:19","nodeType":"YulIdentifier","src":"20558:3:19"},"nativeSrc":"20558:18:19","nodeType":"YulFunctionCall","src":"20558:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20505:43:19","nodeType":"YulIdentifier","src":"20505:43:19"},"nativeSrc":"20505:72:19","nodeType":"YulFunctionCall","src":"20505:72:19"},"nativeSrc":"20505:72:19","nodeType":"YulExpressionStatement","src":"20505:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"20252:332:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20342:9:19","nodeType":"YulTypedName","src":"20342:9:19","type":""},{"name":"value1","nativeSrc":"20354:6:19","nodeType":"YulTypedName","src":"20354:6:19","type":""},{"name":"value0","nativeSrc":"20362:6:19","nodeType":"YulTypedName","src":"20362:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20373:4:19","nodeType":"YulTypedName","src":"20373:4:19","type":""}],"src":"20252:332:19"},{"body":{"nativeSrc":"20630:76:19","nodeType":"YulBlock","src":"20630:76:19","statements":[{"body":{"nativeSrc":"20684:16:19","nodeType":"YulBlock","src":"20684:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20693:1:19","nodeType":"YulLiteral","src":"20693:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"20696:1:19","nodeType":"YulLiteral","src":"20696:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20686:6:19","nodeType":"YulIdentifier","src":"20686:6:19"},"nativeSrc":"20686:12:19","nodeType":"YulFunctionCall","src":"20686:12:19"},"nativeSrc":"20686:12:19","nodeType":"YulExpressionStatement","src":"20686:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20653:5:19","nodeType":"YulIdentifier","src":"20653:5:19"},{"arguments":[{"name":"value","nativeSrc":"20675:5:19","nodeType":"YulIdentifier","src":"20675:5:19"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"20660:14:19","nodeType":"YulIdentifier","src":"20660:14:19"},"nativeSrc":"20660:21:19","nodeType":"YulFunctionCall","src":"20660:21:19"}],"functionName":{"name":"eq","nativeSrc":"20650:2:19","nodeType":"YulIdentifier","src":"20650:2:19"},"nativeSrc":"20650:32:19","nodeType":"YulFunctionCall","src":"20650:32:19"}],"functionName":{"name":"iszero","nativeSrc":"20643:6:19","nodeType":"YulIdentifier","src":"20643:6:19"},"nativeSrc":"20643:40:19","nodeType":"YulFunctionCall","src":"20643:40:19"},"nativeSrc":"20640:60:19","nodeType":"YulIf","src":"20640:60:19"}]},"name":"validator_revert_t_bool","nativeSrc":"20590:116:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20623:5:19","nodeType":"YulTypedName","src":"20623:5:19","type":""}],"src":"20590:116:19"},{"body":{"nativeSrc":"20772:77:19","nodeType":"YulBlock","src":"20772:77:19","statements":[{"nativeSrc":"20782:22:19","nodeType":"YulAssignment","src":"20782:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"20797:6:19","nodeType":"YulIdentifier","src":"20797:6:19"}],"functionName":{"name":"mload","nativeSrc":"20791:5:19","nodeType":"YulIdentifier","src":"20791:5:19"},"nativeSrc":"20791:13:19","nodeType":"YulFunctionCall","src":"20791:13:19"},"variableNames":[{"name":"value","nativeSrc":"20782:5:19","nodeType":"YulIdentifier","src":"20782:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20837:5:19","nodeType":"YulIdentifier","src":"20837:5:19"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"20813:23:19","nodeType":"YulIdentifier","src":"20813:23:19"},"nativeSrc":"20813:30:19","nodeType":"YulFunctionCall","src":"20813:30:19"},"nativeSrc":"20813:30:19","nodeType":"YulExpressionStatement","src":"20813:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"20712:137:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20750:6:19","nodeType":"YulTypedName","src":"20750:6:19","type":""},{"name":"end","nativeSrc":"20758:3:19","nodeType":"YulTypedName","src":"20758:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20766:5:19","nodeType":"YulTypedName","src":"20766:5:19","type":""}],"src":"20712:137:19"},{"body":{"nativeSrc":"20929:271:19","nodeType":"YulBlock","src":"20929:271:19","statements":[{"body":{"nativeSrc":"20975:83:19","nodeType":"YulBlock","src":"20975:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20977:77:19","nodeType":"YulIdentifier","src":"20977:77:19"},"nativeSrc":"20977:79:19","nodeType":"YulFunctionCall","src":"20977:79:19"},"nativeSrc":"20977:79:19","nodeType":"YulExpressionStatement","src":"20977:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20950:7:19","nodeType":"YulIdentifier","src":"20950:7:19"},{"name":"headStart","nativeSrc":"20959:9:19","nodeType":"YulIdentifier","src":"20959:9:19"}],"functionName":{"name":"sub","nativeSrc":"20946:3:19","nodeType":"YulIdentifier","src":"20946:3:19"},"nativeSrc":"20946:23:19","nodeType":"YulFunctionCall","src":"20946:23:19"},{"kind":"number","nativeSrc":"20971:2:19","nodeType":"YulLiteral","src":"20971:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20942:3:19","nodeType":"YulIdentifier","src":"20942:3:19"},"nativeSrc":"20942:32:19","nodeType":"YulFunctionCall","src":"20942:32:19"},"nativeSrc":"20939:119:19","nodeType":"YulIf","src":"20939:119:19"},{"nativeSrc":"21068:125:19","nodeType":"YulBlock","src":"21068:125:19","statements":[{"nativeSrc":"21083:15:19","nodeType":"YulVariableDeclaration","src":"21083:15:19","value":{"kind":"number","nativeSrc":"21097:1:19","nodeType":"YulLiteral","src":"21097:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21087:6:19","nodeType":"YulTypedName","src":"21087:6:19","type":""}]},{"nativeSrc":"21112:71:19","nodeType":"YulAssignment","src":"21112:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21155:9:19","nodeType":"YulIdentifier","src":"21155:9:19"},{"name":"offset","nativeSrc":"21166:6:19","nodeType":"YulIdentifier","src":"21166:6:19"}],"functionName":{"name":"add","nativeSrc":"21151:3:19","nodeType":"YulIdentifier","src":"21151:3:19"},"nativeSrc":"21151:22:19","nodeType":"YulFunctionCall","src":"21151:22:19"},{"name":"dataEnd","nativeSrc":"21175:7:19","nodeType":"YulIdentifier","src":"21175:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"21122:28:19","nodeType":"YulIdentifier","src":"21122:28:19"},"nativeSrc":"21122:61:19","nodeType":"YulFunctionCall","src":"21122:61:19"},"variableNames":[{"name":"value0","nativeSrc":"21112:6:19","nodeType":"YulIdentifier","src":"21112:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"20855:345:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20899:9:19","nodeType":"YulTypedName","src":"20899:9:19","type":""},{"name":"dataEnd","nativeSrc":"20910:7:19","nodeType":"YulTypedName","src":"20910:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20922:6:19","nodeType":"YulTypedName","src":"20922:6:19","type":""}],"src":"20855:345:19"},{"body":{"nativeSrc":"21269:80:19","nodeType":"YulBlock","src":"21269:80:19","statements":[{"nativeSrc":"21279:22:19","nodeType":"YulAssignment","src":"21279:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"21294:6:19","nodeType":"YulIdentifier","src":"21294:6:19"}],"functionName":{"name":"mload","nativeSrc":"21288:5:19","nodeType":"YulIdentifier","src":"21288:5:19"},"nativeSrc":"21288:13:19","nodeType":"YulFunctionCall","src":"21288:13:19"},"variableNames":[{"name":"value","nativeSrc":"21279:5:19","nodeType":"YulIdentifier","src":"21279:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"21337:5:19","nodeType":"YulIdentifier","src":"21337:5:19"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"21310:26:19","nodeType":"YulIdentifier","src":"21310:26:19"},"nativeSrc":"21310:33:19","nodeType":"YulFunctionCall","src":"21310:33:19"},"nativeSrc":"21310:33:19","nodeType":"YulExpressionStatement","src":"21310:33:19"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"21206:143:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"21247:6:19","nodeType":"YulTypedName","src":"21247:6:19","type":""},{"name":"end","nativeSrc":"21255:3:19","nodeType":"YulTypedName","src":"21255:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"21263:5:19","nodeType":"YulTypedName","src":"21263:5:19","type":""}],"src":"21206:143:19"},{"body":{"nativeSrc":"21466:552:19","nodeType":"YulBlock","src":"21466:552:19","statements":[{"body":{"nativeSrc":"21512:83:19","nodeType":"YulBlock","src":"21512:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21514:77:19","nodeType":"YulIdentifier","src":"21514:77:19"},"nativeSrc":"21514:79:19","nodeType":"YulFunctionCall","src":"21514:79:19"},"nativeSrc":"21514:79:19","nodeType":"YulExpressionStatement","src":"21514:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21487:7:19","nodeType":"YulIdentifier","src":"21487:7:19"},{"name":"headStart","nativeSrc":"21496:9:19","nodeType":"YulIdentifier","src":"21496:9:19"}],"functionName":{"name":"sub","nativeSrc":"21483:3:19","nodeType":"YulIdentifier","src":"21483:3:19"},"nativeSrc":"21483:23:19","nodeType":"YulFunctionCall","src":"21483:23:19"},{"kind":"number","nativeSrc":"21508:2:19","nodeType":"YulLiteral","src":"21508:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"21479:3:19","nodeType":"YulIdentifier","src":"21479:3:19"},"nativeSrc":"21479:32:19","nodeType":"YulFunctionCall","src":"21479:32:19"},"nativeSrc":"21476:119:19","nodeType":"YulIf","src":"21476:119:19"},{"nativeSrc":"21605:128:19","nodeType":"YulBlock","src":"21605:128:19","statements":[{"nativeSrc":"21620:15:19","nodeType":"YulVariableDeclaration","src":"21620:15:19","value":{"kind":"number","nativeSrc":"21634:1:19","nodeType":"YulLiteral","src":"21634:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21624:6:19","nodeType":"YulTypedName","src":"21624:6:19","type":""}]},{"nativeSrc":"21649:74:19","nodeType":"YulAssignment","src":"21649:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21695:9:19","nodeType":"YulIdentifier","src":"21695:9:19"},{"name":"offset","nativeSrc":"21706:6:19","nodeType":"YulIdentifier","src":"21706:6:19"}],"functionName":{"name":"add","nativeSrc":"21691:3:19","nodeType":"YulIdentifier","src":"21691:3:19"},"nativeSrc":"21691:22:19","nodeType":"YulFunctionCall","src":"21691:22:19"},{"name":"dataEnd","nativeSrc":"21715:7:19","nodeType":"YulIdentifier","src":"21715:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"21659:31:19","nodeType":"YulIdentifier","src":"21659:31:19"},"nativeSrc":"21659:64:19","nodeType":"YulFunctionCall","src":"21659:64:19"},"variableNames":[{"name":"value0","nativeSrc":"21649:6:19","nodeType":"YulIdentifier","src":"21649:6:19"}]}]},{"nativeSrc":"21743:129:19","nodeType":"YulBlock","src":"21743:129:19","statements":[{"nativeSrc":"21758:16:19","nodeType":"YulVariableDeclaration","src":"21758:16:19","value":{"kind":"number","nativeSrc":"21772:2:19","nodeType":"YulLiteral","src":"21772:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21762:6:19","nodeType":"YulTypedName","src":"21762:6:19","type":""}]},{"nativeSrc":"21788:74:19","nodeType":"YulAssignment","src":"21788:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21834:9:19","nodeType":"YulIdentifier","src":"21834:9:19"},{"name":"offset","nativeSrc":"21845:6:19","nodeType":"YulIdentifier","src":"21845:6:19"}],"functionName":{"name":"add","nativeSrc":"21830:3:19","nodeType":"YulIdentifier","src":"21830:3:19"},"nativeSrc":"21830:22:19","nodeType":"YulFunctionCall","src":"21830:22:19"},{"name":"dataEnd","nativeSrc":"21854:7:19","nodeType":"YulIdentifier","src":"21854:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"21798:31:19","nodeType":"YulIdentifier","src":"21798:31:19"},"nativeSrc":"21798:64:19","nodeType":"YulFunctionCall","src":"21798:64:19"},"variableNames":[{"name":"value1","nativeSrc":"21788:6:19","nodeType":"YulIdentifier","src":"21788:6:19"}]}]},{"nativeSrc":"21882:129:19","nodeType":"YulBlock","src":"21882:129:19","statements":[{"nativeSrc":"21897:16:19","nodeType":"YulVariableDeclaration","src":"21897:16:19","value":{"kind":"number","nativeSrc":"21911:2:19","nodeType":"YulLiteral","src":"21911:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"21901:6:19","nodeType":"YulTypedName","src":"21901:6:19","type":""}]},{"nativeSrc":"21927:74:19","nodeType":"YulAssignment","src":"21927:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21973:9:19","nodeType":"YulIdentifier","src":"21973:9:19"},{"name":"offset","nativeSrc":"21984:6:19","nodeType":"YulIdentifier","src":"21984:6:19"}],"functionName":{"name":"add","nativeSrc":"21969:3:19","nodeType":"YulIdentifier","src":"21969:3:19"},"nativeSrc":"21969:22:19","nodeType":"YulFunctionCall","src":"21969:22:19"},{"name":"dataEnd","nativeSrc":"21993:7:19","nodeType":"YulIdentifier","src":"21993:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"21937:31:19","nodeType":"YulIdentifier","src":"21937:31:19"},"nativeSrc":"21937:64:19","nodeType":"YulFunctionCall","src":"21937:64:19"},"variableNames":[{"name":"value2","nativeSrc":"21927:6:19","nodeType":"YulIdentifier","src":"21927:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory","nativeSrc":"21355:663:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21420:9:19","nodeType":"YulTypedName","src":"21420:9:19","type":""},{"name":"dataEnd","nativeSrc":"21431:7:19","nodeType":"YulTypedName","src":"21431:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21443:6:19","nodeType":"YulTypedName","src":"21443:6:19","type":""},{"name":"value1","nativeSrc":"21451:6:19","nodeType":"YulTypedName","src":"21451:6:19","type":""},{"name":"value2","nativeSrc":"21459:6:19","nodeType":"YulTypedName","src":"21459:6:19","type":""}],"src":"21355:663:19"},{"body":{"nativeSrc":"22101:274:19","nodeType":"YulBlock","src":"22101:274:19","statements":[{"body":{"nativeSrc":"22147:83:19","nodeType":"YulBlock","src":"22147:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22149:77:19","nodeType":"YulIdentifier","src":"22149:77:19"},"nativeSrc":"22149:79:19","nodeType":"YulFunctionCall","src":"22149:79:19"},"nativeSrc":"22149:79:19","nodeType":"YulExpressionStatement","src":"22149:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22122:7:19","nodeType":"YulIdentifier","src":"22122:7:19"},{"name":"headStart","nativeSrc":"22131:9:19","nodeType":"YulIdentifier","src":"22131:9:19"}],"functionName":{"name":"sub","nativeSrc":"22118:3:19","nodeType":"YulIdentifier","src":"22118:3:19"},"nativeSrc":"22118:23:19","nodeType":"YulFunctionCall","src":"22118:23:19"},{"kind":"number","nativeSrc":"22143:2:19","nodeType":"YulLiteral","src":"22143:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"22114:3:19","nodeType":"YulIdentifier","src":"22114:3:19"},"nativeSrc":"22114:32:19","nodeType":"YulFunctionCall","src":"22114:32:19"},"nativeSrc":"22111:119:19","nodeType":"YulIf","src":"22111:119:19"},{"nativeSrc":"22240:128:19","nodeType":"YulBlock","src":"22240:128:19","statements":[{"nativeSrc":"22255:15:19","nodeType":"YulVariableDeclaration","src":"22255:15:19","value":{"kind":"number","nativeSrc":"22269:1:19","nodeType":"YulLiteral","src":"22269:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"22259:6:19","nodeType":"YulTypedName","src":"22259:6:19","type":""}]},{"nativeSrc":"22284:74:19","nodeType":"YulAssignment","src":"22284:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22330:9:19","nodeType":"YulIdentifier","src":"22330:9:19"},{"name":"offset","nativeSrc":"22341:6:19","nodeType":"YulIdentifier","src":"22341:6:19"}],"functionName":{"name":"add","nativeSrc":"22326:3:19","nodeType":"YulIdentifier","src":"22326:3:19"},"nativeSrc":"22326:22:19","nodeType":"YulFunctionCall","src":"22326:22:19"},{"name":"dataEnd","nativeSrc":"22350:7:19","nodeType":"YulIdentifier","src":"22350:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"22294:31:19","nodeType":"YulIdentifier","src":"22294:31:19"},"nativeSrc":"22294:64:19","nodeType":"YulFunctionCall","src":"22294:64:19"},"variableNames":[{"name":"value0","nativeSrc":"22284:6:19","nodeType":"YulIdentifier","src":"22284:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"22024:351:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22071:9:19","nodeType":"YulTypedName","src":"22071:9:19","type":""},{"name":"dataEnd","nativeSrc":"22082:7:19","nodeType":"YulTypedName","src":"22082:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22094:6:19","nodeType":"YulTypedName","src":"22094:6:19","type":""}],"src":"22024:351:19"},{"body":{"nativeSrc":"22426:149:19","nodeType":"YulBlock","src":"22426:149:19","statements":[{"nativeSrc":"22436:25:19","nodeType":"YulAssignment","src":"22436:25:19","value":{"arguments":[{"name":"x","nativeSrc":"22459:1:19","nodeType":"YulIdentifier","src":"22459:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22441:17:19","nodeType":"YulIdentifier","src":"22441:17:19"},"nativeSrc":"22441:20:19","nodeType":"YulFunctionCall","src":"22441:20:19"},"variableNames":[{"name":"x","nativeSrc":"22436:1:19","nodeType":"YulIdentifier","src":"22436:1:19"}]},{"nativeSrc":"22470:25:19","nodeType":"YulAssignment","src":"22470:25:19","value":{"arguments":[{"name":"y","nativeSrc":"22493:1:19","nodeType":"YulIdentifier","src":"22493:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22475:17:19","nodeType":"YulIdentifier","src":"22475:17:19"},"nativeSrc":"22475:20:19","nodeType":"YulFunctionCall","src":"22475:20:19"},"variableNames":[{"name":"y","nativeSrc":"22470:1:19","nodeType":"YulIdentifier","src":"22470:1:19"}]},{"nativeSrc":"22504:17:19","nodeType":"YulAssignment","src":"22504:17:19","value":{"arguments":[{"name":"x","nativeSrc":"22516:1:19","nodeType":"YulIdentifier","src":"22516:1:19"},{"name":"y","nativeSrc":"22519:1:19","nodeType":"YulIdentifier","src":"22519:1:19"}],"functionName":{"name":"sub","nativeSrc":"22512:3:19","nodeType":"YulIdentifier","src":"22512:3:19"},"nativeSrc":"22512:9:19","nodeType":"YulFunctionCall","src":"22512:9:19"},"variableNames":[{"name":"diff","nativeSrc":"22504:4:19","nodeType":"YulIdentifier","src":"22504:4:19"}]},{"body":{"nativeSrc":"22546:22:19","nodeType":"YulBlock","src":"22546:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"22548:16:19","nodeType":"YulIdentifier","src":"22548:16:19"},"nativeSrc":"22548:18:19","nodeType":"YulFunctionCall","src":"22548:18:19"},"nativeSrc":"22548:18:19","nodeType":"YulExpressionStatement","src":"22548:18:19"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"22537:4:19","nodeType":"YulIdentifier","src":"22537:4:19"},{"name":"x","nativeSrc":"22543:1:19","nodeType":"YulIdentifier","src":"22543:1:19"}],"functionName":{"name":"gt","nativeSrc":"22534:2:19","nodeType":"YulIdentifier","src":"22534:2:19"},"nativeSrc":"22534:11:19","nodeType":"YulFunctionCall","src":"22534:11:19"},"nativeSrc":"22531:37:19","nodeType":"YulIf","src":"22531:37:19"}]},"name":"checked_sub_t_uint256","nativeSrc":"22381:194:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22412:1:19","nodeType":"YulTypedName","src":"22412:1:19","type":""},{"name":"y","nativeSrc":"22415:1:19","nodeType":"YulTypedName","src":"22415:1:19","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"22421:4:19","nodeType":"YulTypedName","src":"22421:4:19","type":""}],"src":"22381:194:19"},{"body":{"nativeSrc":"22694:34:19","nodeType":"YulBlock","src":"22694:34:19","statements":[{"nativeSrc":"22704:18:19","nodeType":"YulAssignment","src":"22704:18:19","value":{"name":"pos","nativeSrc":"22719:3:19","nodeType":"YulIdentifier","src":"22719:3:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"22704:11:19","nodeType":"YulIdentifier","src":"22704:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22581:147:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22666:3:19","nodeType":"YulTypedName","src":"22666:3:19","type":""},{"name":"length","nativeSrc":"22671:6:19","nodeType":"YulTypedName","src":"22671:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"22682:11:19","nodeType":"YulTypedName","src":"22682:11:19","type":""}],"src":"22581:147:19"},{"body":{"nativeSrc":"22874:209:19","nodeType":"YulBlock","src":"22874:209:19","statements":[{"nativeSrc":"22884:95:19","nodeType":"YulAssignment","src":"22884:95:19","value":{"arguments":[{"name":"pos","nativeSrc":"22967:3:19","nodeType":"YulIdentifier","src":"22967:3:19"},{"name":"length","nativeSrc":"22972:6:19","nodeType":"YulIdentifier","src":"22972:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22891:75:19","nodeType":"YulIdentifier","src":"22891:75:19"},"nativeSrc":"22891:88:19","nodeType":"YulFunctionCall","src":"22891:88:19"},"variableNames":[{"name":"pos","nativeSrc":"22884:3:19","nodeType":"YulIdentifier","src":"22884:3:19"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"23026:5:19","nodeType":"YulIdentifier","src":"23026:5:19"},{"name":"pos","nativeSrc":"23033:3:19","nodeType":"YulIdentifier","src":"23033:3:19"},{"name":"length","nativeSrc":"23038:6:19","nodeType":"YulIdentifier","src":"23038:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"22989:36:19","nodeType":"YulIdentifier","src":"22989:36:19"},"nativeSrc":"22989:56:19","nodeType":"YulFunctionCall","src":"22989:56:19"},"nativeSrc":"22989:56:19","nodeType":"YulExpressionStatement","src":"22989:56:19"},{"nativeSrc":"23054:23:19","nodeType":"YulAssignment","src":"23054:23:19","value":{"arguments":[{"name":"pos","nativeSrc":"23065:3:19","nodeType":"YulIdentifier","src":"23065:3:19"},{"name":"length","nativeSrc":"23070:6:19","nodeType":"YulIdentifier","src":"23070:6:19"}],"functionName":{"name":"add","nativeSrc":"23061:3:19","nodeType":"YulIdentifier","src":"23061:3:19"},"nativeSrc":"23061:16:19","nodeType":"YulFunctionCall","src":"23061:16:19"},"variableNames":[{"name":"end","nativeSrc":"23054:3:19","nodeType":"YulIdentifier","src":"23054:3:19"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22756:327:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"22847:5:19","nodeType":"YulTypedName","src":"22847:5:19","type":""},{"name":"length","nativeSrc":"22854:6:19","nodeType":"YulTypedName","src":"22854:6:19","type":""},{"name":"pos","nativeSrc":"22862:3:19","nodeType":"YulTypedName","src":"22862:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22870:3:19","nodeType":"YulTypedName","src":"22870:3:19","type":""}],"src":"22756:327:19"},{"body":{"nativeSrc":"23233:147:19","nodeType":"YulBlock","src":"23233:147:19","statements":[{"nativeSrc":"23244:110:19","nodeType":"YulAssignment","src":"23244:110:19","value":{"arguments":[{"name":"value0","nativeSrc":"23333:6:19","nodeType":"YulIdentifier","src":"23333:6:19"},{"name":"value1","nativeSrc":"23341:6:19","nodeType":"YulIdentifier","src":"23341:6:19"},{"name":"pos","nativeSrc":"23350:3:19","nodeType":"YulIdentifier","src":"23350:3:19"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"23251:81:19","nodeType":"YulIdentifier","src":"23251:81:19"},"nativeSrc":"23251:103:19","nodeType":"YulFunctionCall","src":"23251:103:19"},"variableNames":[{"name":"pos","nativeSrc":"23244:3:19","nodeType":"YulIdentifier","src":"23244:3:19"}]},{"nativeSrc":"23364:10:19","nodeType":"YulAssignment","src":"23364:10:19","value":{"name":"pos","nativeSrc":"23371:3:19","nodeType":"YulIdentifier","src":"23371:3:19"},"variableNames":[{"name":"end","nativeSrc":"23364:3:19","nodeType":"YulIdentifier","src":"23364:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"23089:291:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23204:3:19","nodeType":"YulTypedName","src":"23204:3:19","type":""},{"name":"value1","nativeSrc":"23210:6:19","nodeType":"YulTypedName","src":"23210:6:19","type":""},{"name":"value0","nativeSrc":"23218:6:19","nodeType":"YulTypedName","src":"23218:6:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23229:3:19","nodeType":"YulTypedName","src":"23229:3:19","type":""}],"src":"23089:291:19"},{"body":{"nativeSrc":"23457:88:19","nodeType":"YulBlock","src":"23457:88:19","statements":[{"nativeSrc":"23467:22:19","nodeType":"YulAssignment","src":"23467:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"23482:6:19","nodeType":"YulIdentifier","src":"23482:6:19"}],"functionName":{"name":"mload","nativeSrc":"23476:5:19","nodeType":"YulIdentifier","src":"23476:5:19"},"nativeSrc":"23476:13:19","nodeType":"YulFunctionCall","src":"23476:13:19"},"variableNames":[{"name":"value","nativeSrc":"23467:5:19","nodeType":"YulIdentifier","src":"23467:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23533:5:19","nodeType":"YulIdentifier","src":"23533:5:19"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"23498:34:19","nodeType":"YulIdentifier","src":"23498:34:19"},"nativeSrc":"23498:41:19","nodeType":"YulFunctionCall","src":"23498:41:19"},"nativeSrc":"23498:41:19","nodeType":"YulExpressionStatement","src":"23498:41:19"}]},"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"23386:159:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23435:6:19","nodeType":"YulTypedName","src":"23435:6:19","type":""},{"name":"end","nativeSrc":"23443:3:19","nodeType":"YulTypedName","src":"23443:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"23451:5:19","nodeType":"YulTypedName","src":"23451:5:19","type":""}],"src":"23386:159:19"},{"body":{"nativeSrc":"23670:560:19","nodeType":"YulBlock","src":"23670:560:19","statements":[{"body":{"nativeSrc":"23716:83:19","nodeType":"YulBlock","src":"23716:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23718:77:19","nodeType":"YulIdentifier","src":"23718:77:19"},"nativeSrc":"23718:79:19","nodeType":"YulFunctionCall","src":"23718:79:19"},"nativeSrc":"23718:79:19","nodeType":"YulExpressionStatement","src":"23718:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23691:7:19","nodeType":"YulIdentifier","src":"23691:7:19"},{"name":"headStart","nativeSrc":"23700:9:19","nodeType":"YulIdentifier","src":"23700:9:19"}],"functionName":{"name":"sub","nativeSrc":"23687:3:19","nodeType":"YulIdentifier","src":"23687:3:19"},"nativeSrc":"23687:23:19","nodeType":"YulFunctionCall","src":"23687:23:19"},{"kind":"number","nativeSrc":"23712:2:19","nodeType":"YulLiteral","src":"23712:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"23683:3:19","nodeType":"YulIdentifier","src":"23683:3:19"},"nativeSrc":"23683:32:19","nodeType":"YulFunctionCall","src":"23683:32:19"},"nativeSrc":"23680:119:19","nodeType":"YulIf","src":"23680:119:19"},{"nativeSrc":"23809:128:19","nodeType":"YulBlock","src":"23809:128:19","statements":[{"nativeSrc":"23824:15:19","nodeType":"YulVariableDeclaration","src":"23824:15:19","value":{"kind":"number","nativeSrc":"23838:1:19","nodeType":"YulLiteral","src":"23838:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23828:6:19","nodeType":"YulTypedName","src":"23828:6:19","type":""}]},{"nativeSrc":"23853:74:19","nodeType":"YulAssignment","src":"23853:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23899:9:19","nodeType":"YulIdentifier","src":"23899:9:19"},{"name":"offset","nativeSrc":"23910:6:19","nodeType":"YulIdentifier","src":"23910:6:19"}],"functionName":{"name":"add","nativeSrc":"23895:3:19","nodeType":"YulIdentifier","src":"23895:3:19"},"nativeSrc":"23895:22:19","nodeType":"YulFunctionCall","src":"23895:22:19"},{"name":"dataEnd","nativeSrc":"23919:7:19","nodeType":"YulIdentifier","src":"23919:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"23863:31:19","nodeType":"YulIdentifier","src":"23863:31:19"},"nativeSrc":"23863:64:19","nodeType":"YulFunctionCall","src":"23863:64:19"},"variableNames":[{"name":"value0","nativeSrc":"23853:6:19","nodeType":"YulIdentifier","src":"23853:6:19"}]}]},{"nativeSrc":"23947:137:19","nodeType":"YulBlock","src":"23947:137:19","statements":[{"nativeSrc":"23962:16:19","nodeType":"YulVariableDeclaration","src":"23962:16:19","value":{"kind":"number","nativeSrc":"23976:2:19","nodeType":"YulLiteral","src":"23976:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23966:6:19","nodeType":"YulTypedName","src":"23966:6:19","type":""}]},{"nativeSrc":"23992:82:19","nodeType":"YulAssignment","src":"23992:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24046:9:19","nodeType":"YulIdentifier","src":"24046:9:19"},{"name":"offset","nativeSrc":"24057:6:19","nodeType":"YulIdentifier","src":"24057:6:19"}],"functionName":{"name":"add","nativeSrc":"24042:3:19","nodeType":"YulIdentifier","src":"24042:3:19"},"nativeSrc":"24042:22:19","nodeType":"YulFunctionCall","src":"24042:22:19"},{"name":"dataEnd","nativeSrc":"24066:7:19","nodeType":"YulIdentifier","src":"24066:7:19"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"24002:39:19","nodeType":"YulIdentifier","src":"24002:39:19"},"nativeSrc":"24002:72:19","nodeType":"YulFunctionCall","src":"24002:72:19"},"variableNames":[{"name":"value1","nativeSrc":"23992:6:19","nodeType":"YulIdentifier","src":"23992:6:19"}]}]},{"nativeSrc":"24094:129:19","nodeType":"YulBlock","src":"24094:129:19","statements":[{"nativeSrc":"24109:16:19","nodeType":"YulVariableDeclaration","src":"24109:16:19","value":{"kind":"number","nativeSrc":"24123:2:19","nodeType":"YulLiteral","src":"24123:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"24113:6:19","nodeType":"YulTypedName","src":"24113:6:19","type":""}]},{"nativeSrc":"24139:74:19","nodeType":"YulAssignment","src":"24139:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24185:9:19","nodeType":"YulIdentifier","src":"24185:9:19"},{"name":"offset","nativeSrc":"24196:6:19","nodeType":"YulIdentifier","src":"24196:6:19"}],"functionName":{"name":"add","nativeSrc":"24181:3:19","nodeType":"YulIdentifier","src":"24181:3:19"},"nativeSrc":"24181:22:19","nodeType":"YulFunctionCall","src":"24181:22:19"},{"name":"dataEnd","nativeSrc":"24205:7:19","nodeType":"YulIdentifier","src":"24205:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"24149:31:19","nodeType":"YulIdentifier","src":"24149:31:19"},"nativeSrc":"24149:64:19","nodeType":"YulFunctionCall","src":"24149:64:19"},"variableNames":[{"name":"value2","nativeSrc":"24139:6:19","nodeType":"YulIdentifier","src":"24139:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory","nativeSrc":"23551:679:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23624:9:19","nodeType":"YulTypedName","src":"23624:9:19","type":""},{"name":"dataEnd","nativeSrc":"23635:7:19","nodeType":"YulTypedName","src":"23635:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23647:6:19","nodeType":"YulTypedName","src":"23647:6:19","type":""},{"name":"value1","nativeSrc":"23655:6:19","nodeType":"YulTypedName","src":"23655:6:19","type":""},{"name":"value2","nativeSrc":"23663:6:19","nodeType":"YulTypedName","src":"23663:6:19","type":""}],"src":"23551:679:19"},{"body":{"nativeSrc":"24264:152:19","nodeType":"YulBlock","src":"24264:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"24281:1:19","nodeType":"YulLiteral","src":"24281:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"24284:77:19","nodeType":"YulLiteral","src":"24284:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"24274:6:19","nodeType":"YulIdentifier","src":"24274:6:19"},"nativeSrc":"24274:88:19","nodeType":"YulFunctionCall","src":"24274:88:19"},"nativeSrc":"24274:88:19","nodeType":"YulExpressionStatement","src":"24274:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"24378:1:19","nodeType":"YulLiteral","src":"24378:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"24381:4:19","nodeType":"YulLiteral","src":"24381:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"24371:6:19","nodeType":"YulIdentifier","src":"24371:6:19"},"nativeSrc":"24371:15:19","nodeType":"YulFunctionCall","src":"24371:15:19"},"nativeSrc":"24371:15:19","nodeType":"YulExpressionStatement","src":"24371:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"24402:1:19","nodeType":"YulLiteral","src":"24402:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"24405:4:19","nodeType":"YulLiteral","src":"24405:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"24395:6:19","nodeType":"YulIdentifier","src":"24395:6:19"},"nativeSrc":"24395:15:19","nodeType":"YulFunctionCall","src":"24395:15:19"},"nativeSrc":"24395:15:19","nodeType":"YulExpressionStatement","src":"24395:15:19"}]},"name":"panic_error_0x21","nativeSrc":"24236:180:19","nodeType":"YulFunctionDefinition","src":"24236:180:19"},{"body":{"nativeSrc":"24576:288:19","nodeType":"YulBlock","src":"24576:288:19","statements":[{"nativeSrc":"24586:26:19","nodeType":"YulAssignment","src":"24586:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"24598:9:19","nodeType":"YulIdentifier","src":"24598:9:19"},{"kind":"number","nativeSrc":"24609:2:19","nodeType":"YulLiteral","src":"24609:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24594:3:19","nodeType":"YulIdentifier","src":"24594:3:19"},"nativeSrc":"24594:18:19","nodeType":"YulFunctionCall","src":"24594:18:19"},"variableNames":[{"name":"tail","nativeSrc":"24586:4:19","nodeType":"YulIdentifier","src":"24586:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24666:6:19","nodeType":"YulIdentifier","src":"24666:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"24679:9:19","nodeType":"YulIdentifier","src":"24679:9:19"},{"kind":"number","nativeSrc":"24690:1:19","nodeType":"YulLiteral","src":"24690:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24675:3:19","nodeType":"YulIdentifier","src":"24675:3:19"},"nativeSrc":"24675:17:19","nodeType":"YulFunctionCall","src":"24675:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24622:43:19","nodeType":"YulIdentifier","src":"24622:43:19"},"nativeSrc":"24622:71:19","nodeType":"YulFunctionCall","src":"24622:71:19"},"nativeSrc":"24622:71:19","nodeType":"YulExpressionStatement","src":"24622:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24747:6:19","nodeType":"YulIdentifier","src":"24747:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"24760:9:19","nodeType":"YulIdentifier","src":"24760:9:19"},{"kind":"number","nativeSrc":"24771:2:19","nodeType":"YulLiteral","src":"24771:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24756:3:19","nodeType":"YulIdentifier","src":"24756:3:19"},"nativeSrc":"24756:18:19","nodeType":"YulFunctionCall","src":"24756:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24703:43:19","nodeType":"YulIdentifier","src":"24703:43:19"},"nativeSrc":"24703:72:19","nodeType":"YulFunctionCall","src":"24703:72:19"},"nativeSrc":"24703:72:19","nodeType":"YulExpressionStatement","src":"24703:72:19"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24829:6:19","nodeType":"YulIdentifier","src":"24829:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"24842:9:19","nodeType":"YulIdentifier","src":"24842:9:19"},{"kind":"number","nativeSrc":"24853:2:19","nodeType":"YulLiteral","src":"24853:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24838:3:19","nodeType":"YulIdentifier","src":"24838:3:19"},"nativeSrc":"24838:18:19","nodeType":"YulFunctionCall","src":"24838:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24785:43:19","nodeType":"YulIdentifier","src":"24785:43:19"},"nativeSrc":"24785:72:19","nodeType":"YulFunctionCall","src":"24785:72:19"},"nativeSrc":"24785:72:19","nodeType":"YulExpressionStatement","src":"24785:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"24422:442:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24532:9:19","nodeType":"YulTypedName","src":"24532:9:19","type":""},{"name":"value2","nativeSrc":"24544:6:19","nodeType":"YulTypedName","src":"24544:6:19","type":""},{"name":"value1","nativeSrc":"24552:6:19","nodeType":"YulTypedName","src":"24552:6:19","type":""},{"name":"value0","nativeSrc":"24560:6:19","nodeType":"YulTypedName","src":"24560:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24571:4:19","nodeType":"YulTypedName","src":"24571:4:19","type":""}],"src":"24422:442:19"},{"body":{"nativeSrc":"24935:53:19","nodeType":"YulBlock","src":"24935:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24952:3:19","nodeType":"YulIdentifier","src":"24952:3:19"},{"arguments":[{"name":"value","nativeSrc":"24975:5:19","nodeType":"YulIdentifier","src":"24975:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"24957:17:19","nodeType":"YulIdentifier","src":"24957:17:19"},"nativeSrc":"24957:24:19","nodeType":"YulFunctionCall","src":"24957:24:19"}],"functionName":{"name":"mstore","nativeSrc":"24945:6:19","nodeType":"YulIdentifier","src":"24945:6:19"},"nativeSrc":"24945:37:19","nodeType":"YulFunctionCall","src":"24945:37:19"},"nativeSrc":"24945:37:19","nodeType":"YulExpressionStatement","src":"24945:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24870:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24923:5:19","nodeType":"YulTypedName","src":"24923:5:19","type":""},{"name":"pos","nativeSrc":"24930:3:19","nodeType":"YulTypedName","src":"24930:3:19","type":""}],"src":"24870:118:19"},{"body":{"nativeSrc":"25138:275:19","nodeType":"YulBlock","src":"25138:275:19","statements":[{"nativeSrc":"25148:26:19","nodeType":"YulAssignment","src":"25148:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"25160:9:19","nodeType":"YulIdentifier","src":"25160:9:19"},{"kind":"number","nativeSrc":"25171:2:19","nodeType":"YulLiteral","src":"25171:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25156:3:19","nodeType":"YulIdentifier","src":"25156:3:19"},"nativeSrc":"25156:18:19","nodeType":"YulFunctionCall","src":"25156:18:19"},"variableNames":[{"name":"tail","nativeSrc":"25148:4:19","nodeType":"YulIdentifier","src":"25148:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25228:6:19","nodeType":"YulIdentifier","src":"25228:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"25241:9:19","nodeType":"YulIdentifier","src":"25241:9:19"},{"kind":"number","nativeSrc":"25252:1:19","nodeType":"YulLiteral","src":"25252:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25237:3:19","nodeType":"YulIdentifier","src":"25237:3:19"},"nativeSrc":"25237:17:19","nodeType":"YulFunctionCall","src":"25237:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25184:43:19","nodeType":"YulIdentifier","src":"25184:43:19"},"nativeSrc":"25184:71:19","nodeType":"YulFunctionCall","src":"25184:71:19"},"nativeSrc":"25184:71:19","nodeType":"YulExpressionStatement","src":"25184:71:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25276:9:19","nodeType":"YulIdentifier","src":"25276:9:19"},{"kind":"number","nativeSrc":"25287:2:19","nodeType":"YulLiteral","src":"25287:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25272:3:19","nodeType":"YulIdentifier","src":"25272:3:19"},"nativeSrc":"25272:18:19","nodeType":"YulFunctionCall","src":"25272:18:19"},{"arguments":[{"name":"tail","nativeSrc":"25296:4:19","nodeType":"YulIdentifier","src":"25296:4:19"},{"name":"headStart","nativeSrc":"25302:9:19","nodeType":"YulIdentifier","src":"25302:9:19"}],"functionName":{"name":"sub","nativeSrc":"25292:3:19","nodeType":"YulIdentifier","src":"25292:3:19"},"nativeSrc":"25292:20:19","nodeType":"YulFunctionCall","src":"25292:20:19"}],"functionName":{"name":"mstore","nativeSrc":"25265:6:19","nodeType":"YulIdentifier","src":"25265:6:19"},"nativeSrc":"25265:48:19","nodeType":"YulFunctionCall","src":"25265:48:19"},"nativeSrc":"25265:48:19","nodeType":"YulExpressionStatement","src":"25265:48:19"},{"nativeSrc":"25322:84:19","nodeType":"YulAssignment","src":"25322:84:19","value":{"arguments":[{"name":"value1","nativeSrc":"25392:6:19","nodeType":"YulIdentifier","src":"25392:6:19"},{"name":"tail","nativeSrc":"25401:4:19","nodeType":"YulIdentifier","src":"25401:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"25330:61:19","nodeType":"YulIdentifier","src":"25330:61:19"},"nativeSrc":"25330:76:19","nodeType":"YulFunctionCall","src":"25330:76:19"},"variableNames":[{"name":"tail","nativeSrc":"25322:4:19","nodeType":"YulIdentifier","src":"25322:4:19"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"24994:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25102:9:19","nodeType":"YulTypedName","src":"25102:9:19","type":""},{"name":"value1","nativeSrc":"25114:6:19","nodeType":"YulTypedName","src":"25114:6:19","type":""},{"name":"value0","nativeSrc":"25122:6:19","nodeType":"YulTypedName","src":"25122:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25133:4:19","nodeType":"YulTypedName","src":"25133:4:19","type":""}],"src":"24994:419:19"},{"body":{"nativeSrc":"25527:278:19","nodeType":"YulBlock","src":"25527:278:19","statements":[{"nativeSrc":"25537:52:19","nodeType":"YulVariableDeclaration","src":"25537:52:19","value":{"arguments":[{"name":"value","nativeSrc":"25583:5:19","nodeType":"YulIdentifier","src":"25583:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"25551:31:19","nodeType":"YulIdentifier","src":"25551:31:19"},"nativeSrc":"25551:38:19","nodeType":"YulFunctionCall","src":"25551:38:19"},"variables":[{"name":"length","nativeSrc":"25541:6:19","nodeType":"YulTypedName","src":"25541:6:19","type":""}]},{"nativeSrc":"25598:95:19","nodeType":"YulAssignment","src":"25598:95:19","value":{"arguments":[{"name":"pos","nativeSrc":"25681:3:19","nodeType":"YulIdentifier","src":"25681:3:19"},{"name":"length","nativeSrc":"25686:6:19","nodeType":"YulIdentifier","src":"25686:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25605:75:19","nodeType":"YulIdentifier","src":"25605:75:19"},"nativeSrc":"25605:88:19","nodeType":"YulFunctionCall","src":"25605:88:19"},"variableNames":[{"name":"pos","nativeSrc":"25598:3:19","nodeType":"YulIdentifier","src":"25598:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"25741:5:19","nodeType":"YulIdentifier","src":"25741:5:19"},{"kind":"number","nativeSrc":"25748:4:19","nodeType":"YulLiteral","src":"25748:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25737:3:19","nodeType":"YulIdentifier","src":"25737:3:19"},"nativeSrc":"25737:16:19","nodeType":"YulFunctionCall","src":"25737:16:19"},{"name":"pos","nativeSrc":"25755:3:19","nodeType":"YulIdentifier","src":"25755:3:19"},{"name":"length","nativeSrc":"25760:6:19","nodeType":"YulIdentifier","src":"25760:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"25702:34:19","nodeType":"YulIdentifier","src":"25702:34:19"},"nativeSrc":"25702:65:19","nodeType":"YulFunctionCall","src":"25702:65:19"},"nativeSrc":"25702:65:19","nodeType":"YulExpressionStatement","src":"25702:65:19"},{"nativeSrc":"25776:23:19","nodeType":"YulAssignment","src":"25776:23:19","value":{"arguments":[{"name":"pos","nativeSrc":"25787:3:19","nodeType":"YulIdentifier","src":"25787:3:19"},{"name":"length","nativeSrc":"25792:6:19","nodeType":"YulIdentifier","src":"25792:6:19"}],"functionName":{"name":"add","nativeSrc":"25783:3:19","nodeType":"YulIdentifier","src":"25783:3:19"},"nativeSrc":"25783:16:19","nodeType":"YulFunctionCall","src":"25783:16:19"},"variableNames":[{"name":"end","nativeSrc":"25776:3:19","nodeType":"YulIdentifier","src":"25776:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25419:386:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25508:5:19","nodeType":"YulTypedName","src":"25508:5:19","type":""},{"name":"pos","nativeSrc":"25515:3:19","nodeType":"YulTypedName","src":"25515:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25523:3:19","nodeType":"YulTypedName","src":"25523:3:19","type":""}],"src":"25419:386:19"},{"body":{"nativeSrc":"25945:137:19","nodeType":"YulBlock","src":"25945:137:19","statements":[{"nativeSrc":"25956:100:19","nodeType":"YulAssignment","src":"25956:100:19","value":{"arguments":[{"name":"value0","nativeSrc":"26043:6:19","nodeType":"YulIdentifier","src":"26043:6:19"},{"name":"pos","nativeSrc":"26052:3:19","nodeType":"YulIdentifier","src":"26052:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25963:79:19","nodeType":"YulIdentifier","src":"25963:79:19"},"nativeSrc":"25963:93:19","nodeType":"YulFunctionCall","src":"25963:93:19"},"variableNames":[{"name":"pos","nativeSrc":"25956:3:19","nodeType":"YulIdentifier","src":"25956:3:19"}]},{"nativeSrc":"26066:10:19","nodeType":"YulAssignment","src":"26066:10:19","value":{"name":"pos","nativeSrc":"26073:3:19","nodeType":"YulIdentifier","src":"26073:3:19"},"variableNames":[{"name":"end","nativeSrc":"26066:3:19","nodeType":"YulIdentifier","src":"26066:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"25811:271:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25924:3:19","nodeType":"YulTypedName","src":"25924:3:19","type":""},{"name":"value0","nativeSrc":"25930:6:19","nodeType":"YulTypedName","src":"25930:6:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25941:3:19","nodeType":"YulTypedName","src":"25941:3:19","type":""}],"src":"25811:271:19"},{"body":{"nativeSrc":"26151:80:19","nodeType":"YulBlock","src":"26151:80:19","statements":[{"nativeSrc":"26161:22:19","nodeType":"YulAssignment","src":"26161:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"26176:6:19","nodeType":"YulIdentifier","src":"26176:6:19"}],"functionName":{"name":"mload","nativeSrc":"26170:5:19","nodeType":"YulIdentifier","src":"26170:5:19"},"nativeSrc":"26170:13:19","nodeType":"YulFunctionCall","src":"26170:13:19"},"variableNames":[{"name":"value","nativeSrc":"26161:5:19","nodeType":"YulIdentifier","src":"26161:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"26219:5:19","nodeType":"YulIdentifier","src":"26219:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"26192:26:19","nodeType":"YulIdentifier","src":"26192:26:19"},"nativeSrc":"26192:33:19","nodeType":"YulFunctionCall","src":"26192:33:19"},"nativeSrc":"26192:33:19","nodeType":"YulExpressionStatement","src":"26192:33:19"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"26088:143:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"26129:6:19","nodeType":"YulTypedName","src":"26129:6:19","type":""},{"name":"end","nativeSrc":"26137:3:19","nodeType":"YulTypedName","src":"26137:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"26145:5:19","nodeType":"YulTypedName","src":"26145:5:19","type":""}],"src":"26088:143:19"},{"body":{"nativeSrc":"26314:274:19","nodeType":"YulBlock","src":"26314:274:19","statements":[{"body":{"nativeSrc":"26360:83:19","nodeType":"YulBlock","src":"26360:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"26362:77:19","nodeType":"YulIdentifier","src":"26362:77:19"},"nativeSrc":"26362:79:19","nodeType":"YulFunctionCall","src":"26362:79:19"},"nativeSrc":"26362:79:19","nodeType":"YulExpressionStatement","src":"26362:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"26335:7:19","nodeType":"YulIdentifier","src":"26335:7:19"},{"name":"headStart","nativeSrc":"26344:9:19","nodeType":"YulIdentifier","src":"26344:9:19"}],"functionName":{"name":"sub","nativeSrc":"26331:3:19","nodeType":"YulIdentifier","src":"26331:3:19"},"nativeSrc":"26331:23:19","nodeType":"YulFunctionCall","src":"26331:23:19"},{"kind":"number","nativeSrc":"26356:2:19","nodeType":"YulLiteral","src":"26356:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"26327:3:19","nodeType":"YulIdentifier","src":"26327:3:19"},"nativeSrc":"26327:32:19","nodeType":"YulFunctionCall","src":"26327:32:19"},"nativeSrc":"26324:119:19","nodeType":"YulIf","src":"26324:119:19"},{"nativeSrc":"26453:128:19","nodeType":"YulBlock","src":"26453:128:19","statements":[{"nativeSrc":"26468:15:19","nodeType":"YulVariableDeclaration","src":"26468:15:19","value":{"kind":"number","nativeSrc":"26482:1:19","nodeType":"YulLiteral","src":"26482:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"26472:6:19","nodeType":"YulTypedName","src":"26472:6:19","type":""}]},{"nativeSrc":"26497:74:19","nodeType":"YulAssignment","src":"26497:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26543:9:19","nodeType":"YulIdentifier","src":"26543:9:19"},{"name":"offset","nativeSrc":"26554:6:19","nodeType":"YulIdentifier","src":"26554:6:19"}],"functionName":{"name":"add","nativeSrc":"26539:3:19","nodeType":"YulIdentifier","src":"26539:3:19"},"nativeSrc":"26539:22:19","nodeType":"YulFunctionCall","src":"26539:22:19"},{"name":"dataEnd","nativeSrc":"26563:7:19","nodeType":"YulIdentifier","src":"26563:7:19"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"26507:31:19","nodeType":"YulIdentifier","src":"26507:31:19"},"nativeSrc":"26507:64:19","nodeType":"YulFunctionCall","src":"26507:64:19"},"variableNames":[{"name":"value0","nativeSrc":"26497:6:19","nodeType":"YulIdentifier","src":"26497:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"26237:351:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26284:9:19","nodeType":"YulTypedName","src":"26284:9:19","type":""},{"name":"dataEnd","nativeSrc":"26295:7:19","nodeType":"YulTypedName","src":"26295:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"26307:6:19","nodeType":"YulTypedName","src":"26307:6:19","type":""}],"src":"26237:351:19"},{"body":{"nativeSrc":"26637:43:19","nodeType":"YulBlock","src":"26637:43:19","statements":[{"nativeSrc":"26647:27:19","nodeType":"YulAssignment","src":"26647:27:19","value":{"arguments":[{"name":"value","nativeSrc":"26662:5:19","nodeType":"YulIdentifier","src":"26662:5:19"},{"kind":"number","nativeSrc":"26669:4:19","nodeType":"YulLiteral","src":"26669:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"26658:3:19","nodeType":"YulIdentifier","src":"26658:3:19"},"nativeSrc":"26658:16:19","nodeType":"YulFunctionCall","src":"26658:16:19"},"variableNames":[{"name":"cleaned","nativeSrc":"26647:7:19","nodeType":"YulIdentifier","src":"26647:7:19"}]}]},"name":"cleanup_t_uint8","nativeSrc":"26594:86:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26619:5:19","nodeType":"YulTypedName","src":"26619:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"26629:7:19","nodeType":"YulTypedName","src":"26629:7:19","type":""}],"src":"26594:86:19"},{"body":{"nativeSrc":"26747:51:19","nodeType":"YulBlock","src":"26747:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"26764:3:19","nodeType":"YulIdentifier","src":"26764:3:19"},{"arguments":[{"name":"value","nativeSrc":"26785:5:19","nodeType":"YulIdentifier","src":"26785:5:19"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"26769:15:19","nodeType":"YulIdentifier","src":"26769:15:19"},"nativeSrc":"26769:22:19","nodeType":"YulFunctionCall","src":"26769:22:19"}],"functionName":{"name":"mstore","nativeSrc":"26757:6:19","nodeType":"YulIdentifier","src":"26757:6:19"},"nativeSrc":"26757:35:19","nodeType":"YulFunctionCall","src":"26757:35:19"},"nativeSrc":"26757:35:19","nodeType":"YulExpressionStatement","src":"26757:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"26686:112:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26735:5:19","nodeType":"YulTypedName","src":"26735:5:19","type":""},{"name":"pos","nativeSrc":"26742:3:19","nodeType":"YulTypedName","src":"26742:3:19","type":""}],"src":"26686:112:19"},{"body":{"nativeSrc":"26982:367:19","nodeType":"YulBlock","src":"26982:367:19","statements":[{"nativeSrc":"26992:27:19","nodeType":"YulAssignment","src":"26992:27:19","value":{"arguments":[{"name":"headStart","nativeSrc":"27004:9:19","nodeType":"YulIdentifier","src":"27004:9:19"},{"kind":"number","nativeSrc":"27015:3:19","nodeType":"YulLiteral","src":"27015:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"27000:3:19","nodeType":"YulIdentifier","src":"27000:3:19"},"nativeSrc":"27000:19:19","nodeType":"YulFunctionCall","src":"27000:19:19"},"variableNames":[{"name":"tail","nativeSrc":"26992:4:19","nodeType":"YulIdentifier","src":"26992:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27073:6:19","nodeType":"YulIdentifier","src":"27073:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"27086:9:19","nodeType":"YulIdentifier","src":"27086:9:19"},{"kind":"number","nativeSrc":"27097:1:19","nodeType":"YulLiteral","src":"27097:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27082:3:19","nodeType":"YulIdentifier","src":"27082:3:19"},"nativeSrc":"27082:17:19","nodeType":"YulFunctionCall","src":"27082:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27029:43:19","nodeType":"YulIdentifier","src":"27029:43:19"},"nativeSrc":"27029:71:19","nodeType":"YulFunctionCall","src":"27029:71:19"},"nativeSrc":"27029:71:19","nodeType":"YulExpressionStatement","src":"27029:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27150:6:19","nodeType":"YulIdentifier","src":"27150:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"27163:9:19","nodeType":"YulIdentifier","src":"27163:9:19"},{"kind":"number","nativeSrc":"27174:2:19","nodeType":"YulLiteral","src":"27174:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27159:3:19","nodeType":"YulIdentifier","src":"27159:3:19"},"nativeSrc":"27159:18:19","nodeType":"YulFunctionCall","src":"27159:18:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"27110:39:19","nodeType":"YulIdentifier","src":"27110:39:19"},"nativeSrc":"27110:68:19","nodeType":"YulFunctionCall","src":"27110:68:19"},"nativeSrc":"27110:68:19","nodeType":"YulExpressionStatement","src":"27110:68:19"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"27232:6:19","nodeType":"YulIdentifier","src":"27232:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"27245:9:19","nodeType":"YulIdentifier","src":"27245:9:19"},{"kind":"number","nativeSrc":"27256:2:19","nodeType":"YulLiteral","src":"27256:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27241:3:19","nodeType":"YulIdentifier","src":"27241:3:19"},"nativeSrc":"27241:18:19","nodeType":"YulFunctionCall","src":"27241:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27188:43:19","nodeType":"YulIdentifier","src":"27188:43:19"},"nativeSrc":"27188:72:19","nodeType":"YulFunctionCall","src":"27188:72:19"},"nativeSrc":"27188:72:19","nodeType":"YulExpressionStatement","src":"27188:72:19"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"27314:6:19","nodeType":"YulIdentifier","src":"27314:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"27327:9:19","nodeType":"YulIdentifier","src":"27327:9:19"},{"kind":"number","nativeSrc":"27338:2:19","nodeType":"YulLiteral","src":"27338:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27323:3:19","nodeType":"YulIdentifier","src":"27323:3:19"},"nativeSrc":"27323:18:19","nodeType":"YulFunctionCall","src":"27323:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27270:43:19","nodeType":"YulIdentifier","src":"27270:43:19"},"nativeSrc":"27270:72:19","nodeType":"YulFunctionCall","src":"27270:72:19"},"nativeSrc":"27270:72:19","nodeType":"YulExpressionStatement","src":"27270:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"26804:545:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26930:9:19","nodeType":"YulTypedName","src":"26930:9:19","type":""},{"name":"value3","nativeSrc":"26942:6:19","nodeType":"YulTypedName","src":"26942:6:19","type":""},{"name":"value2","nativeSrc":"26950:6:19","nodeType":"YulTypedName","src":"26950:6:19","type":""},{"name":"value1","nativeSrc":"26958:6:19","nodeType":"YulTypedName","src":"26958:6:19","type":""},{"name":"value0","nativeSrc":"26966:6:19","nodeType":"YulTypedName","src":"26966:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26977:4:19","nodeType":"YulTypedName","src":"26977:4:19","type":""}],"src":"26804:545:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$346(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$346(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$346(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$346(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$346(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$346(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$346(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid target address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100a05760003560e01c80639e5d4c49116100645780639e5d4c49146101b7578063affed0e0146101e7578063b553fe1e14610212578063bc197c811461023f578063d0679d341461027c578063f23a6e6114610298576100a7565b806301ffc9a7146100ac578063150b7a02146100e95780631626ba7e146101265780638447305a146101635780638da5cb5b1461018c576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f91565b6102d5565b6040516100e09190610fd9565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b91906110ed565b61033d565b60405161011d9190611184565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190611316565b610352565b60405161015a9190611184565b60405180910390f35b34801561016f57600080fd5b5061018a600480360381019061018591906113b0565b61038e565b005b34801561019857600080fd5b506101a16105e0565b6040516101ae9190611412565b60405180910390f35b6101d160048036038101906101cc919061142d565b6106f1565b6040516101de9190611520565b60405180910390f35b3480156101f357600080fd5b506101fc61089a565b6040516102099190611551565b60405180910390f35b34801561021e57600080fd5b506102276108a4565b6040516102369392919061156c565b60405180910390f35b34801561024b57600080fd5b50610266600480360381019061026191906115f9565b6108fa565b6040516102739190611184565b60405180910390f35b61029660048036038101906102919190611713565b610912565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611753565b610aac565b6040516102cc9190611184565b60405180910390f35b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600063150b7a0260e01b905095945050505050565b6000806103676103606105e0565b8585610ac2565b9050801561037f57631626ba7e60e01b915050610388565b600060e01b9150505b92915050565b610396610b71565b61039e6105e0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104029061184a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361047a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610471906118b6565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b59190611412565b602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f691906118eb565b90508281101561053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290611964565b60405180910390fd5b6001600081548092919061054e906119b3565b91905055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b815260040161058e9291906119fb565b6020604051808303816000875af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190611a50565b50506105db610bb7565b505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663b553fe1e6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190611a92565b92509250925046831461066e57600093505050506106ee565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016106a79190611551565b602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190611ae5565b93505050505b90565b60606106fb610b71565b6107036105e0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610770576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107679061184a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d6906118b6565b60405180910390fd5b600160008154809291906107f2906119b3565b919050555060008573ffffffffffffffffffffffffffffffffffffffff16856107d05a61081f9190611b12565b908686604051610830929190611b76565b600060405180830381858888f193505050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b5080935081925050508061088957815160208301fd5b50610892610bb7565b949350505050565b6000600154905090565b6000806000803073ffffffffffffffffffffffffffffffffffffffff163b90506108db306060836108d59190611b12565b83610bc1565b8060200190518101906108ee9190611ba4565b93509350935050909192565b600063bc197c8160e01b905098975050505050505050565b61091a610b71565b6109226105e0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109869061184a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f5906118b6565b60405180910390fd5b80471015610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890611964565b60405180910390fd5b60016000815480929190610a54906119b3565b91905055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a9f573d6000803e3d6000fd5b50610aa8610bb7565b5050565b600063f23a6e6160e01b90509695505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b03610b5c57600080610aef8585610ca6565b509150915060006003811115610b0857610b07611bf7565b5b816003811115610b1b57610b1a611bf7565b5b148015610b5357508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92505050610b6a565b610b67848484610d02565b90505b9392505050565b600260005403610bad576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b60606000610bce85610e26565b905060008103610bf05760405180602001604052806000815250915050610c9f565b80841115610c105760405180602001604052806000815250915050610c9f565b83831015610c59578084846040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600401610c5093929190611c26565b60405180910390fd5b60008484039050600085830390506000828210610c765782610c78565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b60008060006041845103610ceb5760008060006020870151925060408701519150606087015160001a9050610cdd88828585610e31565b955095509550505050610cfb565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610d31929190611c6c565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610d839190611ccd565b600060405180830381855afa9150503d8060008114610dbe576040519150601f19603f3d011682016040523d82523d6000602084013e610dc3565b606091505b5091509150818015610dd757506020815110155b8015610e1b5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610e199190611cf9565b145b925050509392505050565b6000813b9050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610e71576000600385925092509250610f1b565b600060018888888860405160008152602001604052604051610e969493929190611d42565b6020604051602081039080840390855afa158015610eb8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f0c57600060016000801b93509350935050610f1b565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f6e81610f39565b8114610f7957600080fd5b50565b600081359050610f8b81610f65565b92915050565b600060208284031215610fa757610fa6610f2f565b5b6000610fb584828501610f7c565b91505092915050565b60008115159050919050565b610fd381610fbe565b82525050565b6000602082019050610fee6000830184610fca565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101f82610ff4565b9050919050565b61102f81611014565b811461103a57600080fd5b50565b60008135905061104c81611026565b92915050565b6000819050919050565b61106581611052565b811461107057600080fd5b50565b6000813590506110828161105c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126110ad576110ac611088565b5b8235905067ffffffffffffffff8111156110ca576110c961108d565b5b6020830191508360018202830111156110e6576110e5611092565b5b9250929050565b60008060008060006080868803121561110957611108610f2f565b5b60006111178882890161103d565b95505060206111288882890161103d565b945050604061113988828901611073565b935050606086013567ffffffffffffffff81111561115a57611159610f34565b5b61116688828901611097565b92509250509295509295909350565b61117e81610f39565b82525050565b60006020820190506111996000830184611175565b92915050565b6000819050919050565b6111b28161119f565b81146111bd57600080fd5b50565b6000813590506111cf816111a9565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611223826111da565b810181811067ffffffffffffffff82111715611242576112416111eb565b5b80604052505050565b6000611255610f25565b9050611261828261121a565b919050565b600067ffffffffffffffff821115611281576112806111eb565b5b61128a826111da565b9050602081019050919050565b82818337600083830152505050565b60006112b96112b484611266565b61124b565b9050828152602081018484840111156112d5576112d46111d5565b5b6112e0848285611297565b509392505050565b600082601f8301126112fd576112fc611088565b5b813561130d8482602086016112a6565b91505092915050565b6000806040838503121561132d5761132c610f2f565b5b600061133b858286016111c0565b925050602083013567ffffffffffffffff81111561135c5761135b610f34565b5b611368858286016112e8565b9150509250929050565b600061137d82611014565b9050919050565b61138d81611372565b811461139857600080fd5b50565b6000813590506113aa81611384565b92915050565b6000806000606084860312156113c9576113c8610f2f565b5b60006113d78682870161103d565b93505060206113e886828701611073565b92505060406113f98682870161139b565b9150509250925092565b61140c81611014565b82525050565b60006020820190506114276000830184611403565b92915050565b6000806000806060858703121561144757611446610f2f565b5b60006114558782880161103d565b945050602061146687828801611073565b935050604085013567ffffffffffffffff81111561148757611486610f34565b5b61149387828801611097565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b838110156114db5780820151818401526020810190506114c0565b60008484015250505050565b60006114f2826114a1565b6114fc81856114ac565b935061150c8185602086016114bd565b611515816111da565b840191505092915050565b6000602082019050818103600083015261153a81846114e7565b905092915050565b61154b81611052565b82525050565b60006020820190506115666000830184611542565b92915050565b60006060820190506115816000830186611542565b61158e6020830185611403565b61159b6040830184611542565b949350505050565b60008083601f8401126115b9576115b8611088565b5b8235905067ffffffffffffffff8111156115d6576115d561108d565b5b6020830191508360208202830111156115f2576115f1611092565b5b9250929050565b60008060008060008060008060a0898b03121561161957611618610f2f565b5b60006116278b828c0161103d565b98505060206116388b828c0161103d565b975050604089013567ffffffffffffffff81111561165957611658610f34565b5b6116658b828c016115a3565b9650965050606089013567ffffffffffffffff81111561168857611687610f34565b5b6116948b828c016115a3565b9450945050608089013567ffffffffffffffff8111156116b7576116b6610f34565b5b6116c38b828c01611097565b92509250509295985092959890939650565b60006116e082610ff4565b9050919050565b6116f0816116d5565b81146116fb57600080fd5b50565b60008135905061170d816116e7565b92915050565b6000806040838503121561172a57611729610f2f565b5b6000611738858286016116fe565b925050602061174985828601611073565b9150509250929050565b60008060008060008060a087890312156117705761176f610f2f565b5b600061177e89828a0161103d565b965050602061178f89828a0161103d565b95505060406117a089828a01611073565b94505060606117b189828a01611073565b935050608087013567ffffffffffffffff8111156117d2576117d1610f34565b5b6117de89828a01611097565b92509250509295509295509295565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000611834600f836117ed565b915061183f826117fe565b602082019050919050565b6000602082019050818103600083015261186381611827565b9050919050565b7f496e76616c696420746172676574206164647265737300000000000000000000600082015250565b60006118a06016836117ed565b91506118ab8261186a565b602082019050919050565b600060208201905081810360008301526118cf81611893565b9050919050565b6000815190506118e58161105c565b92915050565b60006020828403121561190157611900610f2f565b5b600061190f848285016118d6565b91505092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b600061194e6012836117ed565b915061195982611918565b602082019050919050565b6000602082019050818103600083015261197d81611941565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119be82611052565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119f0576119ef611984565b5b600182019050919050565b6000604082019050611a106000830185611403565b611a1d6020830184611542565b9392505050565b611a2d81610fbe565b8114611a3857600080fd5b50565b600081519050611a4a81611a24565b92915050565b600060208284031215611a6657611a65610f2f565b5b6000611a7484828501611a3b565b91505092915050565b600081519050611a8c81611026565b92915050565b600080600060608486031215611aab57611aaa610f2f565b5b6000611ab9868287016118d6565b9350506020611aca86828701611a7d565b9250506040611adb868287016118d6565b9150509250925092565b600060208284031215611afb57611afa610f2f565b5b6000611b0984828501611a7d565b91505092915050565b6000611b1d82611052565b9150611b2883611052565b9250828203905081811115611b4057611b3f611984565b5b92915050565b600081905092915050565b6000611b5d8385611b46565b9350611b6a838584611297565b82840190509392505050565b6000611b83828486611b51565b91508190509392505050565b600081519050611b9e816116e7565b92915050565b600080600060608486031215611bbd57611bbc610f2f565b5b6000611bcb868287016118d6565b9350506020611bdc86828701611b8f565b9250506040611bed868287016118d6565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000606082019050611c3b6000830186611542565b611c486020830185611542565b611c556040830184611542565b949350505050565b611c668161119f565b82525050565b6000604082019050611c816000830185611c5d565b8181036020830152611c9381846114e7565b90509392505050565b6000611ca7826114a1565b611cb18185611b46565b9350611cc18185602086016114bd565b80840191505092915050565b6000611cd98284611c9c565b915081905092915050565b600081519050611cf3816111a9565b92915050565b600060208284031215611d0f57611d0e610f2f565b5b6000611d1d84828501611ce4565b91505092915050565b600060ff82169050919050565b611d3c81611d26565b82525050565b6000608082019050611d576000830187611c5d565b611d646020830186611d33565b611d716040830185611c5d565b611d7e6060830184611c5d565b9594505050505056fea264697066735822122005602eae0f087dc72eed6b5d9101f8249c05ceec570f2ba060ae3399520100b364736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x298 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x8447305A EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x367 PUSH2 0x360 PUSH2 0x5E0 JUMP JUMPDEST DUP6 DUP6 PUSH2 0xAC2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x37F JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 SHL SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x396 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x39E PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x54E SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST POP POP PUSH2 0x5DB PUSH2 0xBB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x631 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x66E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x6EE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FB PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x703 PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x7D0 GAS PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x830 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x873 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x889 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP PUSH2 0x892 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x8DB ADDRESS PUSH1 0x60 DUP4 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST DUP4 PUSH2 0xBC1 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x91A PUSH2 0xB71 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x5E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA54 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAA8 PUSH2 0xBB7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 PUSH2 0xAEF DUP6 DUP6 PUSH2 0xCA6 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xB53 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xB6A JUMP JUMPDEST PUSH2 0xB67 DUP5 DUP5 DUP5 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xBCE DUP6 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xC9F JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xC9F JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xC76 JUMPI DUP3 PUSH2 0xC78 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xCDD DUP9 DUP3 DUP6 DUP6 PUSH2 0xE31 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD31 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDD7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE1B JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xF1B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH2 0xF39 JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8B DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP5 DUP3 DUP6 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0xFBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP2 EQ PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104C DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP2 EQ PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1082 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AD JUMPI PUSH2 0x10AC PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x108D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x10E5 PUSH2 0x1092 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH2 0x1108 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP9 DUP3 DUP10 ADD PUSH2 0x103D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1128 DUP9 DUP3 DUP10 ADD PUSH2 0x103D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1139 DUP9 DUP3 DUP10 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1166 DUP9 DUP3 DUP10 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0xF39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1199 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B2 DUP2 PUSH2 0x119F JUMP JUMPDEST DUP2 EQ PUSH2 0x11BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CF DUP2 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1223 DUP3 PUSH2 0x11DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x1261 DUP3 DUP3 PUSH2 0x121A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST PUSH2 0x128A DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B9 PUSH2 0x12B4 DUP5 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x11D5 JUMP JUMPDEST JUMPDEST PUSH2 0x12E0 DUP5 DUP3 DUP6 PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12FD JUMPI PUSH2 0x12FC PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x130D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP6 DUP3 DUP7 ADD PUSH2 0x11C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1368 DUP6 DUP3 DUP7 ADD PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137D DUP3 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x1372 JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP7 DUP3 DUP8 ADD PUSH2 0x103D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13F9 DUP7 DUP3 DUP8 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x1014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP8 DUP3 DUP9 ADD PUSH2 0x103D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1466 DUP8 DUP3 DUP9 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1486 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1493 DUP8 DUP3 DUP9 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x14FC DUP2 DUP6 PUSH2 0x14AC JUMP JUMPDEST SWAP4 POP PUSH2 0x150C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 DUP5 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1581 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x158E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x159B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B9 JUMPI PUSH2 0x15B8 PUSH2 0x1088 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x108D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x1092 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP12 DUP3 DUP13 ADD PUSH2 0x103D JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1638 DUP12 DUP3 DUP13 ADD PUSH2 0x103D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1665 DUP12 DUP3 DUP13 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x1694 DUP12 DUP3 DUP13 ADD PUSH2 0x15A3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x16C3 DUP12 DUP3 DUP13 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E0 DUP3 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F0 DUP2 PUSH2 0x16D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x16FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170D DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x172A JUMPI PUSH2 0x1729 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1738 DUP6 DUP3 DUP7 ADD PUSH2 0x16FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1749 DUP6 DUP3 DUP7 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177E DUP10 DUP3 DUP11 ADD PUSH2 0x103D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x178F DUP10 DUP3 DUP11 ADD PUSH2 0x103D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17A0 DUP10 DUP3 DUP11 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x17B1 DUP10 DUP3 DUP11 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0xF34 JUMP JUMPDEST JUMPDEST PUSH2 0x17DE DUP10 DUP3 DUP11 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1834 PUSH1 0xF DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x183F DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1863 DUP2 PUSH2 0x1827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A0 PUSH1 0x16 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x18AB DUP3 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CF DUP2 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18E5 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP5 DUP3 DUP6 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E PUSH1 0x12 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197D DUP2 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19BE DUP3 PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19F0 JUMPI PUSH2 0x19EF PUSH2 0x1984 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A10 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x1A1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2D DUP2 PUSH2 0xFBE JUMP JUMPDEST DUP2 EQ PUSH2 0x1A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A4A DUP2 PUSH2 0x1A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A74 DUP5 DUP3 DUP6 ADD PUSH2 0x1A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8C DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB9 DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ACA DUP7 DUP3 DUP8 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ADB DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH2 0x1AFA PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP5 DUP3 DUP6 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP3 PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B28 DUP4 PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B3F PUSH2 0x1984 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP4 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6A DUP4 DUP6 DUP5 PUSH2 0x1297 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B83 DUP3 DUP5 DUP7 PUSH2 0x1B51 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9E DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDC DUP7 DUP3 DUP8 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BED DUP7 DUP3 DUP8 ADD PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C3B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1C48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1C55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C66 DUP2 PUSH2 0x119F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C93 DUP2 DUP5 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1CB1 DUP2 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 DUP5 PUSH2 0x1C9C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF3 DUP2 PUSH2 0x11A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3C DUP2 PUSH2 0x1D26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D57 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1D64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x1D71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C5D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH1 0x2E 0xAE 0xF ADDMOD PUSH30 0xC72EED6B5D9101F8249C05CEEC570F2BA060AE3399520100B364736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"847:4028:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3357:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3498:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4338:399;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2248:450;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3080:269;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1320:553;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4745:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2706:366;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4028:302;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3752:268;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3357:133;3425:4;3449:20;:33;3470:11;3449:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3442:40;;3357:133;;;:::o;3498:246::-;3669:6;3695:41;;;3688:48;;3498:246;;;;;;;:::o;4338:399::-;4450:17;4480:12;4495:112;4546:7;:5;:7::i;:::-;4568:4;4587:9;4495:36;:112::i;:::-;4480:127;;4624:7;4620:81;;;4655:34;;;4648:41;;;;;4620:81;4727:1;4720:9;;4713:16;;;4338:399;;;;;:::o;2248:450::-;2500:21:12;:19;:21::i;:::-;2407:7:16::1;:5;:7::i;:::-;2393:21;;:10;:21;;;2385:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2467:1;2453:16;;:2;:16;;::::0;2445:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2509:15;2527:13;:23;;;2559:4;2527:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2509:56;;2595:6;2584:7;:17;;2576:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2637:6;;:8;;;;;;;;;:::i;:::-;;;;;;2656:13;:22;;;2679:2;2683:6;2656:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2374:324;2542:20:12::0;:18;:20::i;:::-;2248:450:16;;;:::o;3080:269::-;3118:7;3139:15;3156:21;3179:15;3198:4;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3138:88;;;;;;3252:13;3241:7;:24;3237:47;;3282:1;3267:17;;;;;;;3237:47;3310:13;3302:30;;;3333:7;3302:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3295:46;;;;;3080:269;;:::o;1320:553::-;1462:19;2500:21:12;:19;:21::i;:::-;1516:7:16::1;:5;:7::i;:::-;1502:21;;:10;:21;;;1494:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1576:1;1562:16;;:2;:16;;::::0;1554:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1618:6;;:8;;;;;;;;;:::i;:::-;;;;;;1639:12;1682:2;:7;;1697:5;1721:4;1709:9;:16;;;;:::i;:::-;1682:50;1727:4;;1682:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:70;;;;;;;;1750:7;1745:121;;1832:6;1826:13;1821:2;1813:6;1809:15;1802:38;1745:121;1483:390;2542:20:12::0;:18;:20::i;:::-;1320:553:16;;;;;;:::o;4745:90::-;4794:7;4821:6;;4814:13;;4745:90;:::o;2706:366::-;2775:15;2792:21;2815:15;2848:14;2873:4;2865:25;;;2848:42;;2950:53;2974:4;2990;2981:6;:13;;;;:::i;:::-;2996:6;2950:15;:53::i;:::-;2921:143;;;;;;;;;;;;:::i;:::-;2901:163;;;;;;;2706:366;;;:::o;4028:302::-;4248:6;4274:48;;;4267:55;;4028:302;;;;;;;;;;:::o;1881:359::-;2500:21:12;:19;:21::i;:::-;2019:7:16::1;:5;:7::i;:::-;2005:21;;:10;:21;;;1997:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:1;2065:16;;:2;:16;;::::0;2057:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2152:6;2127:21;:31;;2119:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2194:6;;:8;;;;;;;;;:::i;:::-;;;;;;2213:2;:11;;:19;2225:6;2213:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2542:20:12::0;:18;:20::i;:::-;1881:359:16;;:::o;3752:268::-;3943:6;3969:43;;;3962:50;;3752:268;;;;;;;;:::o;1041:429:14:-;1147:4;1189:1;1167:6;:18;;;:23;1163:301;;1207:17;1226:22;1254:33;1271:4;1277:9;1254:16;:33::i;:::-;1206:81;;;;;1315:26;1308:33;;;;;;;;:::i;:::-;;:3;:33;;;;;;;;:::i;:::-;;;:56;;;;;1358:6;1345:19;;:9;:19;;;1308:56;1301:63;;;;;;1163:301;1402:51;1429:6;1437:4;1443:9;1402:26;:51::i;:::-;1395:58;;1041:429;;;;;;:::o;2575:307:12:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;2888:208::-;1857:1;3068:7;:21;;;;2888:208::o;1794:946:17:-;1878:18;1904:13;1920:15;1929:5;1920:8;:15::i;:::-;1904:31;;1954:1;1945:5;:10;1941:32;;1964:9;;;;;;;;;;;;1957:16;;;;;1941:32;1993:5;1984:6;:14;1980:36;;;2007:9;;;;;;;;;;;;2000:16;;;;;1980:36;2033:6;2026:4;:13;2022:65;;;2067:5;2074:6;2082:4;2048:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;2022:65;2113:15;2138:6;2131:4;:13;2113:31;;2152:15;2178:6;2170:5;:14;2152:32;;2193:12;2218:7;2208;:17;:37;;2238:7;2208:37;;;2228:7;2208:37;2193:52;;2414:4;2408:11;2399:20;;2534:4;2530:9;2523:4;2516;2510;2506:15;2502:26;2498:42;2491:5;2487:54;2481:4;2474:68;2599:4;2592:5;2585:19;2717:4;2709:6;2702:4;2695:5;2691:16;2684:5;2672:50;2263:467;;;1898:842;1794:946;;;;;;:::o;2129:778:13:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;1877:458:14:-;2020:4;2037:12;2051:19;2074:6;:17;;2148:4;2154:9;2105:60;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:139;;;;2193:7;:42;;;;;2233:2;2216:6;:13;:19;;2193:42;:134;;;;;2292:34;;;2284:43;;;2262:6;2251:29;;;;;;;;;;;;:::i;:::-;:76;2193:134;2185:143;;;;1877:458;;;;;:::o;1262:119:17:-;1318:12;1369:5;1357:18;1349:26;;1262:119;;;:::o;5203:1551:13:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:117;2736:1;2733;2726:12;2763:552;2820:8;2830:6;2880:3;2873:4;2865:6;2861:17;2857:27;2847:122;;2888:79;;:::i;:::-;2847:122;3001:6;2988:20;2978:30;;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3167:4;3159:6;3155:17;3143:29;;3221:3;3213:4;3205:6;3201:17;3191:8;3187:32;3184:41;3181:128;;;3228:79;;:::i;:::-;3181:128;2763:552;;;;;:::o;3321:963::-;3418:6;3426;3434;3442;3450;3499:3;3487:9;3478:7;3474:23;3470:33;3467:120;;;3506:79;;:::i;:::-;3467:120;3626:1;3651:53;3696:7;3687:6;3676:9;3672:22;3651:53;:::i;:::-;3641:63;;3597:117;3753:2;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3724:118;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;4037:2;4026:9;4022:18;4009:32;4068:18;4060:6;4057:30;4054:117;;;4090:79;;:::i;:::-;4054:117;4203:64;4259:7;4250:6;4239:9;4235:22;4203:64;:::i;:::-;4185:82;;;;3980:297;3321:963;;;;;;;;:::o;4290:115::-;4375:23;4392:5;4375:23;:::i;:::-;4370:3;4363:36;4290:115;;:::o;4411:218::-;4502:4;4540:2;4529:9;4525:18;4517:26;;4553:69;4619:1;4608:9;4604:17;4595:6;4553:69;:::i;:::-;4411:218;;;;:::o;4635:77::-;4672:7;4701:5;4690:16;;4635:77;;;:::o;4718:122::-;4791:24;4809:5;4791:24;:::i;:::-;4784:5;4781:35;4771:63;;4830:1;4827;4820:12;4771:63;4718:122;:::o;4846:139::-;4892:5;4930:6;4917:20;4908:29;;4946:33;4973:5;4946:33;:::i;:::-;4846:139;;;;:::o;4991:117::-;5100:1;5097;5090:12;5114:102;5155:6;5206:2;5202:7;5197:2;5190:5;5186:14;5182:28;5172:38;;5114:102;;;:::o;5222:180::-;5270:77;5267:1;5260:88;5367:4;5364:1;5357:15;5391:4;5388:1;5381:15;5408:281;5491:27;5513:4;5491:27;:::i;:::-;5483:6;5479:40;5621:6;5609:10;5606:22;5585:18;5573:10;5570:34;5567:62;5564:88;;;5632:18;;:::i;:::-;5564:88;5672:10;5668:2;5661:22;5451:238;5408:281;;:::o;5695:129::-;5729:6;5756:20;;:::i;:::-;5746:30;;5785:33;5813:4;5805:6;5785:33;:::i;:::-;5695:129;;;:::o;5830:307::-;5891:4;5981:18;5973:6;5970:30;5967:56;;;6003:18;;:::i;:::-;5967:56;6041:29;6063:6;6041:29;:::i;:::-;6033:37;;6125:4;6119;6115:15;6107:23;;5830:307;;;:::o;6143:148::-;6241:6;6236:3;6231;6218:30;6282:1;6273:6;6268:3;6264:16;6257:27;6143:148;;;:::o;6297:423::-;6374:5;6399:65;6415:48;6456:6;6415:48;:::i;:::-;6399:65;:::i;:::-;6390:74;;6487:6;6480:5;6473:21;6525:4;6518:5;6514:16;6563:3;6554:6;6549:3;6545:16;6542:25;6539:112;;;6570:79;;:::i;:::-;6539:112;6660:54;6707:6;6702:3;6697;6660:54;:::i;:::-;6380:340;6297:423;;;;;:::o;6739:338::-;6794:5;6843:3;6836:4;6828:6;6824:17;6820:27;6810:122;;6851:79;;:::i;:::-;6810:122;6968:6;6955:20;6993:78;7067:3;7059:6;7052:4;7044:6;7040:17;6993:78;:::i;:::-;6984:87;;6800:277;6739:338;;;;:::o;7083:652::-;7160:6;7168;7217:2;7205:9;7196:7;7192:23;7188:32;7185:119;;;7223:79;;:::i;:::-;7185:119;7343:1;7368:53;7413:7;7404:6;7393:9;7389:22;7368:53;:::i;:::-;7358:63;;7314:117;7498:2;7487:9;7483:18;7470:32;7529:18;7521:6;7518:30;7515:117;;;7551:79;;:::i;:::-;7515:117;7656:62;7710:7;7701:6;7690:9;7686:22;7656:62;:::i;:::-;7646:72;;7441:287;7083:652;;;;;:::o;7741:110::-;7792:7;7821:24;7839:5;7821:24;:::i;:::-;7810:35;;7741:110;;;:::o;7857:150::-;7944:38;7976:5;7944:38;:::i;:::-;7937:5;7934:49;7924:77;;7997:1;7994;7987:12;7924:77;7857:150;:::o;8013:167::-;8073:5;8111:6;8098:20;8089:29;;8127:47;8168:5;8127:47;:::i;:::-;8013:167;;;;:::o;8186:647::-;8277:6;8285;8293;8342:2;8330:9;8321:7;8317:23;8313:32;8310:119;;;8348:79;;:::i;:::-;8310:119;8468:1;8493:53;8538:7;8529:6;8518:9;8514:22;8493:53;:::i;:::-;8483:63;;8439:117;8595:2;8621:53;8666:7;8657:6;8646:9;8642:22;8621:53;:::i;:::-;8611:63;;8566:118;8723:2;8749:67;8808:7;8799:6;8788:9;8784:22;8749:67;:::i;:::-;8739:77;;8694:132;8186:647;;;;;:::o;8839:118::-;8926:24;8944:5;8926:24;:::i;:::-;8921:3;8914:37;8839:118;;:::o;8963:222::-;9056:4;9094:2;9083:9;9079:18;9071:26;;9107:71;9175:1;9164:9;9160:17;9151:6;9107:71;:::i;:::-;8963:222;;;;:::o;9191:817::-;9279:6;9287;9295;9303;9352:2;9340:9;9331:7;9327:23;9323:32;9320:119;;;9358:79;;:::i;:::-;9320:119;9478:1;9503:53;9548:7;9539:6;9528:9;9524:22;9503:53;:::i;:::-;9493:63;;9449:117;9605:2;9631:53;9676:7;9667:6;9656:9;9652:22;9631:53;:::i;:::-;9621:63;;9576:118;9761:2;9750:9;9746:18;9733:32;9792:18;9784:6;9781:30;9778:117;;;9814:79;;:::i;:::-;9778:117;9927:64;9983:7;9974:6;9963:9;9959:22;9927:64;:::i;:::-;9909:82;;;;9704:297;9191:817;;;;;;;:::o;10014:98::-;10065:6;10099:5;10093:12;10083:22;;10014:98;;;:::o;10118:168::-;10201:11;10235:6;10230:3;10223:19;10275:4;10270:3;10266:14;10251:29;;10118:168;;;;:::o;10292:248::-;10374:1;10384:113;10398:6;10395:1;10392:13;10384:113;;;10483:1;10478:3;10474:11;10468:18;10464:1;10459:3;10455:11;10448:39;10420:2;10417:1;10413:10;10408:15;;10384:113;;;10531:1;10522:6;10517:3;10513:16;10506:27;10354:186;10292:248;;;:::o;10546:373::-;10632:3;10660:38;10692:5;10660:38;:::i;:::-;10714:70;10777:6;10772:3;10714:70;:::i;:::-;10707:77;;10793:65;10851:6;10846:3;10839:4;10832:5;10828:16;10793:65;:::i;:::-;10883:29;10905:6;10883:29;:::i;:::-;10878:3;10874:39;10867:46;;10636:283;10546:373;;;;:::o;10925:309::-;11036:4;11074:2;11063:9;11059:18;11051:26;;11123:9;11117:4;11113:20;11109:1;11098:9;11094:17;11087:47;11151:76;11222:4;11213:6;11151:76;:::i;:::-;11143:84;;10925:309;;;;:::o;11240:118::-;11327:24;11345:5;11327:24;:::i;:::-;11322:3;11315:37;11240:118;;:::o;11364:222::-;11457:4;11495:2;11484:9;11480:18;11472:26;;11508:71;11576:1;11565:9;11561:17;11552:6;11508:71;:::i;:::-;11364:222;;;;:::o;11592:442::-;11741:4;11779:2;11768:9;11764:18;11756:26;;11792:71;11860:1;11849:9;11845:17;11836:6;11792:71;:::i;:::-;11873:72;11941:2;11930:9;11926:18;11917:6;11873:72;:::i;:::-;11955;12023:2;12012:9;12008:18;11999:6;11955:72;:::i;:::-;11592:442;;;;;;:::o;12057:568::-;12130:8;12140:6;12190:3;12183:4;12175:6;12171:17;12167:27;12157:122;;12198:79;;:::i;:::-;12157:122;12311:6;12298:20;12288:30;;12341:18;12333:6;12330:30;12327:117;;;12363:79;;:::i;:::-;12327:117;12477:4;12469:6;12465:17;12453:29;;12531:3;12523:4;12515:6;12511:17;12501:8;12497:32;12494:41;12491:128;;;12538:79;;:::i;:::-;12491:128;12057:568;;;;;:::o;12631:1569::-;12791:6;12799;12807;12815;12823;12831;12839;12847;12896:3;12884:9;12875:7;12871:23;12867:33;12864:120;;;12903:79;;:::i;:::-;12864:120;13023:1;13048:53;13093:7;13084:6;13073:9;13069:22;13048:53;:::i;:::-;13038:63;;12994:117;13150:2;13176:53;13221:7;13212:6;13201:9;13197:22;13176:53;:::i;:::-;13166:63;;13121:118;13306:2;13295:9;13291:18;13278:32;13337:18;13329:6;13326:30;13323:117;;;13359:79;;:::i;:::-;13323:117;13472:80;13544:7;13535:6;13524:9;13520:22;13472:80;:::i;:::-;13454:98;;;;13249:313;13629:2;13618:9;13614:18;13601:32;13660:18;13652:6;13649:30;13646:117;;;13682:79;;:::i;:::-;13646:117;13795:80;13867:7;13858:6;13847:9;13843:22;13795:80;:::i;:::-;13777:98;;;;13572:313;13952:3;13941:9;13937:19;13924:33;13984:18;13976:6;13973:30;13970:117;;;14006:79;;:::i;:::-;13970:117;14119:64;14175:7;14166:6;14155:9;14151:22;14119:64;:::i;:::-;14101:82;;;;13895:298;12631:1569;;;;;;;;;;;:::o;14206:104::-;14251:7;14280:24;14298:5;14280:24;:::i;:::-;14269:35;;14206:104;;;:::o;14316:138::-;14397:32;14423:5;14397:32;:::i;:::-;14390:5;14387:43;14377:71;;14444:1;14441;14434:12;14377:71;14316:138;:::o;14460:155::-;14514:5;14552:6;14539:20;14530:29;;14568:41;14603:5;14568:41;:::i;:::-;14460:155;;;;:::o;14621:490::-;14697:6;14705;14754:2;14742:9;14733:7;14729:23;14725:32;14722:119;;;14760:79;;:::i;:::-;14722:119;14880:1;14905:61;14958:7;14949:6;14938:9;14934:22;14905:61;:::i;:::-;14895:71;;14851:125;15015:2;15041:53;15086:7;15077:6;15066:9;15062:22;15041:53;:::i;:::-;15031:63;;14986:118;14621:490;;;;;:::o;15117:1109::-;15223:6;15231;15239;15247;15255;15263;15312:3;15300:9;15291:7;15287:23;15283:33;15280:120;;;15319:79;;:::i;:::-;15280:120;15439:1;15464:53;15509:7;15500:6;15489:9;15485:22;15464:53;:::i;:::-;15454:63;;15410:117;15566:2;15592:53;15637:7;15628:6;15617:9;15613:22;15592:53;:::i;:::-;15582:63;;15537:118;15694:2;15720:53;15765:7;15756:6;15745:9;15741:22;15720:53;:::i;:::-;15710:63;;15665:118;15822:2;15848:53;15893:7;15884:6;15873:9;15869:22;15848:53;:::i;:::-;15838:63;;15793:118;15978:3;15967:9;15963:19;15950:33;16010:18;16002:6;15999:30;15996:117;;;16032:79;;:::i;:::-;15996:117;16145:64;16201:7;16192:6;16181:9;16177:22;16145:64;:::i;:::-;16127:82;;;;15921:298;15117:1109;;;;;;;;:::o;16232:169::-;16316:11;16350:6;16345:3;16338:19;16390:4;16385:3;16381:14;16366:29;;16232:169;;;;:::o;16407:165::-;16547:17;16543:1;16535:6;16531:14;16524:41;16407:165;:::o;16578:366::-;16720:3;16741:67;16805:2;16800:3;16741:67;:::i;:::-;16734:74;;16817:93;16906:3;16817:93;:::i;:::-;16935:2;16930:3;16926:12;16919:19;;16578:366;;;:::o;16950:419::-;17116:4;17154:2;17143:9;17139:18;17131:26;;17203:9;17197:4;17193:20;17189:1;17178:9;17174:17;17167:47;17231:131;17357:4;17231:131;:::i;:::-;17223:139;;16950:419;;;:::o;17375:172::-;17515:24;17511:1;17503:6;17499:14;17492:48;17375:172;:::o;17553:366::-;17695:3;17716:67;17780:2;17775:3;17716:67;:::i;:::-;17709:74;;17792:93;17881:3;17792:93;:::i;:::-;17910:2;17905:3;17901:12;17894:19;;17553:366;;;:::o;17925:419::-;18091:4;18129:2;18118:9;18114:18;18106:26;;18178:9;18172:4;18168:20;18164:1;18153:9;18149:17;18142:47;18206:131;18332:4;18206:131;:::i;:::-;18198:139;;17925:419;;;:::o;18350:143::-;18407:5;18438:6;18432:13;18423:22;;18454:33;18481:5;18454:33;:::i;:::-;18350:143;;;;:::o;18499:351::-;18569:6;18618:2;18606:9;18597:7;18593:23;18589:32;18586:119;;;18624:79;;:::i;:::-;18586:119;18744:1;18769:64;18825:7;18816:6;18805:9;18801:22;18769:64;:::i;:::-;18759:74;;18715:128;18499:351;;;;:::o;18856:168::-;18996:20;18992:1;18984:6;18980:14;18973:44;18856:168;:::o;19030:366::-;19172:3;19193:67;19257:2;19252:3;19193:67;:::i;:::-;19186:74;;19269:93;19358:3;19269:93;:::i;:::-;19387:2;19382:3;19378:12;19371:19;;19030:366;;;:::o;19402:419::-;19568:4;19606:2;19595:9;19591:18;19583:26;;19655:9;19649:4;19645:20;19641:1;19630:9;19626:17;19619:47;19683:131;19809:4;19683:131;:::i;:::-;19675:139;;19402:419;;;:::o;19827:180::-;19875:77;19872:1;19865:88;19972:4;19969:1;19962:15;19996:4;19993:1;19986:15;20013:233;20052:3;20075:24;20093:5;20075:24;:::i;:::-;20066:33;;20121:66;20114:5;20111:77;20108:103;;20191:18;;:::i;:::-;20108:103;20238:1;20231:5;20227:13;20220:20;;20013:233;;;:::o;20252:332::-;20373:4;20411:2;20400:9;20396:18;20388:26;;20424:71;20492:1;20481:9;20477:17;20468:6;20424:71;:::i;:::-;20505:72;20573:2;20562:9;20558:18;20549:6;20505:72;:::i;:::-;20252:332;;;;;:::o;20590:116::-;20660:21;20675:5;20660:21;:::i;:::-;20653:5;20650:32;20640:60;;20696:1;20693;20686:12;20640:60;20590:116;:::o;20712:137::-;20766:5;20797:6;20791:13;20782:22;;20813:30;20837:5;20813:30;:::i;:::-;20712:137;;;;:::o;20855:345::-;20922:6;20971:2;20959:9;20950:7;20946:23;20942:32;20939:119;;;20977:79;;:::i;:::-;20939:119;21097:1;21122:61;21175:7;21166:6;21155:9;21151:22;21122:61;:::i;:::-;21112:71;;21068:125;20855:345;;;;:::o;21206:143::-;21263:5;21294:6;21288:13;21279:22;;21310:33;21337:5;21310:33;:::i;:::-;21206:143;;;;:::o;21355:663::-;21443:6;21451;21459;21508:2;21496:9;21487:7;21483:23;21479:32;21476:119;;;21514:79;;:::i;:::-;21476:119;21634:1;21659:64;21715:7;21706:6;21695:9;21691:22;21659:64;:::i;:::-;21649:74;;21605:128;21772:2;21798:64;21854:7;21845:6;21834:9;21830:22;21798:64;:::i;:::-;21788:74;;21743:129;21911:2;21937:64;21993:7;21984:6;21973:9;21969:22;21937:64;:::i;:::-;21927:74;;21882:129;21355:663;;;;;:::o;22024:351::-;22094:6;22143:2;22131:9;22122:7;22118:23;22114:32;22111:119;;;22149:79;;:::i;:::-;22111:119;22269:1;22294:64;22350:7;22341:6;22330:9;22326:22;22294:64;:::i;:::-;22284:74;;22240:128;22024:351;;;;:::o;22381:194::-;22421:4;22441:20;22459:1;22441:20;:::i;:::-;22436:25;;22475:20;22493:1;22475:20;:::i;:::-;22470:25;;22519:1;22516;22512:9;22504:17;;22543:1;22537:4;22534:11;22531:37;;;22548:18;;:::i;:::-;22531:37;22381:194;;;;:::o;22581:147::-;22682:11;22719:3;22704:18;;22581:147;;;;:::o;22756:327::-;22870:3;22891:88;22972:6;22967:3;22891:88;:::i;:::-;22884:95;;22989:56;23038:6;23033:3;23026:5;22989:56;:::i;:::-;23070:6;23065:3;23061:16;23054:23;;22756:327;;;;;:::o;23089:291::-;23229:3;23251:103;23350:3;23341:6;23333;23251:103;:::i;:::-;23244:110;;23371:3;23364:10;;23089:291;;;;;:::o;23386:159::-;23451:5;23482:6;23476:13;23467:22;;23498:41;23533:5;23498:41;:::i;:::-;23386:159;;;;:::o;23551:679::-;23647:6;23655;23663;23712:2;23700:9;23691:7;23687:23;23683:32;23680:119;;;23718:79;;:::i;:::-;23680:119;23838:1;23863:64;23919:7;23910:6;23899:9;23895:22;23863:64;:::i;:::-;23853:74;;23809:128;23976:2;24002:72;24066:7;24057:6;24046:9;24042:22;24002:72;:::i;:::-;23992:82;;23947:137;24123:2;24149:64;24205:7;24196:6;24185:9;24181:22;24149:64;:::i;:::-;24139:74;;24094:129;23551:679;;;;;:::o;24236:180::-;24284:77;24281:1;24274:88;24381:4;24378:1;24371:15;24405:4;24402:1;24395:15;24422:442;24571:4;24609:2;24598:9;24594:18;24586:26;;24622:71;24690:1;24679:9;24675:17;24666:6;24622:71;:::i;:::-;24703:72;24771:2;24760:9;24756:18;24747:6;24703:72;:::i;:::-;24785;24853:2;24842:9;24838:18;24829:6;24785:72;:::i;:::-;24422:442;;;;;;:::o;24870:118::-;24957:24;24975:5;24957:24;:::i;:::-;24952:3;24945:37;24870:118;;:::o;24994:419::-;25133:4;25171:2;25160:9;25156:18;25148:26;;25184:71;25252:1;25241:9;25237:17;25228:6;25184:71;:::i;:::-;25302:9;25296:4;25292:20;25287:2;25276:9;25272:18;25265:48;25330:76;25401:4;25392:6;25330:76;:::i;:::-;25322:84;;24994:419;;;;;:::o;25419:386::-;25523:3;25551:38;25583:5;25551:38;:::i;:::-;25605:88;25686:6;25681:3;25605:88;:::i;:::-;25598:95;;25702:65;25760:6;25755:3;25748:4;25741:5;25737:16;25702:65;:::i;:::-;25792:6;25787:3;25783:16;25776:23;;25527:278;25419:386;;;;:::o;25811:271::-;25941:3;25963:93;26052:3;26043:6;25963:93;:::i;:::-;25956:100;;26073:3;26066:10;;25811:271;;;;:::o;26088:143::-;26145:5;26176:6;26170:13;26161:22;;26192:33;26219:5;26192:33;:::i;:::-;26088:143;;;;:::o;26237:351::-;26307:6;26356:2;26344:9;26335:7;26331:23;26327:32;26324:119;;;26362:79;;:::i;:::-;26324:119;26482:1;26507:64;26563:7;26554:6;26543:9;26539:22;26507:64;:::i;:::-;26497:74;;26453:128;26237:351;;;;:::o;26594:86::-;26629:7;26669:4;26662:5;26658:16;26647:27;;26594:86;;;:::o;26686:112::-;26769:22;26785:5;26769:22;:::i;:::-;26764:3;26757:35;26686:112;;:::o;26804:545::-;26977:4;27015:3;27004:9;27000:19;26992:27;;27029:71;27097:1;27086:9;27082:17;27073:6;27029:71;:::i;:::-;27110:68;27174:2;27163:9;27159:18;27150:6;27110:68;:::i;:::-;27188:72;27256:2;27245:9;27241:18;27232:6;27188:72;:::i;:::-;27270;27338:2;27327:9;27323:18;27314:6;27270:72;:::i;:::-;26804:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1522600","executionCost":"72429","totalCost":"1595029"},"external":{"executeCall(address,uint256,bytes)":"infinite","isValidSignature(bytes32,bytes)":"infinite","nftInfo()":"infinite","nonce()":"2459","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","owner()":"infinite","send(address,uint256)":"infinite","sendCustom(address,uint256,address)":"infinite","supportsInterface(bytes4)":"2847"}},"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","isValidSignature(bytes32,bytes)":"1626ba7e","nftInfo()":"b553fe1e","nonce()":"affed0e0","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","send(address,uint256)":"d0679d34","sendCustom(address,uint256,address)":"8447305a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"erc20contract\",\"type\":\"address\"}],\"name\":\"sendCustom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/N2D-ERC6551-Account.sol\":\"ERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the zero address.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface that must be implemented by smart contracts in order to receive\\n * ERC-1155 token transfers.\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/N2D-ERC6551-Account.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.27;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC1271.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\\\";\\r\\nimport \\\"../imports/IERC6551.sol\\\";\\r\\nimport \\\"../imports/ERC6551Bytecode.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract ERC6551Account is\\r\\n    IERC165,\\r\\n    IERC1271,\\r\\n    IERC6551Account,\\r\\n    IERC721Receiver,\\r\\n    IERC1155Receiver,\\r\\n    ReentrancyGuard\\r\\n{\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    // Add state variables\\r\\n    uint256 private _nonce;\\r\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\r\\n\\r\\n    constructor() {\\r\\n        _supportedInterfaces[type(IERC165).interfaceId] = true;\\r\\n        _supportedInterfaces[type(IERC6551Account).interfaceId] = true;\\r\\n    }\\r\\n\\r\\n    function executeCall(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes calldata data\\r\\n    ) external payable nonReentrant returns (bytes memory result) {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n\\r\\n        _nonce++;\\r\\n\\r\\n        bool success;\\r\\n        (success, result) = to.call{value: value, gas: gasleft() - 2000}(data);\\r\\n\\r\\n        if (!success) {\\r\\n            assembly {\\r\\n                revert(add(result, 32), mload(result))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function send(\\r\\n        address payable to,\\r\\n        uint256 amount\\r\\n    ) external payable nonReentrant {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n        require(address(this).balance >= amount, \\\"Insufficient funds\\\");\\r\\n\\r\\n        _nonce++;\\r\\n        to.transfer(amount);\\r\\n    }\\r\\n\\r\\n    function sendCustom(\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        IERC20 erc20contract\\r\\n    ) external nonReentrant {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n\\r\\n        uint256 balance = erc20contract.balanceOf(address(this));\\r\\n        require(balance >= amount, \\\"Insufficient funds\\\");\\r\\n\\r\\n        _nonce++;\\r\\n        erc20contract.transfer(to, amount);\\r\\n    }\\r\\n\\r\\n    function nftInfo()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 chainId, address tokenContract, uint256 tokenId)\\r\\n    {\\r\\n        uint256 length = address(this).code.length;\\r\\n        return\\r\\n            abi.decode(\\r\\n                Bytecode.codeAt(address(this), length - 0x60, length),\\r\\n                (uint256, address, uint256)\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\\r\\n            .nftInfo();\\r\\n        if (chainId != block.chainid) return address(0);\\r\\n        return IERC721(tokenContract).ownerOf(tokenId);\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\\r\\n        return _supportedInterfaces[interfaceId];\\r\\n    }\\r\\n\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external pure override returns (bytes4) {\\r\\n        return IERC721Receiver.onERC721Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 id,\\r\\n        uint256 value,\\r\\n        bytes calldata data\\r\\n    ) external view override returns (bytes4) {\\r\\n        return IERC1155Receiver.onERC1155Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155BatchReceived(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256[] calldata ids,\\r\\n        uint256[] calldata values,\\r\\n        bytes calldata data\\r\\n    ) external view override returns (bytes4) {\\r\\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\\r\\n    }\\r\\n\\r\\n    function isValidSignature(\\r\\n        bytes32 hash,\\r\\n        bytes memory signature\\r\\n    ) external view returns (bytes4 magicValue) {\\r\\n        bool isValid = SignatureChecker.isValidSignatureNow(\\r\\n            owner(),\\r\\n            hash,\\r\\n            signature\\r\\n        );\\r\\n\\r\\n        if (isValid) {\\r\\n            return IERC1271.isValidSignature.selector;\\r\\n        }\\r\\n\\r\\n        return bytes4(0);\\r\\n    }\\r\\n\\r\\n    function nonce() external view override returns (uint256) {\\r\\n        return _nonce;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x4841a1611efdaca2888dfdb2941b406595d55ee6a5c0f1e7141385daa9732e24\",\"license\":\"MIT\"},\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x1e9a565b6211f45903a900f95381a61a6b7d4a4440e823031f7575ae4ae9da76\",\"license\":\"MIT\"},\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1184,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":1743,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_nonce","offset":0,"slot":"1","type":"t_uint256"},{"astId":1747,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_supportedInterfaces","offset":0,"slot":"2","type":"t_mapping(t_bytes4,t_bool)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/ERC6551Bytecode.sol":{"Bytecode":{"abi":[{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220212e5fbd491963da03ad33385f5b3c67e762d2bbcd1925aa47f1d4787a8ece8c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2E PUSH0 0xBD BLOBHASH NOT PUSH4 0xDA03AD33 CODESIZE PUSH0 JUMPDEST EXTCODECOPY PUSH8 0xE762D2BBCD1925AA SELFBALANCE CALL 0xD4 PUSH25 0x7A8ECE8C64736F6C634300081B003300000000000000000000 ","sourceMap":"59:2683:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220212e5fbd491963da03ad33385f5b3c67e762d2bbcd1925aa47f1d4787a8ece8c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2E PUSH0 0xBD BLOBHASH NOT PUSH4 0xDA03AD33 CODESIZE PUSH0 JUMPDEST EXTCODECOPY PUSH8 0xE762D2BBCD1925AA SELFBALANCE CALL 0xD4 PUSH25 0x7A8ECE8C64736F6C634300081B003300000000000000000000 ","sourceMap":"59:2683:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"codeAt(address,uint256,uint256)":"infinite","codeSize(address)":"infinite","creationCodeFor(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/ERC6551Bytecode.sol\":\"Bytecode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x1e9a565b6211f45903a900f95381a61a6b7d4a4440e823031f7575ae4ae9da76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/IERC6551.sol":{"IERC6551Account":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","nftInfo()":"b553fe1e","nonce()":"affed0e0","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551AccountProxy":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551Registry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"salt","type":"uint256"}],"name":"AccountCreated","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"seed","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"account(address,uint256,address,uint256,uint256)":"5e9bc536","createAccount(address,uint256,address,uint256,uint256)":"c1340f69"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}