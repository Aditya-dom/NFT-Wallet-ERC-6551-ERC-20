{"id":"b89876157f6eda50c7cda8c538e230b9","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        if (signer.code.length == 0) {\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\n        } else {\n            return isValidERC1271SignatureNow(signer, hash, signature);\n        }\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC-1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/N2D-ERC6551-Account.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\n/*\r\nFollow/Subscribe Youtube, Github, IM, Tiktok\r\nfor more amazing content!!\r\n@Net2Dev\r\n███╗░░██╗███████╗████████╗██████╗░██████╗░███████╗██╗░░░██╗\r\n████╗░██║██╔════╝╚══██╔══╝╚════██╗██╔══██╗██╔════╝██║░░░██║\r\n██╔██╗██║█████╗░░░░░██║░░░░░███╔═╝██║░░██║█████╗░░╚██╗░██╔╝\r\n██║╚████║██╔══╝░░░░░██║░░░██╔══╝░░██║░░██║██╔══╝░░░╚████╔╝░\r\n██║░╚███║███████╗░░░██║░░░███████╗██████╔╝███████╗░░╚██╔╝░░\r\n╚═╝░░╚══╝╚══════╝░░░╚═╝░░░╚══════╝╚═════╝░╚══════╝░░░╚═╝░░░\r\nTHIS CONTRACT IS AVAILABLE FOR EDUCATIONAL \r\nPURPOSES ONLY. YOU ARE SOLELY REPONSIBLE \r\nFOR ITS USE. I AM NOT RESPONSIBLE FOR ANY\r\nOTHER USE. THIS IS TRAINING/EDUCATIONAL\r\nMATERIAL. ONLY USE IT IF YOU AGREE TO THE\r\nTERMS SPECIFIED ABOVE.\r\n*/\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\"; // signature validation standard\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\n// import \"https://github.com/net2devcrypto/ERC-6551-NFT-Wallets-Web3-Front-End-NextJS/blob/main/imports/IERC6551.sol\"; \r\n// import \"https://github.com/net2devcrypto/ERC-6551-NFT-Wallets-Web3-Front-End-NextJS/blob/main/imports/ERC6551Bytecode.sol\";\r\nimport \"../imports/IERC6551.sol\";\r\nimport \"../imports/ERC6551Bytecode.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"; // reentrancy protection when external calls are made\r\n\r\ncontract ERC6551Account is IERC165, IERC1271, IERC6551Account, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    //////////////////////////////////////////\r\n    //////////////// ERRORS //////////////////\r\n    //////////////////////////////////////////\r\n    error ERC6551Account__NotOwner();\r\n    error ERC6551Account__ExternalCallFailed();\r\n    error ERC6551Account__LowBalanceToTransferFunds();\r\n    error ERC6551Account__LowERC20TokenBalance();\r\n    error ERC6551Account__FailedDueToZeroAddressTransfer();\r\n    error ERC6551Account__IncorrectArraySize();\r\n\r\n\r\n    function executeCall(address to,uint256 value, bytes calldata data) external payable nonReentrant returns (bytes memory result)  {\r\n        if (to == address(0)) {\r\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\r\n        }\r\n        \r\n        if (msg.sender != owner()) {\r\n            revert ERC6551Account__NotOwner();\r\n        }\r\n\r\n        if (address(this).balance < value) {\r\n            revert ERC6551Account__LowBalanceToTransferFunds();\r\n        }\r\n\r\n        bool success;\r\n        (success, result) = to.call{value: value}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function batchTransferEth(address[] calldata to, uint256[] calldata amounts) external payable nonReentrant {\r\n        if (msg.sender != owner()) {\r\n            revert ERC6551Account__NotOwner();\r\n        }\r\n\r\n        uint256 toArraySize = to.length;\r\n        uint256 amountsArraySize = amounts.length;\r\n\r\n        if (toArraySize != amountsArraySize) {\r\n            revert ERC6551Account__IncorrectArraySize();\r\n        }\r\n\r\n        for (uint256 i = 0; i < toArraySize; i++) {\r\n            if (address(this).balance < amounts[i]) {\r\n            revert ERC6551Account__LowBalanceToTransferFunds();\r\n            }\r\n\r\n            if (to[i] == address(0)) {\r\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\r\n            }\r\n\r\n            (bool success, ) = to[i].call{value: amounts[i]}(\"\");\r\n            if (!success) {\r\n                revert ERC6551Account__ExternalCallFailed();\r\n            }\r\n        }\r\n    }\r\n\r\n    function simpleEthTransferAccount(address payable to, uint256 amount) external payable nonReentrant {\r\n        if (to == address(0)) {\r\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\r\n        }\r\n        \r\n        if (msg.sender != owner()) {\r\n            revert ERC6551Account__NotOwner();\r\n        }\r\n\r\n        if (address(this).balance < amount) {\r\n            revert ERC6551Account__LowBalanceToTransferFunds();\r\n        }\r\n\r\n        (bool success, ) = to.call{value: amount}(\"\");\r\n        if (!success) {\r\n            revert ERC6551Account__ExternalCallFailed();\r\n        }\r\n    }\r\n\r\n\r\n    // added non renetrancy in case dealing with erc 1155 token standard \r\n    function sendCustomErcTransfer(address to, uint256 amount, IERC20 erc20contract) external nonReentrant {\r\n        if (to == address(0)) {\r\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\r\n        }\r\n        \r\n        if (msg.sender != owner()) {\r\n            revert ERC6551Account__NotOwner();\r\n        }\r\n\r\n        uint256 balance = erc20contract.balanceOf(address(this));\r\n\r\n        if (balance < amount) {\r\n            revert ERC6551Account__LowERC20TokenBalance();\r\n        }\r\n\r\n        erc20contract.transfer(to, amount);\r\n    }\r\n\r\n    function nftInfo()external view returns (uint256 chainId, address tokenContract, uint256 tokenId) {\r\n        uint256 length = address(this).code.length;\r\n        return abi.decode(Bytecode.codeAt(address(this), length - 0x60, length), (uint256, address, uint256));\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this.nftInfo();\r\n        if (chainId != block.chainid) return address(0);\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\r\n        return (interfaceId == type(IERC165).interfaceId ||\r\n            interfaceId == type(IERC6551Account).interfaceId);\r\n    }\r\n\r\n    function isValidSignature( bytes32 hash, bytes memory signature) external view returns (bytes4 signValues) {\r\n        bool isValid = SignatureChecker.isValidSignatureNow( owner(), hash, signature);\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n        return \"end\";\r\n    }\r\n\r\n    function nonce() external view override returns (uint256) {}\r\n    receive() external payable {}\r\n\r\n    fallback() external payable {}\r\n}"},"imports/ERC6551Bytecode.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\n\nlibrary Bytecode {\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\n\n  /**\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\n    @param _code The returning value of the resulting `creationCode`\n    @return creationCode (constructor) for new contract\n  */\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\n    /*\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\n      0x01    0x80         0x80        DUP1                size size\n      0x02    0x60         0x600e      PUSH1 14            14 size size\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\n      0x04    0x39         0x39        CODECOPY            size\n      0x05    0x60         0x6000      PUSH1 00            0 size\n      0x06    0xf3         0xf3        RETURN\n      <CODE>\n    */\n\n    return abi.encodePacked(\n      hex\"63\",\n      uint32(_code.length),\n      hex\"80_60_0E_60_00_39_60_00_F3\",\n      _code\n    );\n  }\n\n  /**\n    @notice Returns the size of the code on a given address\n    @param _addr Address that may or may not contain code\n    @return size of the code on the given `_addr`\n  */\n  function codeSize(address _addr) internal view returns (uint256 size) {\n    assembly { size := extcodesize(_addr) }\n  }\n\n  /**\n    @notice Returns the code of a given address\n    @dev It will fail if `_end < _start`\n    @param _addr Address that may or may not contain code\n    @param _start number of bytes of code to skip on read\n    @param _end index before which to end extraction\n    @return oCode read from `_addr` deployed bytecode\n\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\n  */\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\n    uint256 csize = codeSize(_addr);\n    if (csize == 0) return bytes(\"\");\n\n    if (_start > csize) return bytes(\"\");\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \n\n    unchecked {\n      uint256 reqSize = _end - _start;\n      uint256 maxSize = csize - _start;\n\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\n\n      assembly {\n        // allocate output byte array - this could also be done without assembly\n        // by using o_code = new bytes(size)\n        oCode := mload(0x40)\n        // new \"memory end\" including padding\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n        // store length in memory\n        mstore(oCode, size)\n        // actually retrieve the code, this needs assembly\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\n      }\n    }\n  }\n}"},"imports/IERC6551.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\ninterface IERC6551Registry {\n\n    event AccountCreated(\n        address account,\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    );\n\n    function createAccount(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 seed\n    ) external returns (address);\n\n    function account(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    ) external view returns (address);\n}\n\ninterface IERC6551AccountProxy {\n    function implementation() external view returns (address);\n}\n\ninterface IERC6551Account {\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\n\n    receive() external payable;\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    function nftInfo()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    function owner() external view returns (address);\n\n    function nonce() external view returns (uint256);\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[13]},"id":14,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"133:160:0","text":" @dev Interface of the ERC-1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IERC1271","nameLocation":"304:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"319:220:0","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"553:16:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"hash","nameLocation":"578:4:0","nodeType":"VariableDeclaration","scope":12,"src":"570:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"570:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"signature","nameLocation":"597:9:0","nodeType":"VariableDeclaration","scope":12,"src":"584:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"584:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"569:38:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"magicValue","nameLocation":"638:10:0","nodeType":"VariableDeclaration","scope":12,"src":"631:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9,"name":"bytes4","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"630:19:0"},"scope":13,"src":"544:106:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":14,"src":"294:358:0","usedErrors":[],"usedEvents":[]}],"src":"107:546:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[95],"IERC165":[1527],"IERC20":[181]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":17,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":104,"src":"133:36:1","symbolAliases":[{"foreign":{"id":16,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":19,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":100,"src":"170:38:1","symbolAliases":[{"foreign":{"id":18,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":21,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"590:6:1"},"id":22,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":23,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"598:7:1"},"id":24,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":95,"linearizedBaseContracts":[95,1527,181],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":34,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":34,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":95,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":46,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":46,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":46,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":95,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":58,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":58,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":58,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":95,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":72,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":72,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":72,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":95,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":82,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":82,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":82,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":95,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":94,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":94,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":94,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":95,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":96,"src":"568:3885:1","usedErrors":[],"usedEvents":[115,124]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1527]},"id":100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":99,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":100,"sourceUnit":1528,"src":"132:59:2","symbolAliases":[{"foreign":{"id":98,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[181]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":101,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":182,"src":"131:49:3","symbolAliases":[{"foreign":{"id":102,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[181]},"id":182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":181,"linearizedBaseContracts":[181],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":115,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":115,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":115,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":115,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":124,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":124,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":124,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":124,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":130,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":181,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":138,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":138,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":181,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":148,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":148,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":148,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":148,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":145,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":181,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":158,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":158,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":181,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":168,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":168,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":181,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":180,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":180,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":180,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":181,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":182,"src":"204:2575:4","usedErrors":[],"usedEvents":[115,124]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[968],"IERC1363":[95],"IERC20":[181],"SafeERC20":[592]},"id":593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":182,"src":"141:37:5","symbolAliases":[{"foreign":{"id":184,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":96,"src":"179:58:5","symbolAliases":[{"foreign":{"id":186,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":969,"src":"238:51:5","symbolAliases":[{"foreign":{"id":188,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"246:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"291:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":592,"linearizedBaseContracts":[592],"name":"SafeERC20","nameLocation":"758:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"774:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":195,"name":"SafeERC20FailedOperation","nameLocation":"850:24:5","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"token","nameLocation":"883:5:5","nodeType":"VariableDeclaration","scope":195,"src":"875:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:5"},"src":"844:46:5"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"896:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":204,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:5","nodeType":"ErrorDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"spender","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":204,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:5","nodeType":"VariableDeclaration","scope":204,"src":"1028:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:5","nodeType":"VariableDeclaration","scope":204,"src":"1054:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:5"},"src":"972:109:5"},{"body":{"id":227,"nodeType":"Block","src":"1343:88:5","statements":[{"expression":{"arguments":[{"id":216,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1373:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":219,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1395:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"1395:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":221,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1412:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1416:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":217,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":215,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1353:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"1353:71:5"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1087:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:5","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"token","nameLocation":"1300:5:5","nodeType":"VariableDeclaration","scope":228,"src":"1293:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"IERC20","nameLocations":["1293:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"1293:6:5"},"referencedDeclaration":181,"src":"1293:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"to","nameLocation":"1315:2:5","nodeType":"VariableDeclaration","scope":228,"src":"1307:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"value","nameLocation":"1327:5:5","nodeType":"VariableDeclaration","scope":228,"src":"1319:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:5"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1343:0:5"},"scope":592,"src":"1271:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"1760:98:5","statements":[{"expression":{"arguments":[{"id":242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1790:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":245,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1812:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":180,"src":"1812:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":247,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1833:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1839:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1843:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":243,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":241,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1770:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"ExpressionStatement","src":"1770:81:5"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"1437:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:5","nodeType":"FunctionDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"token","nameLocation":"1703:5:5","nodeType":"VariableDeclaration","scope":255,"src":"1696:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":231,"nodeType":"UserDefinedTypeName","pathNode":{"id":230,"name":"IERC20","nameLocations":["1696:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"1696:6:5"},"referencedDeclaration":181,"src":"1696:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"from","nameLocation":"1718:4:5","nodeType":"VariableDeclaration","scope":255,"src":"1710:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"to","nameLocation":"1732:2:5","nodeType":"VariableDeclaration","scope":255,"src":"1724:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"value","nameLocation":"1744:5:5","nodeType":"VariableDeclaration","scope":255,"src":"1736:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:5"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"1760:0:5"},"scope":592,"src":"1670:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"2600:139:5","statements":[{"assignments":[267],"declarations":[{"constant":false,"id":267,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:5","nodeType":"VariableDeclaration","scope":285,"src":"2610:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[{"arguments":[{"id":272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}],"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:5","typeDescriptions":{}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2664:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":268,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2633:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":158,"src":"2633:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:5"},{"expression":{"arguments":[{"id":278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2695:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2711:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2726:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2682:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"2682:50:5"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1864:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:5","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"token","nameLocation":"2552:5:5","nodeType":"VariableDeclaration","scope":286,"src":"2545:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":258,"nodeType":"UserDefinedTypeName","pathNode":{"id":257,"name":"IERC20","nameLocations":["2545:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2545:6:5"},"referencedDeclaration":181,"src":"2545:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"spender","nameLocation":"2567:7:5","nodeType":"VariableDeclaration","scope":286,"src":"2559:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"value","nameLocation":"2584:5:5","nodeType":"VariableDeclaration","scope":286,"src":"2576:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:5"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":592,"src":"2514:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"3505:370:5","statements":[{"id":327,"nodeType":"UncheckedBlock","src":"3515:354:5","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:5","nodeType":"VariableDeclaration","scope":327,"src":"3539:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":307,"initialValue":{"arguments":[{"arguments":[{"id":303,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}],"id":302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:5","typeDescriptions":{}}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3566:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":158,"src":"3566:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3623:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":309,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3642:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"IfStatement","src":"3619:160:5","trueBody":{"id":317,"nodeType":"Block","src":"3661:118:5","statements":[{"errorCall":{"arguments":[{"id":312,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":313,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3728:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":314,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3746:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3686:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"RevertStatement","src":"3679:85:5"}]}},{"expression":{"arguments":[{"id":320,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3805:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3812:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3821:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":323,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3840:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3792:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"ExpressionStatement","src":"3792:66:5"}]}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2745:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:5","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"token","nameLocation":"3445:5:5","nodeType":"VariableDeclaration","scope":329,"src":"3438:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"IERC20","nameLocations":["3438:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"3438:6:5"},"referencedDeclaration":181,"src":"3438:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"spender","nameLocation":"3460:7:5","nodeType":"VariableDeclaration","scope":329,"src":"3452:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:5","nodeType":"VariableDeclaration","scope":329,"src":"3469:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:5"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"3505:0:5"},"scope":592,"src":"3407:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":375,"nodeType":"Block","src":"4529:303:5","statements":[{"assignments":[341],"declarations":[{"constant":false,"id":341,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:5","nodeType":"VariableDeclaration","scope":375,"src":"4539:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":340,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":350,"initialValue":{"arguments":[{"expression":{"id":344,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4582:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4582:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4598:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4607:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:5"},{"condition":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:5","subExpression":{"arguments":[{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":353,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4661:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4630:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":374,"nodeType":"IfStatement","src":"4625:201:5","trueBody":{"id":373,"nodeType":"Block","src":"4676:150:5","statements":[{"expression":{"arguments":[{"id":357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4710:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4732:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4732:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4748:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4690:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"4690:71:5"},{"expression":{"arguments":[{"id":369,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4795:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":370,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4802:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":368,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4775:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"4775:40:5"}]}}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3881:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":376,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:5","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"token","nameLocation":"4481:5:5","nodeType":"VariableDeclaration","scope":376,"src":"4474:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"IERC20","nameLocations":["4474:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"4474:6:5"},"referencedDeclaration":181,"src":"4474:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"spender","nameLocation":"4496:7:5","nodeType":"VariableDeclaration","scope":376,"src":"4488:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"value","nameLocation":"4513:5:5","nodeType":"VariableDeclaration","scope":376,"src":"4505:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:5"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"4529:0:5"},"scope":592,"src":"4452:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"5279:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":389,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5293:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:5","memberName":"code","nodeType":"MemberAccess","src":"5293:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:5","memberName":"length","nodeType":"MemberAccess","src":"5293:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:5","subExpression":{"arguments":[{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5402:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5413:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5380:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":46,"src":"5380:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"nodeType":"IfStatement","src":"5375:117:5","trueBody":{"id":415,"nodeType":"Block","src":"5420:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5474:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:5","typeDescriptions":{}}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":408,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5441:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"RevertStatement","src":"5434:47:5"}]}},"id":417,"nodeType":"IfStatement","src":"5289:203:5","trueBody":{"id":400,"nodeType":"Block","src":"5314:55:5","statements":[{"expression":{"arguments":[{"id":395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5341:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5348:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"5328:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"5328:30:5"}]}}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"4838:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:5","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"token","nameLocation":"5217:5:5","nodeType":"VariableDeclaration","scope":419,"src":"5208:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":379,"nodeType":"UserDefinedTypeName","pathNode":{"id":378,"name":"IERC1363","nameLocations":["5208:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5208:8:5"},"referencedDeclaration":95,"src":"5208:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"to","nameLocation":"5232:2:5","nodeType":"VariableDeclaration","scope":419,"src":"5224:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"value","nameLocation":"5244:5:5","nodeType":"VariableDeclaration","scope":419,"src":"5236:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"data","nameLocation":"5264:4:5","nodeType":"VariableDeclaration","scope":419,"src":"5251:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"5279:0:5"},"scope":592,"src":"5176:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"6017:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:5","memberName":"code","nodeType":"MemberAccess","src":"6031:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:5","memberName":"length","nodeType":"MemberAccess","src":"6031:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:5","subExpression":{"arguments":[{"id":449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6154:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6160:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6171:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":447,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6128:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":72,"src":"6128:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"6123:127:5","trueBody":{"id":462,"nodeType":"Block","src":"6178:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6232:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:5","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6199:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":461,"nodeType":"RevertStatement","src":"6192:47:5"}]}},"id":464,"nodeType":"IfStatement","src":"6027:223:5","trueBody":{"id":446,"nodeType":"Block","src":"6052:65:5","statements":[{"expression":{"arguments":[{"id":440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6083:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6090:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6096:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6100:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":439,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"6066:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6066:40:5"}]}}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"5504:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:5","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"token","nameLocation":"5904:5:5","nodeType":"VariableDeclaration","scope":466,"src":"5895:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":422,"nodeType":"UserDefinedTypeName","pathNode":{"id":421,"name":"IERC1363","nameLocations":["5895:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5895:8:5"},"referencedDeclaration":95,"src":"5895:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"from","nameLocation":"5927:4:5","nodeType":"VariableDeclaration","scope":466,"src":"5919:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"to","nameLocation":"5949:2:5","nodeType":"VariableDeclaration","scope":466,"src":"5941:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"value","nameLocation":"5969:5:5","nodeType":"VariableDeclaration","scope":466,"src":"5961:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"data","nameLocation":"5997:4:5","nodeType":"VariableDeclaration","scope":466,"src":"5984:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":430,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:5"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"6017:0:5"},"scope":592,"src":"5850:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":508,"nodeType":"Block","src":"7023:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7037:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:5","memberName":"code","nodeType":"MemberAccess","src":"7037:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:5","memberName":"length","nodeType":"MemberAccess","src":"7037:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:5","subExpression":{"arguments":[{"id":493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7145:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7149:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":495,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7156:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7124:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":94,"src":"7124:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"7119:116:5","trueBody":{"id":505,"nodeType":"Block","src":"7163:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7217:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:5","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"7184:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"7177:47:5"}]}},"id":507,"nodeType":"IfStatement","src":"7033:202:5","trueBody":{"id":490,"nodeType":"Block","src":"7058:55:5","statements":[{"expression":{"arguments":[{"id":485,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7085:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7092:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7096:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7072:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7072:30:5"}]}}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"6262:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:5","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"token","nameLocation":"6961:5:5","nodeType":"VariableDeclaration","scope":509,"src":"6952:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"IERC1363","nameLocations":["6952:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"6952:8:5"},"referencedDeclaration":95,"src":"6952:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"to","nameLocation":"6976:2:5","nodeType":"VariableDeclaration","scope":509,"src":"6968:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"value","nameLocation":"6988:5:5","nodeType":"VariableDeclaration","scope":509,"src":"6980:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"data","nameLocation":"7008:4:5","nodeType":"VariableDeclaration","scope":509,"src":"6995:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":475,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:5"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"7023:0:5"},"scope":592,"src":"6921:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"7808:650:5","statements":[{"assignments":[519],"declarations":[{"constant":false,"id":519,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:5","nodeType":"VariableDeclaration","scope":549,"src":"7818:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"nodeType":"VariableDeclarationStatement","src":"7818:18:5"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:5","nodeType":"VariableDeclaration","scope":549,"src":"7846:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":523,"nodeType":"VariableDeclarationStatement","src":"7846:19:5"},{"AST":{"nativeSrc":"7900:396:5","nodeType":"YulBlock","src":"7900:396:5","statements":[{"nativeSrc":"7914:75:5","nodeType":"YulVariableDeclaration","src":"7914:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:5","nodeType":"YulIdentifier","src":"7934:3:5"},"nativeSrc":"7934:5:5","nodeType":"YulFunctionCall","src":"7934:5:5"},{"name":"token","nativeSrc":"7941:5:5","nodeType":"YulIdentifier","src":"7941:5:5"},{"kind":"number","nativeSrc":"7948:1:5","nodeType":"YulLiteral","src":"7948:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:5","nodeType":"YulIdentifier","src":"7955:4:5"},{"kind":"number","nativeSrc":"7961:4:5","nodeType":"YulLiteral","src":"7961:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:5","nodeType":"YulIdentifier","src":"7951:3:5"},"nativeSrc":"7951:15:5","nodeType":"YulFunctionCall","src":"7951:15:5"},{"arguments":[{"name":"data","nativeSrc":"7974:4:5","nodeType":"YulIdentifier","src":"7974:4:5"}],"functionName":{"name":"mload","nativeSrc":"7968:5:5","nodeType":"YulIdentifier","src":"7968:5:5"},"nativeSrc":"7968:11:5","nodeType":"YulFunctionCall","src":"7968:11:5"},{"kind":"number","nativeSrc":"7981:1:5","nodeType":"YulLiteral","src":"7981:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:5","nodeType":"YulLiteral","src":"7984:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:5","nodeType":"YulIdentifier","src":"7929:4:5"},"nativeSrc":"7929:60:5","nodeType":"YulFunctionCall","src":"7929:60:5"},"variables":[{"name":"success","nativeSrc":"7918:7:5","nodeType":"YulTypedName","src":"7918:7:5","type":""}]},{"body":{"nativeSrc":"8050:157:5","nodeType":"YulBlock","src":"8050:157:5","statements":[{"nativeSrc":"8068:22:5","nodeType":"YulVariableDeclaration","src":"8068:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:5","nodeType":"YulLiteral","src":"8085:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:5","nodeType":"YulIdentifier","src":"8079:5:5"},"nativeSrc":"8079:11:5","nodeType":"YulFunctionCall","src":"8079:11:5"},"variables":[{"name":"ptr","nativeSrc":"8072:3:5","nodeType":"YulTypedName","src":"8072:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:5","nodeType":"YulIdentifier","src":"8122:3:5"},{"kind":"number","nativeSrc":"8127:1:5","nodeType":"YulLiteral","src":"8127:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:5","nodeType":"YulIdentifier","src":"8130:14:5"},"nativeSrc":"8130:16:5","nodeType":"YulFunctionCall","src":"8130:16:5"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:5","nodeType":"YulIdentifier","src":"8107:14:5"},"nativeSrc":"8107:40:5","nodeType":"YulFunctionCall","src":"8107:40:5"},"nativeSrc":"8107:40:5","nodeType":"YulExpressionStatement","src":"8107:40:5"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:5","nodeType":"YulIdentifier","src":"8171:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:5","nodeType":"YulIdentifier","src":"8176:14:5"},"nativeSrc":"8176:16:5","nodeType":"YulFunctionCall","src":"8176:16:5"}],"functionName":{"name":"revert","nativeSrc":"8164:6:5","nodeType":"YulIdentifier","src":"8164:6:5"},"nativeSrc":"8164:29:5","nodeType":"YulFunctionCall","src":"8164:29:5"},"nativeSrc":"8164:29:5","nodeType":"YulExpressionStatement","src":"8164:29:5"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:5","nodeType":"YulIdentifier","src":"8041:7:5"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:5","nodeType":"YulIdentifier","src":"8034:6:5"},"nativeSrc":"8034:15:5","nodeType":"YulFunctionCall","src":"8034:15:5"},"nativeSrc":"8031:176:5","nodeType":"YulIf","src":"8031:176:5"},{"nativeSrc":"8220:30:5","nodeType":"YulAssignment","src":"8220:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:5","nodeType":"YulIdentifier","src":"8234:14:5"},"nativeSrc":"8234:16:5","nodeType":"YulFunctionCall","src":"8234:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:5","nodeType":"YulIdentifier","src":"8220:10:5"}]},{"nativeSrc":"8263:23:5","nodeType":"YulAssignment","src":"8263:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:5","nodeType":"YulLiteral","src":"8284:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:5","nodeType":"YulIdentifier","src":"8278:5:5"},"nativeSrc":"8278:8:5","nodeType":"YulFunctionCall","src":"8278:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:5","nodeType":"YulIdentifier","src":"8263:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":515,"isOffset":false,"isSlot":false,"src":"7955:4:5","valueSize":1},{"declaration":515,"isOffset":false,"isSlot":false,"src":"7974:4:5","valueSize":1},{"declaration":519,"isOffset":false,"isSlot":false,"src":"8220:10:5","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"8263:11:5","valueSize":1},{"declaration":513,"isOffset":false,"isSlot":false,"src":"7941:5:5","valueSize":1}],"flags":["memory-safe"],"id":524,"nodeType":"InlineAssembly","src":"7875:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8310:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8362:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":530,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8336:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:5","typeDescriptions":{}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:5","memberName":"code","nodeType":"MemberAccess","src":"8328:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:5","memberName":"length","nodeType":"MemberAccess","src":"8328:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"IfStatement","src":"8306:146:5","trueBody":{"id":547,"nodeType":"Block","src":"8380:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":543,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8434:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:5","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":540,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"8401:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"RevertStatement","src":"8394:47:5"}]}}]},"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"7247:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":550,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:5","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"token","nameLocation":"7774:5:5","nodeType":"VariableDeclaration","scope":550,"src":"7767:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":512,"nodeType":"UserDefinedTypeName","pathNode":{"id":511,"name":"IERC20","nameLocations":["7767:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"7767:6:5"},"referencedDeclaration":181,"src":"7767:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"data","nameLocation":"7794:4:5","nodeType":"VariableDeclaration","scope":550,"src":"7781:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"7808:0:5"},"scope":592,"src":"7738:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":590,"nodeType":"Block","src":"9049:391:5","statements":[{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"success","nameLocation":"9064:7:5","nodeType":"VariableDeclaration","scope":590,"src":"9059:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":561,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":563,"nodeType":"VariableDeclarationStatement","src":"9059:12:5"},{"assignments":[565],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:5","nodeType":"VariableDeclaration","scope":590,"src":"9081:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":566,"nodeType":"VariableDeclarationStatement","src":"9081:18:5"},{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:5","nodeType":"VariableDeclaration","scope":590,"src":"9109:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":569,"nodeType":"VariableDeclarationStatement","src":"9109:19:5"},{"AST":{"nativeSrc":"9163:174:5","nodeType":"YulBlock","src":"9163:174:5","statements":[{"nativeSrc":"9177:71:5","nodeType":"YulAssignment","src":"9177:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:5","nodeType":"YulIdentifier","src":"9193:3:5"},"nativeSrc":"9193:5:5","nodeType":"YulFunctionCall","src":"9193:5:5"},{"name":"token","nativeSrc":"9200:5:5","nodeType":"YulIdentifier","src":"9200:5:5"},{"kind":"number","nativeSrc":"9207:1:5","nodeType":"YulLiteral","src":"9207:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:5","nodeType":"YulIdentifier","src":"9214:4:5"},{"kind":"number","nativeSrc":"9220:4:5","nodeType":"YulLiteral","src":"9220:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:5","nodeType":"YulIdentifier","src":"9210:3:5"},"nativeSrc":"9210:15:5","nodeType":"YulFunctionCall","src":"9210:15:5"},{"arguments":[{"name":"data","nativeSrc":"9233:4:5","nodeType":"YulIdentifier","src":"9233:4:5"}],"functionName":{"name":"mload","nativeSrc":"9227:5:5","nodeType":"YulIdentifier","src":"9227:5:5"},"nativeSrc":"9227:11:5","nodeType":"YulFunctionCall","src":"9227:11:5"},{"kind":"number","nativeSrc":"9240:1:5","nodeType":"YulLiteral","src":"9240:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:5","nodeType":"YulLiteral","src":"9243:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:5","nodeType":"YulIdentifier","src":"9188:4:5"},"nativeSrc":"9188:60:5","nodeType":"YulFunctionCall","src":"9188:60:5"},"variableNames":[{"name":"success","nativeSrc":"9177:7:5","nodeType":"YulIdentifier","src":"9177:7:5"}]},{"nativeSrc":"9261:30:5","nodeType":"YulAssignment","src":"9261:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:5","nodeType":"YulIdentifier","src":"9275:14:5"},"nativeSrc":"9275:16:5","nodeType":"YulFunctionCall","src":"9275:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:5","nodeType":"YulIdentifier","src":"9261:10:5"}]},{"nativeSrc":"9304:23:5","nodeType":"YulAssignment","src":"9304:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:5","nodeType":"YulLiteral","src":"9325:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:5","nodeType":"YulIdentifier","src":"9319:5:5"},"nativeSrc":"9319:8:5","nodeType":"YulFunctionCall","src":"9319:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:5","nodeType":"YulIdentifier","src":"9304:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":556,"isOffset":false,"isSlot":false,"src":"9214:4:5","valueSize":1},{"declaration":556,"isOffset":false,"isSlot":false,"src":"9233:4:5","valueSize":1},{"declaration":565,"isOffset":false,"isSlot":false,"src":"9261:10:5","valueSize":1},{"declaration":568,"isOffset":false,"isSlot":false,"src":"9304:11:5","valueSize":1},{"declaration":562,"isOffset":false,"isSlot":false,"src":"9177:7:5","valueSize":1},{"declaration":554,"isOffset":false,"isSlot":false,"src":"9200:5:5","valueSize":1}],"flags":["memory-safe"],"id":570,"nodeType":"InlineAssembly","src":"9138:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9353:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"9365:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"9416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":577,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9391:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:5","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:5","memberName":"code","nodeType":"MemberAccess","src":"9383:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:5","memberName":"length","nodeType":"MemberAccess","src":"9383:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":560,"id":589,"nodeType":"Return","src":"9346:87:5"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"8464:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":591,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:5","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"token","nameLocation":"9000:5:5","nodeType":"VariableDeclaration","scope":591,"src":"8993:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"IERC20","nameLocations":["8993:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"8993:6:5"},"referencedDeclaration":181,"src":"8993:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"data","nameLocation":"9020:4:5","nodeType":"VariableDeclaration","scope":591,"src":"9007:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":555,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:5"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":591,"src":"9043:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":558,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:5"},"scope":592,"src":"8960:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":593,"src":"750:8692:5","usedErrors":[195,204],"usedEvents":[]}],"src":"115:9328:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1527],"IERC721":[709]},"id":710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":710,"sourceUnit":1528,"src":"134:62:6","symbolAliases":[{"foreign":{"id":595,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":598,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"288:7:6"},"id":599,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":709,"linearizedBaseContracts":[709,1527],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":608,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":608,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":608,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":608,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":617,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":617,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":613,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":617,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":615,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":617,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":626,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":626,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":626,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":626,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":634,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":634,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":634,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":709,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":642,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":642,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":642,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":709,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":654,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":654,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":654,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":654,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":654,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":709,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":664,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":664,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":664,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":709,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":674,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":674,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":674,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":709,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":682,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":682,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":709,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":690,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":690,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":709,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":698,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":698,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":698,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":709,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":708,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":708,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":708,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":705,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":709,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":710,"src":"267:4661:6","usedErrors":[],"usedEvents":[608,617,626]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[968],"Errors":[990]},"id":969,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":711,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":969,"sourceUnit":991,"src":"127:36:7","symbolAliases":[{"foreign":{"id":712,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"135:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"165:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":968,"linearizedBaseContracts":[968],"name":"Address","nameLocation":"241:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"255:75:7","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":719,"name":"AddressEmptyCode","nameLocation":"341:16:7","nodeType":"ErrorDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"target","nameLocation":"366:6:7","nodeType":"VariableDeclaration","scope":719,"src":"358:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:7"},"src":"335:39:7"},{"body":{"id":765,"nodeType":"Block","src":"1361:278:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:7","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1399:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"1371:125:7","trueBody":{"id":745,"nodeType":"Block","src":"1407:89:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":739,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:7","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":742,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1478:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":734,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1428:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":978,"src":"1428:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"RevertStatement","src":"1421:64:7"}]}},{"assignments":[748,null],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"success","nameLocation":"1512:7:7","nodeType":"VariableDeclaration","scope":765,"src":"1507:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":747,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":755,"initialValue":{"arguments":[{"hexValue":"","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":749,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1525:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:7","memberName":"call","nodeType":"MemberAccess","src":"1525:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1547:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:7"},{"condition":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:7","subExpression":{"id":756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"1573:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"1568:65:7","trueBody":{"id":763,"nodeType":"Block","src":"1582:51:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":758,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1603:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:7","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":981,"src":"1603:17:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"RevertStatement","src":"1596:26:7"}]}}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"380:905:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:7","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:7","nodeType":"VariableDeclaration","scope":766,"src":"1309:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"amount","nameLocation":"1344:6:7","nodeType":"VariableDeclaration","scope":766,"src":"1336:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:7"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"1361:0:7"},"scope":968,"src":"1290:349:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"2573:62:7","statements":[{"expression":{"arguments":[{"id":777,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2612:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2620:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":776,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2590:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":775,"id":781,"nodeType":"Return","src":"2583:45:7"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"1645:834:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"target","nameLocation":"2514:6:7","nodeType":"VariableDeclaration","scope":783,"src":"2506:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"data","nameLocation":"2535:4:7","nodeType":"VariableDeclaration","scope":783,"src":"2522:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:7"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"2559:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":773,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:7"},"scope":968,"src":"2484:151:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"3072:294:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":797,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}],"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:7","typeDescriptions":{}}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:7","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3110:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":814,"nodeType":"IfStatement","src":"3082:123:7","trueBody":{"id":813,"nodeType":"Block","src":"3117:88:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$968","typeString":"library Address"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:7","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:7","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3188:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":802,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"3138:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":978,"src":"3138:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"RevertStatement","src":"3131:63:7"}]}},{"assignments":[816,818],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"success","nameLocation":"3220:7:7","nodeType":"VariableDeclaration","scope":832,"src":"3215:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:7","nodeType":"VariableDeclaration","scope":832,"src":"3229:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":817,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":825,"initialValue":{"arguments":[{"id":823,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3282:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":819,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3256:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:7","memberName":"call","nodeType":"MemberAccess","src":"3256:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3275:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:7"},{"expression":{"arguments":[{"id":827,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3331:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3339:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":829,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3348:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":826,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3304:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":794,"id":831,"nodeType":"Return","src":"3297:62:7"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"2641:313:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:7","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"target","nameLocation":"2998:6:7","nodeType":"VariableDeclaration","scope":833,"src":"2990:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"data","nameLocation":"3019:4:7","nodeType":"VariableDeclaration","scope":833,"src":"3006:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"value","nameLocation":"3033:5:7","nodeType":"VariableDeclaration","scope":833,"src":"3025:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:7"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"3058:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:7"},"scope":968,"src":"2959:407:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":858,"nodeType":"Block","src":"3605:154:7","statements":[{"assignments":[844,846],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"success","nameLocation":"3621:7:7","nodeType":"VariableDeclaration","scope":858,"src":"3616:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":843,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:7","nodeType":"VariableDeclaration","scope":858,"src":"3630:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":845,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":851,"initialValue":{"arguments":[{"id":849,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"3675:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":847,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3657:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:7"},{"expression":{"arguments":[{"id":853,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3724:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"3732:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":855,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3741:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":852,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3697:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":842,"id":857,"nodeType":"Return","src":"3690:62:7"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"3372:128:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:7","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"target","nameLocation":"3541:6:7","nodeType":"VariableDeclaration","scope":859,"src":"3533:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"data","nameLocation":"3562:4:7","nodeType":"VariableDeclaration","scope":859,"src":"3549:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":837,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:7"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"3591:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:7"},"scope":968,"src":"3505:254:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"3997:156:7","statements":[{"assignments":[870,872],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"success","nameLocation":"4013:7:7","nodeType":"VariableDeclaration","scope":884,"src":"4008:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":869,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:7","nodeType":"VariableDeclaration","scope":884,"src":"4022:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":877,"initialValue":{"arguments":[{"id":875,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4069:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":873,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4049:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:7"},{"expression":{"arguments":[{"id":879,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4118:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4126:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":881,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"4135:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":878,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4091:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":868,"id":883,"nodeType":"Return","src":"4084:62:7"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"3765:130:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:7","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"target","nameLocation":"3938:6:7","nodeType":"VariableDeclaration","scope":885,"src":"3930:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"data","nameLocation":"3959:4:7","nodeType":"VariableDeclaration","scope":885,"src":"3946:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:7"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"3983:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:7"},"scope":968,"src":"3900:253:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":924,"nodeType":"Block","src":"4579:424:7","statements":[{"condition":{"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:7","subExpression":{"id":897,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4594:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":922,"nodeType":"Block","src":"4653:344:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":904,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4841:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:7","memberName":"length","nodeType":"MemberAccess","src":"4841:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":908,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4867:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:7","memberName":"code","nodeType":"MemberAccess","src":"4867:11:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:7","memberName":"length","nodeType":"MemberAccess","src":"4867:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"4837:119:7","trueBody":{"id":918,"nodeType":"Block","src":"4892:64:7","statements":[{"errorCall":{"arguments":[{"id":915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4934:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4917:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"RevertStatement","src":"4910:31:7"}]}},{"expression":{"id":920,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4976:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":896,"id":921,"nodeType":"Return","src":"4969:17:7"}]},"id":923,"nodeType":"IfStatement","src":"4589:408:7","trueBody":{"id":903,"nodeType":"Block","src":"4603:44:7","statements":[{"expression":{"arguments":[{"id":900,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4625:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":899,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"4617:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"4617:19:7"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"4159:257:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:7","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"target","nameLocation":"4474:6:7","nodeType":"VariableDeclaration","scope":925,"src":"4466:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"success","nameLocation":"4495:7:7","nodeType":"VariableDeclaration","scope":925,"src":"4490:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":889,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:7","nodeType":"VariableDeclaration","scope":925,"src":"4512:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:7"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"4565:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":894,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:7"},"scope":968,"src":"4421:582:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"5307:122:7","statements":[{"condition":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:7","subExpression":{"id":935,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"5322:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":944,"nodeType":"Block","src":"5381:42:7","statements":[{"expression":{"id":942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5402:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":934,"id":943,"nodeType":"Return","src":"5395:17:7"}]},"id":945,"nodeType":"IfStatement","src":"5317:106:7","trueBody":{"id":941,"nodeType":"Block","src":"5331:44:7","statements":[{"expression":{"arguments":[{"id":938,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5353:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":937,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5345:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"5345:19:7"}]}}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"5009:191:7","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:7","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"success","nameLocation":"5236:7:7","nodeType":"VariableDeclaration","scope":947,"src":"5231:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:7","nodeType":"VariableDeclaration","scope":947,"src":"5245:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:7"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"5293:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":932,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:7"},"scope":968,"src":"5205:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"5598:432:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":953,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5674:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:7","memberName":"length","nodeType":"MemberAccess","src":"5674:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":964,"nodeType":"Block","src":"5973:51:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":959,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5994:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:7","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":981,"src":"5994:17:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"RevertStatement","src":"5987:26:7"}]},"id":965,"nodeType":"IfStatement","src":"5670:354:7","trueBody":{"id":958,"nodeType":"Block","src":"5697:270:7","statements":[{"AST":{"nativeSrc":"5824:133:7","nodeType":"YulBlock","src":"5824:133:7","statements":[{"nativeSrc":"5842:40:7","nodeType":"YulVariableDeclaration","src":"5842:40:7","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:7","nodeType":"YulIdentifier","src":"5871:10:7"}],"functionName":{"name":"mload","nativeSrc":"5865:5:7","nodeType":"YulIdentifier","src":"5865:5:7"},"nativeSrc":"5865:17:7","nodeType":"YulFunctionCall","src":"5865:17:7"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:7","nodeType":"YulTypedName","src":"5846:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:7","nodeType":"YulLiteral","src":"5910:2:7","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:7","nodeType":"YulIdentifier","src":"5914:10:7"}],"functionName":{"name":"add","nativeSrc":"5906:3:7","nodeType":"YulIdentifier","src":"5906:3:7"},"nativeSrc":"5906:19:7","nodeType":"YulFunctionCall","src":"5906:19:7"},{"name":"returndata_size","nativeSrc":"5927:15:7","nodeType":"YulIdentifier","src":"5927:15:7"}],"functionName":{"name":"revert","nativeSrc":"5899:6:7","nodeType":"YulIdentifier","src":"5899:6:7"},"nativeSrc":"5899:44:7","nodeType":"YulFunctionCall","src":"5899:44:7"},"nativeSrc":"5899:44:7","nodeType":"YulExpressionStatement","src":"5899:44:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":950,"isOffset":false,"isSlot":false,"src":"5871:10:7","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"5914:10:7","valueSize":1}],"flags":["memory-safe"],"id":957,"nodeType":"InlineAssembly","src":"5799:158:7"}]}}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"5435:103:7","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:7","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:7","nodeType":"VariableDeclaration","scope":967,"src":"5560:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:7"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"5598:0:7"},"scope":968,"src":"5543:487:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":969,"src":"233:5799:7","usedErrors":[719],"usedEvents":[]}],"src":"101:5932:7"},"id":7},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[990]},"id":991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":970,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"126:284:8","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":990,"linearizedBaseContracts":[990],"name":"Errors","nameLocation":"419:6:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"432:94:8","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":978,"name":"InsufficientBalance","nameLocation":"537:19:8","nodeType":"ErrorDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"balance","nameLocation":"565:7:8","nodeType":"VariableDeclaration","scope":978,"src":"557:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"needed","nameLocation":"582:6:8","nodeType":"VariableDeclaration","scope":978,"src":"574:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:8"},"src":"531:59:8"},{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"596:89:8","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":981,"name":"FailedCall","nameLocation":"696:10:8","nodeType":"ErrorDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"706:2:8"},"src":"690:19:8"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"715:46:8","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":984,"name":"FailedDeployment","nameLocation":"772:16:8","nodeType":"ErrorDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"788:2:8"},"src":"766:25:8"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"797:58:8","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":989,"name":"MissingPrecompile","nameLocation":"866:17:8","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"884:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:8"},"src":"860:33:8"}],"scope":991,"src":"411:484:8","usedErrors":[978,981,984,989],"usedEvents":[]}],"src":"100:796:8"},"id":8},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1059]},"id":1060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":992,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"135:894:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1059,"linearizedBaseContracts":[1059],"name":"ReentrancyGuard","nameLocation":"1048:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":996,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:9","nodeType":"VariableDeclaration","scope":1059,"src":"1818:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":999,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:9","nodeType":"VariableDeclaration","scope":1059,"src":"1864:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1001,"mutability":"mutable","name":"_status","nameLocation":"1923:7:9","nodeType":"VariableDeclaration","scope":1059,"src":"1907:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"1937:52:9","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1004,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:9","nodeType":"ErrorDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"2028:2:9"},"src":"1994:37:9"},{"body":{"id":1011,"nodeType":"Block","src":"2051:38:9","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"2061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1008,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2071:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"2061:21:9"}]},"id":1012,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"2048:2:9"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"2051:0:9"},"scope":1059,"src":"2037:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1022,"nodeType":"Block","src":"2490:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1015,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2500:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"2500:21:9"},{"id":1018,"nodeType":"PlaceholderStatement","src":"2531:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1019,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"2542:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"2542:20:9"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"2095:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1023,"name":"nonReentrant","nameLocation":"2475:12:9","nodeType":"ModifierDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"2487:2:9"},"src":"2466:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"2614:268:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"2702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1027,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"2713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1033,"nodeType":"IfStatement","src":"2698:86:9","trueBody":{"id":1032,"nodeType":"Block","src":"2722:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1029,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2743:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"RevertStatement","src":"2736:37:9"}]}},{"expression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1034,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1035,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"2868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1037,"nodeType":"ExpressionStatement","src":"2858:17:9"}]},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:9","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"2603:2:9"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"2614:0:9"},"scope":1059,"src":"2575:307:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1046,"nodeType":"Block","src":"2926:170:9","statements":[{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1042,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1043,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3078:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"nodeType":"ExpressionStatement","src":"3068:21:9"}]},"id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:9","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"2915:2:9"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"2926:0:9"},"scope":1059,"src":"2888:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1057,"nodeType":"Block","src":"3339:42:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1054,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"3367:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1052,"id":1056,"nodeType":"Return","src":"3349:25:9"}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"3102:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:9","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"3307:2:9"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"3333:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:9"},"scope":1059,"src":"3275:106:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1060,"src":"1030:2353:9","usedErrors":[1004],"usedEvents":[]}],"src":"109:3275:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1407]},"id":1408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"138:205:10","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1407,"linearizedBaseContracts":[1407],"name":"ECDSA","nameLocation":"352:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1067,"members":[{"id":1063,"name":"NoError","nameLocation":"392:7:10","nodeType":"EnumValue","src":"392:7:10"},{"id":1064,"name":"InvalidSignature","nameLocation":"409:16:10","nodeType":"EnumValue","src":"409:16:10"},{"id":1065,"name":"InvalidSignatureLength","nameLocation":"435:22:10","nodeType":"EnumValue","src":"435:22:10"},{"id":1066,"name":"InvalidSignatureS","nameLocation":"467:17:10","nodeType":"EnumValue","src":"467:17:10"}],"name":"RecoverError","nameLocation":"369:12:10","nodeType":"EnumDefinition","src":"364:126:10"},{"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"496:63:10","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1070,"name":"ECDSAInvalidSignature","nameLocation":"570:21:10","nodeType":"ErrorDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"591:2:10"},"src":"564:30:10"},{"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"600:60:10","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1075,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:10","nodeType":"ErrorDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"length","nameLocation":"707:6:10","nodeType":"VariableDeclaration","scope":1075,"src":"699:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:10"},"src":"665:50:10"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"721:85:10","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1080,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:10","nodeType":"ErrorDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"s","nameLocation":"848:1:10","nodeType":"VariableDeclaration","scope":1080,"src":"840:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:10"},"src":"811:40:10"},{"body":{"id":1132,"nodeType":"Block","src":"2285:622:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1095,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2299:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:10","memberName":"length","nodeType":"MemberAccess","src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1130,"nodeType":"Block","src":"2793:108:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1121,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2827:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"2827:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1125,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2872:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2872:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:10","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1094,"id":1129,"nodeType":"Return","src":"2807:83:10"}]},"id":1131,"nodeType":"IfStatement","src":"2295:606:10","trueBody":{"id":1116,"nodeType":"Block","src":"2323:464:10","statements":[{"assignments":[1100],"declarations":[{"constant":false,"id":1100,"mutability":"mutable","name":"r","nameLocation":"2345:1:10","nodeType":"VariableDeclaration","scope":1116,"src":"2337:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1101,"nodeType":"VariableDeclarationStatement","src":"2337:9:10"},{"assignments":[1103],"declarations":[{"constant":false,"id":1103,"mutability":"mutable","name":"s","nameLocation":"2368:1:10","nodeType":"VariableDeclaration","scope":1116,"src":"2360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1104,"nodeType":"VariableDeclarationStatement","src":"2360:9:10"},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"v","nameLocation":"2389:1:10","nodeType":"VariableDeclaration","scope":1116,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1105,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1107,"nodeType":"VariableDeclarationStatement","src":"2383:7:10"},{"AST":{"nativeSrc":"2560:171:10","nodeType":"YulBlock","src":"2560:171:10","statements":[{"nativeSrc":"2578:32:10","nodeType":"YulAssignment","src":"2578:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:10","nodeType":"YulIdentifier","src":"2593:9:10"},{"kind":"number","nativeSrc":"2604:4:10","nodeType":"YulLiteral","src":"2604:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:10","nodeType":"YulIdentifier","src":"2589:3:10"},"nativeSrc":"2589:20:10","nodeType":"YulFunctionCall","src":"2589:20:10"}],"functionName":{"name":"mload","nativeSrc":"2583:5:10","nodeType":"YulIdentifier","src":"2583:5:10"},"nativeSrc":"2583:27:10","nodeType":"YulFunctionCall","src":"2583:27:10"},"variableNames":[{"name":"r","nativeSrc":"2578:1:10","nodeType":"YulIdentifier","src":"2578:1:10"}]},{"nativeSrc":"2627:32:10","nodeType":"YulAssignment","src":"2627:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:10","nodeType":"YulIdentifier","src":"2642:9:10"},{"kind":"number","nativeSrc":"2653:4:10","nodeType":"YulLiteral","src":"2653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:10","nodeType":"YulIdentifier","src":"2638:3:10"},"nativeSrc":"2638:20:10","nodeType":"YulFunctionCall","src":"2638:20:10"}],"functionName":{"name":"mload","nativeSrc":"2632:5:10","nodeType":"YulIdentifier","src":"2632:5:10"},"nativeSrc":"2632:27:10","nodeType":"YulFunctionCall","src":"2632:27:10"},"variableNames":[{"name":"s","nativeSrc":"2627:1:10","nodeType":"YulIdentifier","src":"2627:1:10"}]},{"nativeSrc":"2676:41:10","nodeType":"YulAssignment","src":"2676:41:10","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:10","nodeType":"YulLiteral","src":"2686:1:10","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:10","nodeType":"YulIdentifier","src":"2699:9:10"},{"kind":"number","nativeSrc":"2710:4:10","nodeType":"YulLiteral","src":"2710:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:10","nodeType":"YulIdentifier","src":"2695:3:10"},"nativeSrc":"2695:20:10","nodeType":"YulFunctionCall","src":"2695:20:10"}],"functionName":{"name":"mload","nativeSrc":"2689:5:10","nodeType":"YulIdentifier","src":"2689:5:10"},"nativeSrc":"2689:27:10","nodeType":"YulFunctionCall","src":"2689:27:10"}],"functionName":{"name":"byte","nativeSrc":"2681:4:10","nodeType":"YulIdentifier","src":"2681:4:10"},"nativeSrc":"2681:36:10","nodeType":"YulFunctionCall","src":"2681:36:10"},"variableNames":[{"name":"v","nativeSrc":"2676:1:10","nodeType":"YulIdentifier","src":"2676:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1100,"isOffset":false,"isSlot":false,"src":"2578:1:10","valueSize":1},{"declaration":1103,"isOffset":false,"isSlot":false,"src":"2627:1:10","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"2593:9:10","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"2642:9:10","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"2699:9:10","valueSize":1},{"declaration":1106,"isOffset":false,"isSlot":false,"src":"2676:1:10","valueSize":1}],"flags":["memory-safe"],"id":1108,"nodeType":"InlineAssembly","src":"2535:196:10"},{"expression":{"arguments":[{"id":1110,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2762:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1111,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2768:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1112,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2771:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1113,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2774:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1109,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1133,1213,1321],"referencedDeclaration":1321,"src":"2751:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1094,"id":1115,"nodeType":"Return","src":"2744:32:10"}]}}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"857:1267:10","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:10","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"hash","nameLocation":"2166:4:10","nodeType":"VariableDeclaration","scope":1133,"src":"2158:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"signature","nameLocation":"2193:9:10","nodeType":"VariableDeclaration","scope":1133,"src":"2180:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:10"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:10","nodeType":"VariableDeclaration","scope":1133,"src":"2232:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"err","nameLocation":"2264:3:10","nodeType":"VariableDeclaration","scope":1133,"src":"2251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1090,"nodeType":"UserDefinedTypeName","pathNode":{"id":1089,"name":"RecoverError","nameLocations":["2251:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"2251:12:10"},"referencedDeclaration":1067,"src":"2251:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:10","nodeType":"VariableDeclaration","scope":1133,"src":"2269:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:10"},"scope":1407,"src":"2129:778:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"3801:168:10","statements":[{"assignments":[1144,1147,1149],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:10","nodeType":"VariableDeclaration","scope":1162,"src":"3812:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"error","nameLocation":"3844:5:10","nodeType":"VariableDeclaration","scope":1162,"src":"3831:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1146,"nodeType":"UserDefinedTypeName","pathNode":{"id":1145,"name":"RecoverError","nameLocations":["3831:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"3831:12:10"},"referencedDeclaration":1067,"src":"3831:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:10","nodeType":"VariableDeclaration","scope":1162,"src":"3851:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1154,"initialValue":{"arguments":[{"id":1151,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3882:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1152,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"3888:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1150,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1133,1213,1321],"referencedDeclaration":1133,"src":"3871:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:10"},{"expression":{"arguments":[{"id":1156,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"id":1157,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3927:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1155,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"3908:28:10"},{"expression":{"id":1160,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3953:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1142,"id":1161,"nodeType":"Return","src":"3946:16:10"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"2913:796:10","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:10","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"hash","nameLocation":"3739:4:10","nodeType":"VariableDeclaration","scope":1163,"src":"3731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"signature","nameLocation":"3758:9:10","nodeType":"VariableDeclaration","scope":1163,"src":"3745:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:10"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"3792:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:10"},"scope":1407,"src":"3714:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"4348:342:10","statements":[{"id":1211,"nodeType":"UncheckedBlock","src":"4358:326:10","statements":[{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"s","nameLocation":"4390:1:10","nodeType":"VariableDeclaration","scope":1211,"src":"4382:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1188,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"4394:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:10","typeDescriptions":{}}},"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:10"},{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"v","nameLocation":"4591:1:10","nodeType":"VariableDeclaration","scope":1211,"src":"4585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1189,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1195,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"4610:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:10","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1191,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:10","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:10"},{"expression":{"arguments":[{"id":1205,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4659:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1206,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4665:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1207,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"4668:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1208,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4671:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1204,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1133,1213,1321],"referencedDeclaration":1321,"src":"4648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1179,"id":1210,"nodeType":"Return","src":"4641:32:10"}]}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"3975:205:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:10","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"hash","nameLocation":"4222:4:10","nodeType":"VariableDeclaration","scope":1213,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"r","nameLocation":"4244:1:10","nodeType":"VariableDeclaration","scope":1213,"src":"4236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"vs","nameLocation":"4263:2:10","nodeType":"VariableDeclaration","scope":1213,"src":"4255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:10"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:10","nodeType":"VariableDeclaration","scope":1213,"src":"4295:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"err","nameLocation":"4327:3:10","nodeType":"VariableDeclaration","scope":1213,"src":"4314:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1175,"nodeType":"UserDefinedTypeName","pathNode":{"id":1174,"name":"RecoverError","nameLocations":["4314:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"4314:12:10"},"referencedDeclaration":1067,"src":"4314:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:10","nodeType":"VariableDeclaration","scope":1213,"src":"4332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:10"},"scope":1407,"src":"4185:505:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"4903:164:10","statements":[{"assignments":[1226,1229,1231],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:10","nodeType":"VariableDeclaration","scope":1245,"src":"4914:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"error","nameLocation":"4946:5:10","nodeType":"VariableDeclaration","scope":1245,"src":"4933:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"RecoverError","nameLocations":["4933:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"4933:12:10"},"referencedDeclaration":1067,"src":"4933:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:10","nodeType":"VariableDeclaration","scope":1245,"src":"4953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1237,"initialValue":{"arguments":[{"id":1233,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"4990:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1235,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"4993:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1232,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1133,1213,1321],"referencedDeclaration":1213,"src":"4973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:10"},{"expression":{"arguments":[{"id":1239,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5018:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"id":1240,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5025:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1238,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"5006:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"5006:28:10"},{"expression":{"id":1243,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5051:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1224,"id":1244,"nodeType":"Return","src":"5044:16:10"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"4696:116:10","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:10","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"hash","nameLocation":"4842:4:10","nodeType":"VariableDeclaration","scope":1246,"src":"4834:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"r","nameLocation":"4856:1:10","nodeType":"VariableDeclaration","scope":1246,"src":"4848:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"vs","nameLocation":"4867:2:10","nodeType":"VariableDeclaration","scope":1246,"src":"4859:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:10"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"4894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:10"},"scope":1407,"src":"4817:250:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"5382:1372:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1267,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6278:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:10","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6266:164:10","trueBody":{"id":1280,"nodeType":"Block","src":"6351:79:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:10","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1275,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6385:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"6385:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"id":1277,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6417:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1264,"id":1279,"nodeType":"Return","src":"6365:54:10"}]}},{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"signer","nameLocation":"6532:6:10","nodeType":"VariableDeclaration","scope":1320,"src":"6524:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1285,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1286,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6557:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1288,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6563:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1284,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6579:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:10","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"6575:113:10","trueBody":{"id":1309,"nodeType":"Block","src":"6601:87:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:10","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1301,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6635:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"6635:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:10","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1264,"id":1308,"nodeType":"Return","src":"6615:62:10"}]}},{"expression":{"components":[{"id":1311,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6706:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1312,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6714:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:10","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1264,"id":1319,"nodeType":"Return","src":"6698:49:10"}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"5073:125:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:10","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"hash","nameLocation":"5240:4:10","nodeType":"VariableDeclaration","scope":1321,"src":"5232:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"v","nameLocation":"5260:1:10","nodeType":"VariableDeclaration","scope":1321,"src":"5254:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1250,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"r","nameLocation":"5279:1:10","nodeType":"VariableDeclaration","scope":1321,"src":"5271:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"s","nameLocation":"5298:1:10","nodeType":"VariableDeclaration","scope":1321,"src":"5290:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:10"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:10","nodeType":"VariableDeclaration","scope":1321,"src":"5329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"err","nameLocation":"5361:3:10","nodeType":"VariableDeclaration","scope":1321,"src":"5348:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"RecoverError","nameLocations":["5348:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"5348:12:10"},"referencedDeclaration":1067,"src":"5348:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:10","nodeType":"VariableDeclaration","scope":1321,"src":"5366:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:10"},"scope":1407,"src":"5203:1551:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"6981:166:10","statements":[{"assignments":[1336,1339,1341],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:10","nodeType":"VariableDeclaration","scope":1356,"src":"6992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"error","nameLocation":"7024:5:10","nodeType":"VariableDeclaration","scope":1356,"src":"7011:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1338,"nodeType":"UserDefinedTypeName","pathNode":{"id":1337,"name":"RecoverError","nameLocations":["7011:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"7011:12:10"},"referencedDeclaration":1067,"src":"7011:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:10","nodeType":"VariableDeclaration","scope":1356,"src":"7031:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1348,"initialValue":{"arguments":[{"id":1343,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"7062:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1344,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7068:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1345,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"7071:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1346,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7074:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1342,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1133,1213,1321],"referencedDeclaration":1321,"src":"7051:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:10"},{"expression":{"arguments":[{"id":1350,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7098:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},{"id":1351,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7105:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1349,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"7086:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1067_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"7086:28:10"},{"expression":{"id":1354,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"7131:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1334,"id":1355,"nodeType":"Return","src":"7124:16:10"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"6760:122:10","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:10","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"hash","nameLocation":"6912:4:10","nodeType":"VariableDeclaration","scope":1357,"src":"6904:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"v","nameLocation":"6924:1:10","nodeType":"VariableDeclaration","scope":1357,"src":"6918:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1325,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"r","nameLocation":"6935:1:10","nodeType":"VariableDeclaration","scope":1357,"src":"6927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"s","nameLocation":"6946:1:10","nodeType":"VariableDeclaration","scope":1357,"src":"6938:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:10"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"6972:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:10"},"scope":1407,"src":"6887:260:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"7352:460:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7366:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1367,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7375:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"7375:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1373,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7471:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"7471:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7567:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1381,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7576:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"7576:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7701:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1393,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7710:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"7710:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"7697:109:10","trueBody":{"id":1400,"nodeType":"Block","src":"7742:64:10","statements":[{"errorCall":{"arguments":[{"id":1397,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1396,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"7763:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"7756:39:10"}]}},"id":1402,"nodeType":"IfStatement","src":"7563:243:10","trueBody":{"id":1391,"nodeType":"Block","src":"7613:78:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1387,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"7670:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:10","typeDescriptions":{}}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"7634:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"RevertStatement","src":"7627:53:10"}]}},"id":1403,"nodeType":"IfStatement","src":"7458:348:10","trueBody":{"id":1379,"nodeType":"Block","src":"7502:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1376,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7523:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"RevertStatement","src":"7516:30:10"}]}},"id":1404,"nodeType":"IfStatement","src":"7362:444:10","trueBody":{"id":1371,"nodeType":"Block","src":"7397:55:10","statements":[{"functionReturnParameters":1365,"id":1370,"nodeType":"Return","src":"7411:7:10"}]}}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"7153:122:10","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:10","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"error","nameLocation":"7314:5:10","nodeType":"VariableDeclaration","scope":1406,"src":"7301:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1360,"nodeType":"UserDefinedTypeName","pathNode":{"id":1359,"name":"RecoverError","nameLocations":["7301:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"7301:12:10"},"referencedDeclaration":1067,"src":"7301:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:10","nodeType":"VariableDeclaration","scope":1406,"src":"7321:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:10"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"7352:0:10"},"scope":1407,"src":"7280:532:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1408,"src":"344:7470:10","usedErrors":[1070,1075,1080],"usedEvents":[]}],"src":"112:7703:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"ECDSA":[1407],"IERC1271":[13],"SignatureChecker":[1515]},"id":1516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1409,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1516,"sourceUnit":1408,"src":"149:34:11","symbolAliases":[{"foreign":{"id":1410,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"157:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":1413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1516,"sourceUnit":14,"src":"184:55:11","symbolAliases":[{"foreign":{"id":1412,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"192:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"241:290:11","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"id":1515,"linearizedBaseContracts":[1515],"name":"SignatureChecker","nameLocation":"540:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1461,"nodeType":"Block","src":"1153:317:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1426,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1167:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1174:4:11","memberName":"code","nodeType":"MemberAccess","src":"1167:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:11","memberName":"length","nodeType":"MemberAccess","src":"1167:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1167:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1459,"nodeType":"Block","src":"1381:83:11","statements":[{"expression":{"arguments":[{"id":1454,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1429:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1455,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1437:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1456,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1443:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1453,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"1402:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1458,"nodeType":"Return","src":"1395:58:11"}]},"id":1460,"nodeType":"IfStatement","src":"1163:301:11","trueBody":{"id":1452,"nodeType":"Block","src":"1192:183:11","statements":[{"assignments":[1432,1435,null],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"recovered","nameLocation":"1215:9:11","nodeType":"VariableDeclaration","scope":1452,"src":"1207:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"err","nameLocation":"1245:3:11","nodeType":"VariableDeclaration","scope":1452,"src":"1226:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"ECDSA.RecoverError","nameLocations":["1226:5:11","1232:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"1226:18:11"},"referencedDeclaration":1067,"src":"1226:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":1441,"initialValue":{"arguments":[{"id":1438,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1271:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1439,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1277:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1436,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"1254:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1407_$","typeString":"type(library ECDSA)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1260:10:11","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"1254:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1067_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1206:81:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1308:3:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1443,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"1315:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1407_$","typeString":"type(library ECDSA)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1321:12:11","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"1315:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1067_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1334:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"1315:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1067","typeString":"enum ECDSA.RecoverError"}},"src":"1308:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1345:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1448,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1358:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1345:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1308:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1451,"nodeType":"Return","src":"1301:63:11"}]}}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"563:473:11","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1050:19:11","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"signer","nameLocation":"1078:6:11","nodeType":"VariableDeclaration","scope":1462,"src":"1070:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"hash","nameLocation":"1094:4:11","nodeType":"VariableDeclaration","scope":1462,"src":"1086:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1086:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"signature","nameLocation":"1113:9:11","nodeType":"VariableDeclaration","scope":1462,"src":"1100:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"1100:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:54:11"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"1147:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"1147:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1146:6:11"},"scope":1515,"src":"1041:429:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1513,"nodeType":"Block","src":"2026:309:11","statements":[{"assignments":[1475,1477],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"success","nameLocation":"2042:7:11","nodeType":"VariableDeclaration","scope":1513,"src":"2037:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1474,"name":"bool","nodeType":"ElementaryTypeName","src":"2037:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"result","nameLocation":"2064:6:11","nodeType":"VariableDeclaration","scope":1513,"src":"2051:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1476,"name":"bytes","nodeType":"ElementaryTypeName","src":"2051:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1489,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1482,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2120:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2129:16:11","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2120:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":1484,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2148:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1485,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2154:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2147:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":1480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2105:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2109:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"2105:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1478,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2074:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2081:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"2074:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2036:139:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2193:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2216:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2223:6:11","memberName":"length","nodeType":"MemberAccess","src":"2216:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2233:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2216:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2262:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2271:7:11","typeDescriptions":{}}}],"id":1501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2270:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":1496,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2251:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2255:6:11","memberName":"decode","nodeType":"MemberAccess","src":"2251:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1505,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2292:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2301:16:11","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2292:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2318:8:11","memberName":"selector","nodeType":"MemberAccess","src":"2292:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{}}},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2251:76:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:134:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2192:136:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1473,"id":1512,"nodeType":"Return","src":"2185:143:11"}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"1476:396:11","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC-1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1886:26:11","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"signer","nameLocation":"1930:6:11","nodeType":"VariableDeclaration","scope":1514,"src":"1922:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"hash","nameLocation":"1954:4:11","nodeType":"VariableDeclaration","scope":1514,"src":"1946:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1946:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"signature","nameLocation":"1981:9:11","nodeType":"VariableDeclaration","scope":1514,"src":"1968:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1468,"name":"bytes","nodeType":"ElementaryTypeName","src":"1968:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1912:84:11"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"2020:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"2020:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2019:6:11"},"scope":1515,"src":"1877:458:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1516,"src":"532:1805:11","usedErrors":[],"usedEvents":[]}],"src":"123:2215:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1527]},"id":1528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1527,"linearizedBaseContracts":[1527],"name":"IERC165","nameLocation":"432:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1526,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":1526,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1520,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":1527,"src":"791:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1528,"src":"422:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:755:12"},"id":12},"contracts/N2D-ERC6551-Account.sol":{"ast":{"absolutePath":"contracts/N2D-ERC6551-Account.sol","exportedSymbols":{"Address":[968],"Bytecode":[2099],"ECDSA":[1407],"ERC6551Account":[1987],"IERC1271":[13],"IERC1363":[95],"IERC165":[1527],"IERC20":[181],"IERC6551Account":[2194],"IERC6551AccountProxy":[2152],"IERC6551Registry":[2146],"IERC721":[709],"ReentrancyGuard":[1059],"SafeERC20":[592],"SignatureChecker":[1515]},"id":1988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1529,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"1442:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1528,"src":"1470:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":182,"src":"1537:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":593,"src":"1595:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":1533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":14,"src":"1662:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":710,"src":"1754:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1516,"src":"1814:73:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/IERC6551.sol","file":"../imports/IERC6551.sol","id":1536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":2195,"src":"2139:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/ERC6551Bytecode.sol","file":"../imports/ERC6551Bytecode.sol","id":1537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":2100,"src":"2174:40:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1060,"src":"2216:59:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1539,"name":"IERC165","nameLocations":["2360:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"2360:7:13"},"id":1540,"nodeType":"InheritanceSpecifier","src":"2360:7:13"},{"baseName":{"id":1541,"name":"IERC1271","nameLocations":["2369:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"2369:8:13"},"id":1542,"nodeType":"InheritanceSpecifier","src":"2369:8:13"},{"baseName":{"id":1543,"name":"IERC6551Account","nameLocations":["2379:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":2194,"src":"2379:15:13"},"id":1544,"nodeType":"InheritanceSpecifier","src":"2379:15:13"},{"baseName":{"id":1545,"name":"ReentrancyGuard","nameLocations":["2396:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"2396:15:13"},"id":1546,"nodeType":"InheritanceSpecifier","src":"2396:15:13"}],"canonicalName":"ERC6551Account","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1987,"linearizedBaseContracts":[1987,1059,2194,13,1527],"name":"ERC6551Account","nameLocation":"2342:14:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1550,"libraryName":{"id":1547,"name":"SafeERC20","nameLocations":["2425:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"2425:9:13"},"nodeType":"UsingForDirective","src":"2419:27:13","typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"IERC20","nameLocations":["2439:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2439:6:13"},"referencedDeclaration":181,"src":"2439:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}},{"errorSelector":"ffb4324a","id":1552,"name":"ERC6551Account__NotOwner","nameLocation":"2604:24:13","nodeType":"ErrorDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"2628:2:13"},"src":"2598:33:13"},{"errorSelector":"73c632db","id":1554,"name":"ERC6551Account__ExternalCallFailed","nameLocation":"2643:34:13","nodeType":"ErrorDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"2677:2:13"},"src":"2637:43:13"},{"errorSelector":"3ecc75d0","id":1556,"name":"ERC6551Account__LowBalanceToTransferFunds","nameLocation":"2692:41:13","nodeType":"ErrorDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"2733:2:13"},"src":"2686:50:13"},{"errorSelector":"c82bbf74","id":1558,"name":"ERC6551Account__LowERC20TokenBalance","nameLocation":"2748:36:13","nodeType":"ErrorDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"2784:2:13"},"src":"2742:45:13"},{"errorSelector":"c2691162","id":1560,"name":"ERC6551Account__FailedDueToZeroAddressTransfer","nameLocation":"2799:46:13","nodeType":"ErrorDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"2845:2:13"},"src":"2793:55:13"},{"errorSelector":"116c1ed2","id":1562,"name":"ERC6551Account__IncorrectArraySize","nameLocation":"2860:34:13","nodeType":"ErrorDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"2894:2:13"},"src":"2854:43:13"},{"baseFunctions":[2174],"body":{"id":1627,"nodeType":"Block","src":"3036:569:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3051:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"3057:7:13","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3051:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1585,"nodeType":"IfStatement","src":"3047:104:13","trueBody":{"id":1584,"nodeType":"Block","src":"3069:82:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1581,"name":"ERC6551Account__FailedDueToZeroAddressTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"3091:46:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3091:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"RevertStatement","src":"3084:55:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3175:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3175:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"3189:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3189:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3175:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1595,"nodeType":"IfStatement","src":"3171:87:13","trueBody":{"id":1594,"nodeType":"Block","src":"3198:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1591,"name":"ERC6551Account__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3220:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"RevertStatement","src":"3213:33:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3282:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3274:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"3274:7:13","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3274:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3288:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3274:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"3298:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3274:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"3270:112:13","trueBody":{"id":1606,"nodeType":"Block","src":"3305:77:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1603,"name":"ERC6551Account__LowBalanceToTransferFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3327:41:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"RevertStatement","src":"3320:50:13"}]}},{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"success","nameLocation":"3399:7:13","nodeType":"VariableDeclaration","scope":1627,"src":"3394:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1608,"name":"bool","nodeType":"ElementaryTypeName","src":"3394:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1610,"nodeType":"VariableDeclarationStatement","src":"3394:12:13"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1611,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3418:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3427:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1613,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3417:17:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3459:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3437:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3440:4:13","memberName":"call","nodeType":"MemberAccess","src":"3437:7:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"3452:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3437:21:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"3417:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"ExpressionStatement","src":"3417:47:13"},{"condition":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3481:8:13","subExpression":{"id":1622,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3482:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"nodeType":"IfStatement","src":"3477:121:13","trueBody":{"id":1625,"nodeType":"Block","src":"3491:107:13","statements":[{"AST":{"nativeSrc":"3515:72:13","nodeType":"YulBlock","src":"3515:72:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"3545:6:13","nodeType":"YulIdentifier","src":"3545:6:13"},{"kind":"number","nativeSrc":"3553:2:13","nodeType":"YulLiteral","src":"3553:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3541:3:13","nodeType":"YulIdentifier","src":"3541:3:13"},"nativeSrc":"3541:15:13","nodeType":"YulFunctionCall","src":"3541:15:13"},{"arguments":[{"name":"result","nativeSrc":"3564:6:13","nodeType":"YulIdentifier","src":"3564:6:13"}],"functionName":{"name":"mload","nativeSrc":"3558:5:13","nodeType":"YulIdentifier","src":"3558:5:13"},"nativeSrc":"3558:13:13","nodeType":"YulFunctionCall","src":"3558:13:13"}],"functionName":{"name":"revert","nativeSrc":"3534:6:13","nodeType":"YulIdentifier","src":"3534:6:13"},"nativeSrc":"3534:38:13","nodeType":"YulFunctionCall","src":"3534:38:13"},"nativeSrc":"3534:38:13","nodeType":"YulExpressionStatement","src":"3534:38:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1573,"isOffset":false,"isSlot":false,"src":"3545:6:13","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"3564:6:13","valueSize":1}],"id":1624,"nodeType":"InlineAssembly","src":"3506:81:13"}]}}]},"functionSelector":"9e5d4c49","id":1628,"implemented":true,"kind":"function","modifiers":[{"id":1571,"kind":"modifierInvocation","modifierName":{"id":1570,"name":"nonReentrant","nameLocations":["2992:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"2992:12:13"},"nodeType":"ModifierInvocation","src":"2992:12:13"}],"name":"executeCall","nameLocation":"2916:11:13","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"to","nameLocation":"2936:2:13","nodeType":"VariableDeclaration","scope":1628,"src":"2928:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"2947:5:13","nodeType":"VariableDeclaration","scope":1628,"src":"2939:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2939:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"data","nameLocation":"2969:4:13","nodeType":"VariableDeclaration","scope":1628,"src":"2954:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1567,"name":"bytes","nodeType":"ElementaryTypeName","src":"2954:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2927:47:13"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"result","nameLocation":"3027:6:13","nodeType":"VariableDeclaration","scope":1628,"src":"3014:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"3014:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3013:21:13"},"scope":1987,"src":"2907:698:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1726,"nodeType":"Block","src":"3720:823:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"3749:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3735:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"3731:87:13","trueBody":{"id":1647,"nodeType":"Block","src":"3758:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1644,"name":"ERC6551Account__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3780:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3780:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"RevertStatement","src":"3773:33:13"}]}},{"assignments":[1650],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"toArraySize","nameLocation":"3838:11:13","nodeType":"VariableDeclaration","scope":1726,"src":"3830:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1653,"initialValue":{"expression":{"id":1651,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"3852:2:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3855:6:13","memberName":"length","nodeType":"MemberAccess","src":"3852:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3830:31:13"},{"assignments":[1655],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"amountsArraySize","nameLocation":"3880:16:13","nodeType":"VariableDeclaration","scope":1726,"src":"3872:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3872:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1658,"initialValue":{"expression":{"id":1656,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"3899:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3907:6:13","memberName":"length","nodeType":"MemberAccess","src":"3899:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3872:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"toArraySize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"3930:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1660,"name":"amountsArraySize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3945:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3930:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"3926:107:13","trueBody":{"id":1665,"nodeType":"Block","src":"3963:70:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"ERC6551Account__IncorrectArraySize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3985:34:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"RevertStatement","src":"3978:43:13"}]}},{"body":{"id":1724,"nodeType":"Block","src":"4087:449:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1679,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4114:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4106:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"4106:7:13","typeDescriptions":{}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4120:7:13","memberName":"balance","nodeType":"MemberAccess","src":"4106:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":1682,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"4130:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1684,"indexExpression":{"id":1683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4138:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4130:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4106:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"4102:121:13","trueBody":{"id":1689,"nodeType":"Block","src":"4142:81:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1686,"name":"ERC6551Account__LowBalanceToTransferFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4164:41:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4164:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"RevertStatement","src":"4157:50:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4243:2:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1693,"indexExpression":{"id":1692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4246:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4243:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4260:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4252:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:13","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4243:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1703,"nodeType":"IfStatement","src":"4239:111:13","trueBody":{"id":1702,"nodeType":"Block","src":"4264:86:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1699,"name":"ERC6551Account__FailedDueToZeroAddressTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4286:46:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4286:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"RevertStatement","src":"4279:55:13"}]}},{"assignments":[1705,null],"declarations":[{"constant":false,"id":1705,"mutability":"mutable","name":"success","nameLocation":"4372:7:13","nodeType":"VariableDeclaration","scope":1724,"src":"4367:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1704,"name":"bool","nodeType":"ElementaryTypeName","src":"4367:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1716,"initialValue":{"arguments":[{"hexValue":"","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4415:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"baseExpression":{"id":1706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4385:2:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1708,"indexExpression":{"id":1707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4388:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4385:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4391:4:13","memberName":"call","nodeType":"MemberAccess","src":"4385:10:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"baseExpression":{"id":1710,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"4403:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1712,"indexExpression":{"id":1711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4411:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4403:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4385:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4366:52:13"},{"condition":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4437:8:13","subExpression":{"id":1717,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4438:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"nodeType":"IfStatement","src":"4433:92:13","trueBody":{"id":1722,"nodeType":"Block","src":"4447:78:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1719,"name":"ERC6551Account__ExternalCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4473:34:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4473:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1721,"nodeType":"RevertStatement","src":"4466:43:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4065:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1672,"name":"toArraySize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"4069:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4065:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1725,"initializationExpression":{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"i","nameLocation":"4058:1:13","nodeType":"VariableDeclaration","scope":1725,"src":"4050:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"4050:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"hexValue":"30","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4062:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4050:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4082:3:13","subExpression":{"id":1674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4082:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"4082:3:13"},"nodeType":"ForStatement","src":"4045:491:13"}]},"functionSelector":"3b3b687c","id":1727,"implemented":true,"kind":"function","modifiers":[{"id":1637,"kind":"modifierInvocation","modifierName":{"id":1636,"name":"nonReentrant","nameLocations":["3707:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"3707:12:13"},"nodeType":"ModifierInvocation","src":"3707:12:13"}],"name":"batchTransferEth","nameLocation":"3622:16:13","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"to","nameLocation":"3658:2:13","nodeType":"VariableDeclaration","scope":1727,"src":"3639:21:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"3639:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1630,"nodeType":"ArrayTypeName","src":"3639:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"amounts","nameLocation":"3681:7:13","nodeType":"VariableDeclaration","scope":1727,"src":"3662:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3662:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"nodeType":"ArrayTypeName","src":"3662:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3638:51:13"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"3720:0:13"},"scope":1987,"src":"3613:930:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1785,"nodeType":"Block","src":"4651:506:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4666:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4680:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4672:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"4672:7:13","typeDescriptions":{}}},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4672:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4666:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1746,"nodeType":"IfStatement","src":"4662:104:13","trueBody":{"id":1745,"nodeType":"Block","src":"4684:82:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1742,"name":"ERC6551Account__FailedDueToZeroAddressTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4706:46:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4706:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"RevertStatement","src":"4699:55:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4790:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4790:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1749,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"4804:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4804:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4790:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"nodeType":"IfStatement","src":"4786:87:13","trueBody":{"id":1755,"nodeType":"Block","src":"4813:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1752,"name":"ERC6551Account__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4835:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4835:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"RevertStatement","src":"4828:33:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1759,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4897:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4889:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"4889:7:13","typeDescriptions":{}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4903:7:13","memberName":"balance","nodeType":"MemberAccess","src":"4889:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1762,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"4913:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4889:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1768,"nodeType":"IfStatement","src":"4885:113:13","trueBody":{"id":1767,"nodeType":"Block","src":"4921:77:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1764,"name":"ERC6551Account__LowBalanceToTransferFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4943:41:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1766,"nodeType":"RevertStatement","src":"4936:50:13"}]}},{"assignments":[1770,null],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"success","nameLocation":"5016:7:13","nodeType":"VariableDeclaration","scope":1785,"src":"5011:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1769,"name":"bool","nodeType":"ElementaryTypeName","src":"5011:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1777,"initialValue":{"arguments":[{"hexValue":"","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5052:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1771,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5029:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5032:4:13","memberName":"call","nodeType":"MemberAccess","src":"5029:7:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5044:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5029:22:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5010:45:13"},{"condition":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5070:8:13","subExpression":{"id":1778,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5071:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1784,"nodeType":"IfStatement","src":"5066:84:13","trueBody":{"id":1783,"nodeType":"Block","src":"5080:70:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1780,"name":"ERC6551Account__ExternalCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"5102:34:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5102:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1782,"nodeType":"RevertStatement","src":"5095:43:13"}]}}]},"functionSelector":"18a70da9","id":1786,"implemented":true,"kind":"function","modifiers":[{"id":1734,"kind":"modifierInvocation","modifierName":{"id":1733,"name":"nonReentrant","nameLocations":["4638:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"4638:12:13"},"nodeType":"ModifierInvocation","src":"4638:12:13"}],"name":"simpleEthTransferAccount","nameLocation":"4560:24:13","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"to","nameLocation":"4601:2:13","nodeType":"VariableDeclaration","scope":1786,"src":"4585:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"4585:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"amount","nameLocation":"4613:6:13","nodeType":"VariableDeclaration","scope":1786,"src":"4605:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4584:36:13"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"4651:0:13"},"scope":1987,"src":"4551:606:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1844,"nodeType":"Block","src":"5345:451:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"5360:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5374:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5366:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"5366:7:13","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"IfStatement","src":"5356:104:13","trueBody":{"id":1807,"nodeType":"Block","src":"5378:82:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1804,"name":"ERC6551Account__FailedDueToZeroAddressTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"5400:46:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5400:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"RevertStatement","src":"5393:55:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1809,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5484:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5488:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5484:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"5498:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5484:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"5480:87:13","trueBody":{"id":1817,"nodeType":"Block","src":"5507:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1814,"name":"ERC6551Account__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"5529:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"RevertStatement","src":"5522:33:13"}]}},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"balance","nameLocation":"5587:7:13","nodeType":"VariableDeclaration","scope":1844,"src":"5579:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5579:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1828,"initialValue":{"arguments":[{"arguments":[{"id":1825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5629:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5621:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"5621:7:13","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1821,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5597:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5611:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":138,"src":"5597:23:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5579:56:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5652:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1830,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5662:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5652:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"5648:94:13","trueBody":{"id":1835,"nodeType":"Block","src":"5670:72:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1832,"name":"ERC6551Account__LowERC20TokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"5692:36:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"RevertStatement","src":"5685:45:13"}]}},{"expression":{"arguments":[{"id":1840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"5777:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5781:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1837,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5754:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5768:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"5754:22:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"nodeType":"ExpressionStatement","src":"5754:34:13"}]},"functionSelector":"24bd11e2","id":1845,"implemented":true,"kind":"function","modifiers":[{"id":1796,"kind":"modifierInvocation","modifierName":{"id":1795,"name":"nonReentrant","nameLocations":["5332:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1023,"src":"5332:12:13"},"nodeType":"ModifierInvocation","src":"5332:12:13"}],"name":"sendCustomErcTransfer","nameLocation":"5251:21:13","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"to","nameLocation":"5281:2:13","nodeType":"VariableDeclaration","scope":1845,"src":"5273:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"5273:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"amount","nameLocation":"5293:6:13","nodeType":"VariableDeclaration","scope":1845,"src":"5285:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"erc20contract","nameLocation":"5308:13:13","nodeType":"VariableDeclaration","scope":1845,"src":"5301:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":1792,"nodeType":"UserDefinedTypeName","pathNode":{"id":1791,"name":"IERC20","nameLocations":["5301:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"5301:6:13"},"referencedDeclaration":181,"src":"5301:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5272:50:13"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[],"src":"5345:0:13"},"scope":1987,"src":"5242:554:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2183],"body":{"id":1885,"nodeType":"Block","src":"5902:173:13","statements":[{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"length","nameLocation":"5921:6:13","nodeType":"VariableDeclaration","scope":1885,"src":"5913:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"5913:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1862,"initialValue":{"expression":{"expression":{"arguments":[{"id":1858,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5938:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5930:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"5930:7:13","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5944:4:13","memberName":"code","nodeType":"MemberAccess","src":"5930:18:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5949:6:13","memberName":"length","nodeType":"MemberAccess","src":"5930:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5913:42:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1869,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6008:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6000:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"6000:7:13","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6000:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6015:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783630","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6024:4:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"src":"6015:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1874,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6030:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1865,"name":"Bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"5984:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Bytecode_$2099_$","typeString":"type(library Bytecode)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5993:6:13","memberName":"codeAt","nodeType":"MemberAccess","referencedDeclaration":2098,"src":"5984:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,uint256) view returns (bytes memory)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5984:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6040:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6040:7:13","typeDescriptions":{}}},{"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6049:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"6049:7:13","typeDescriptions":{}}},{"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6058:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:13","typeDescriptions":{}}}],"id":1882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6039:27:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}],"expression":{"id":1863,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5973:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5977:6:13","memberName":"decode","nodeType":"MemberAccess","src":"5973:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:94:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$","typeString":"tuple(uint256,address payable,uint256)"}},"functionReturnParameters":1853,"id":1884,"nodeType":"Return","src":"5966:101:13"}]},"functionSelector":"b553fe1e","id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"5813:7:13","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"5820:2:13"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"chainId","nameLocation":"5853:7:13","nodeType":"VariableDeclaration","scope":1886,"src":"5845:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5845:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"tokenContract","nameLocation":"5870:13:13","nodeType":"VariableDeclaration","scope":1886,"src":"5862:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"tokenId","nameLocation":"5893:7:13","nodeType":"VariableDeclaration","scope":1886,"src":"5885:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"5885:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5844:57:13"},"scope":1987,"src":"5804:271:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2188],"body":{"id":1918,"nodeType":"Block","src":"6130:208:13","statements":[{"assignments":[1892,1894,1896],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"chainId","nameLocation":"6150:7:13","nodeType":"VariableDeclaration","scope":1918,"src":"6142:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6142:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"tokenContract","nameLocation":"6167:13:13","nodeType":"VariableDeclaration","scope":1918,"src":"6159:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"6159:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"tokenId","nameLocation":"6190:7:13","nodeType":"VariableDeclaration","scope":1918,"src":"6182:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6182:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1900,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1897,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6201:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1987","typeString":"contract ERC6551Account"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6206:7:13","memberName":"nftInfo","nodeType":"MemberAccess","referencedDeclaration":1886,"src":"6201:12:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$","typeString":"function () view external returns (uint256,address,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_uint256_$","typeString":"tuple(uint256,address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6141:74:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1902,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6241:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6247:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"6241:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6230:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1910,"nodeType":"IfStatement","src":"6226:47:13","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6271:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6263:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"6263:7:13","typeDescriptions":{}}},"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1890,"id":1909,"nodeType":"Return","src":"6256:17:13"}},{"expression":{"arguments":[{"id":1915,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"6322:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1912,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6299:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1911,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6291:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$709_$","typeString":"type(contract IERC721)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6291:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$709","typeString":"contract IERC721"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6314:7:13","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":642,"src":"6291:30:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6291:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1890,"id":1917,"nodeType":"Return","src":"6284:46:13"}]},"functionSelector":"8da5cb5b","id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"6092:5:13","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"6097:2:13"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"6121:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"6121:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6120:9:13"},"scope":1987,"src":"6083:255:13","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1526],"body":{"id":1941,"nodeType":"Block","src":"6420:133:13","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"6439:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1928,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"6459:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1527_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1527_$","typeString":"type(contract IERC165)"}],"id":1927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6454:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6454:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1527","typeString":"type(contract IERC165)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6468:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"6454:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6439:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"6496:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1934,"name":"IERC6551Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"6516:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2194_$","typeString":"type(contract IERC6551Account)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2194_$","typeString":"type(contract IERC6551Account)"}],"id":1933,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6511:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6551Account_$2194","typeString":"type(contract IERC6551Account)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6533:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"6511:33:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6496:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6439:105:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6438:107:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1925,"id":1940,"nodeType":"Return","src":"6431:114:13"}]},"functionSelector":"01ffc9a7","id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6355:17:13","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"interfaceId","nameLocation":"6380:11:13","nodeType":"VariableDeclaration","scope":1942,"src":"6373:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1920,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6373:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6372:20:13"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"6414:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"6414:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6413:6:13"},"scope":1987,"src":"6346:207:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[12],"body":{"id":1970,"nodeType":"Block","src":"6668:211:13","statements":[{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"mutability":"mutable","name":"isValid","nameLocation":"6684:7:13","nodeType":"VariableDeclaration","scope":1970,"src":"6679:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"6679:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1960,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1955,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"6732:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6732:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"6741:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1958,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6747:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1953,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6694:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$1515_$","typeString":"type(library SignatureChecker)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6711:19:13","memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"6694:36:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6694:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6679:78:13"},{"condition":{"id":1961,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6772:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"nodeType":"IfStatement","src":"6768:81:13","trueBody":{"id":1966,"nodeType":"Block","src":"6781:68:13","statements":[{"expression":{"expression":{"expression":{"id":1962,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"6803:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6812:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"6803:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6829:8:13","memberName":"selector","nodeType":"MemberAccess","src":"6803:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1950,"id":1965,"nodeType":"Return","src":"6796:41:13"}]}},{"expression":{"hexValue":"656e64","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6866:5:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbfd0a3465675fb6072dc027b2ca829f00701c4aabf226bef22a34354af88877","typeString":"literal_string \"end\""},"value":"end"},"functionReturnParameters":1950,"id":1969,"nodeType":"Return","src":"6859:12:13"}]},"functionSelector":"1626ba7e","id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"6570:16:13","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"hash","nameLocation":"6596:4:13","nodeType":"VariableDeclaration","scope":1971,"src":"6588:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6588:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"signature","nameLocation":"6615:9:13","nodeType":"VariableDeclaration","scope":1971,"src":"6602:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1945,"name":"bytes","nodeType":"ElementaryTypeName","src":"6602:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6586:39:13"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"signValues","nameLocation":"6656:10:13","nodeType":"VariableDeclaration","scope":1971,"src":"6649:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1948,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6649:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6648:19:13"},"scope":1987,"src":"6561:318:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2193],"body":{"id":1977,"nodeType":"Block","src":"6945:2:13","statements":[]},"functionSelector":"affed0e0","id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"6896:5:13","nodeType":"FunctionDefinition","overrides":{"id":1973,"nodeType":"OverrideSpecifier","overrides":[],"src":"6918:8:13"},"parameters":{"id":1972,"nodeType":"ParameterList","parameters":[],"src":"6901:2:13"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"6936:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"6936:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6935:9:13"},"scope":1987,"src":"6887:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2163],"body":{"id":1981,"nodeType":"Block","src":"6980:2:13","statements":[]},"id":1982,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"6960:2:13"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"6980:0:13"},"scope":1987,"src":"6953:29:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1985,"nodeType":"Block","src":"7018:2:13","statements":[]},"id":1986,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"6998:2:13"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"7018:0:13"},"scope":1987,"src":"6990:30:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1988,"src":"2333:4690:13","usedErrors":[1004,1552,1554,1556,1558,1560,1562,1997],"usedEvents":[2160]}],"src":"1442:5581:13"},"id":13},"imports/ERC6551Bytecode.sol":{"ast":{"absolutePath":"imports/ERC6551Bytecode.sol","exportedSymbols":{"Bytecode":[2099]},"id":2100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1989,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"32:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Bytecode","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2099,"linearizedBaseContracts":[2099],"name":"Bytecode","nameLocation":"67:8:14","nodeType":"ContractDefinition","nodes":[{"errorSelector":"2c4a89fa","id":1997,"name":"InvalidCodeAtRange","nameLocation":"86:18:14","nodeType":"ErrorDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"_size","nameLocation":"113:5:14","nodeType":"VariableDeclaration","scope":1997,"src":"105:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"_start","nameLocation":"128:6:14","nodeType":"VariableDeclaration","scope":1997,"src":"120:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"_end","nameLocation":"144:4:14","nodeType":"VariableDeclaration","scope":1997,"src":"136:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:45:14"},"src":"80:70:14"},{"body":{"id":2017,"nodeType":"Block","src":"461:618:14","statements":[{"expression":{"arguments":[{"hexValue":"63","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"981:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},"value":"c"},{"arguments":[{"expression":{"id":2010,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"1003:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1009:6:14","memberName":"length","nodeType":"MemberAccess","src":"1003:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2008,"name":"uint32","nodeType":"ElementaryTypeName","src":"996:6:14","typeDescriptions":{}}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"80600e6000396000f3","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1024:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""}},{"id":2014,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"1063:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2005,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"957:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"961:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"957:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:117:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2004,"id":2016,"nodeType":"Return","src":"950:124:14"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"154:222:14","text":"@notice Generate a creation code that results on a contract with `_code` as bytecode\n@param _code The returning value of the resulting `creationCode`\n@return creationCode (constructor) for new contract"},"id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"creationCodeFor","nameLocation":"388:15:14","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"_code","nameLocation":"417:5:14","nodeType":"VariableDeclaration","scope":2018,"src":"404:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"403:20:14"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2018,"src":"447:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"447:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"446:14:14"},"scope":2099,"src":"379:700:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2027,"nodeType":"Block","src":"1332:49:14","statements":[{"AST":{"nativeSrc":"1347:30:14","nodeType":"YulBlock","src":"1347:30:14","statements":[{"nativeSrc":"1349:26:14","nodeType":"YulAssignment","src":"1349:26:14","value":{"arguments":[{"name":"_addr","nativeSrc":"1369:5:14","nodeType":"YulIdentifier","src":"1369:5:14"}],"functionName":{"name":"extcodesize","nativeSrc":"1357:11:14","nodeType":"YulIdentifier","src":"1357:11:14"},"nativeSrc":"1357:18:14","nodeType":"YulFunctionCall","src":"1357:18:14"},"variableNames":[{"name":"size","nativeSrc":"1349:4:14","nodeType":"YulIdentifier","src":"1349:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2021,"isOffset":false,"isSlot":false,"src":"1369:5:14","valueSize":1},{"declaration":2024,"isOffset":false,"isSlot":false,"src":"1349:4:14","valueSize":1}],"id":2026,"nodeType":"InlineAssembly","src":"1338:39:14"}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"1083:176:14","text":"@notice Returns the size of the code on a given address\n@param _addr Address that may or may not contain code\n@return size of the code on the given `_addr`"},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"codeSize","nameLocation":"1271:8:14","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"_addr","nameLocation":"1288:5:14","nodeType":"VariableDeclaration","scope":2028,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2020,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1279:15:14"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"size","nameLocation":"1326:4:14","nodeType":"VariableDeclaration","scope":2028,"src":"1318:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:14:14"},"scope":2099,"src":"1262:119:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2097,"nodeType":"Block","src":"1898:842:14","statements":[{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"csize","nameLocation":"1912:5:14","nodeType":"VariableDeclaration","scope":2097,"src":"1904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2045,"initialValue":{"arguments":[{"id":2043,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1929:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2042,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1920:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1904:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1945:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1954:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1945:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"1941:32:14","trueBody":{"expression":{"arguments":[{"hexValue":"","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1970:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1964:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2049,"name":"bytes","nodeType":"ElementaryTypeName","src":"1964:5:14","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2039,"id":2053,"nodeType":"Return","src":"1957:16:14"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1984:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2056,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1993:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1984:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"1980:36:14","trueBody":{"expression":{"arguments":[{"hexValue":"","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2013:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2007:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"2007:5:14","typeDescriptions":{}}},"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2039,"id":2062,"nodeType":"Return","src":"2000:16:14"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2026:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2065,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2033:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2026:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"IfStatement","src":"2022:65:14","trueBody":{"errorCall":{"arguments":[{"id":2068,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2067:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2069,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2074:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2070,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2082:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2067,"name":"InvalidCodeAtRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2048:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2072,"nodeType":"RevertStatement","src":"2041:46:14"}},{"id":2096,"nodeType":"UncheckedBlock","src":"2095:641:14","statements":[{"assignments":[2075],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"reqSize","nameLocation":"2121:7:14","nodeType":"VariableDeclaration","scope":2096,"src":"2113:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2079,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2131:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2077,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2138:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:31:14"},{"assignments":[2081],"declarations":[{"constant":false,"id":2081,"mutability":"mutable","name":"maxSize","nameLocation":"2160:7:14","nodeType":"VariableDeclaration","scope":2096,"src":"2152:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2085,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2082,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2170:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2083,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2178:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2170:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2152:32:14"},{"assignments":[2087],"declarations":[{"constant":false,"id":2087,"mutability":"mutable","name":"size","nameLocation":"2201:4:14","nodeType":"VariableDeclaration","scope":2096,"src":"2193:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2094,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2089,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"2218:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2092,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"2238:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2208:37:14","trueExpression":{"id":2091,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2228:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2193:52:14"},{"AST":{"nativeSrc":"2263:467:14","nodeType":"YulBlock","src":"2263:467:14","statements":[{"nativeSrc":"2399:20:14","nodeType":"YulAssignment","src":"2399:20:14","value":{"arguments":[{"kind":"number","nativeSrc":"2414:4:14","nodeType":"YulLiteral","src":"2414:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2408:5:14","nodeType":"YulIdentifier","src":"2408:5:14"},"nativeSrc":"2408:11:14","nodeType":"YulFunctionCall","src":"2408:11:14"},"variableNames":[{"name":"oCode","nativeSrc":"2399:5:14","nodeType":"YulIdentifier","src":"2399:5:14"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2481:4:14","nodeType":"YulLiteral","src":"2481:4:14","type":"","value":"0x40"},{"arguments":[{"name":"oCode","nativeSrc":"2491:5:14","nodeType":"YulIdentifier","src":"2491:5:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2510:4:14","nodeType":"YulIdentifier","src":"2510:4:14"},{"kind":"number","nativeSrc":"2516:4:14","nodeType":"YulLiteral","src":"2516:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2506:3:14","nodeType":"YulIdentifier","src":"2506:3:14"},"nativeSrc":"2506:15:14","nodeType":"YulFunctionCall","src":"2506:15:14"},{"kind":"number","nativeSrc":"2523:4:14","nodeType":"YulLiteral","src":"2523:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2502:3:14","nodeType":"YulIdentifier","src":"2502:3:14"},"nativeSrc":"2502:26:14","nodeType":"YulFunctionCall","src":"2502:26:14"},{"arguments":[{"kind":"number","nativeSrc":"2534:4:14","nodeType":"YulLiteral","src":"2534:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"2530:3:14","nodeType":"YulIdentifier","src":"2530:3:14"},"nativeSrc":"2530:9:14","nodeType":"YulFunctionCall","src":"2530:9:14"}],"functionName":{"name":"and","nativeSrc":"2498:3:14","nodeType":"YulIdentifier","src":"2498:3:14"},"nativeSrc":"2498:42:14","nodeType":"YulFunctionCall","src":"2498:42:14"}],"functionName":{"name":"add","nativeSrc":"2487:3:14","nodeType":"YulIdentifier","src":"2487:3:14"},"nativeSrc":"2487:54:14","nodeType":"YulFunctionCall","src":"2487:54:14"}],"functionName":{"name":"mstore","nativeSrc":"2474:6:14","nodeType":"YulIdentifier","src":"2474:6:14"},"nativeSrc":"2474:68:14","nodeType":"YulFunctionCall","src":"2474:68:14"},"nativeSrc":"2474:68:14","nodeType":"YulExpressionStatement","src":"2474:68:14"},{"expression":{"arguments":[{"name":"oCode","nativeSrc":"2592:5:14","nodeType":"YulIdentifier","src":"2592:5:14"},{"name":"size","nativeSrc":"2599:4:14","nodeType":"YulIdentifier","src":"2599:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2585:6:14","nodeType":"YulIdentifier","src":"2585:6:14"},"nativeSrc":"2585:19:14","nodeType":"YulFunctionCall","src":"2585:19:14"},"nativeSrc":"2585:19:14","nodeType":"YulExpressionStatement","src":"2585:19:14"},{"expression":{"arguments":[{"name":"_addr","nativeSrc":"2684:5:14","nodeType":"YulIdentifier","src":"2684:5:14"},{"arguments":[{"name":"oCode","nativeSrc":"2695:5:14","nodeType":"YulIdentifier","src":"2695:5:14"},{"kind":"number","nativeSrc":"2702:4:14","nodeType":"YulLiteral","src":"2702:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2691:3:14","nodeType":"YulIdentifier","src":"2691:3:14"},"nativeSrc":"2691:16:14","nodeType":"YulFunctionCall","src":"2691:16:14"},{"name":"_start","nativeSrc":"2709:6:14","nodeType":"YulIdentifier","src":"2709:6:14"},{"name":"size","nativeSrc":"2717:4:14","nodeType":"YulIdentifier","src":"2717:4:14"}],"functionName":{"name":"extcodecopy","nativeSrc":"2672:11:14","nodeType":"YulIdentifier","src":"2672:11:14"},"nativeSrc":"2672:50:14","nodeType":"YulFunctionCall","src":"2672:50:14"},"nativeSrc":"2672:50:14","nodeType":"YulExpressionStatement","src":"2672:50:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2031,"isOffset":false,"isSlot":false,"src":"2684:5:14","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"2709:6:14","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"2399:5:14","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"2491:5:14","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"2592:5:14","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"2695:5:14","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"2510:4:14","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"2599:4:14","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"2717:4:14","valueSize":1}],"id":2095,"nodeType":"InlineAssembly","src":"2254:476:14"}]}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"1385:406:14","text":"@notice Returns the code of a given address\n@dev It will fail if `_end < _start`\n@param _addr Address that may or may not contain code\n@param _start number of bytes of code to skip on read\n@param _end index before which to end extraction\n@return oCode read from `_addr` deployed bytecode\nForked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd"},"id":2098,"implemented":true,"kind":"function","modifiers":[],"name":"codeAt","nameLocation":"1803:6:14","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"_addr","nameLocation":"1818:5:14","nodeType":"VariableDeclaration","scope":2098,"src":"1810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"1810:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"_start","nameLocation":"1833:6:14","nodeType":"VariableDeclaration","scope":2098,"src":"1825:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"_end","nameLocation":"1849:4:14","nodeType":"VariableDeclaration","scope":2098,"src":"1841:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1809:45:14"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"oCode","nameLocation":"1891:5:14","nodeType":"VariableDeclaration","scope":2098,"src":"1878:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1877:20:14"},"scope":2099,"src":"1794:946:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2100,"src":"59:2683:14","usedErrors":[1997],"usedEvents":[]}],"src":"32:2710:14"},"id":14},"imports/IERC6551.sol":{"ast":{"absolutePath":"imports/IERC6551.sol","exportedSymbols":{"IERC6551Account":[2194],"IERC6551AccountProxy":[2152],"IERC6551Registry":[2146]},"id":2195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2101,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"32:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Registry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2146,"linearizedBaseContracts":[2146],"name":"IERC6551Registry","nameLocation":"68:16:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f","id":2115,"name":"AccountCreated","nameLocation":"98:14:15","nodeType":"EventDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"130:7:15","nodeType":"VariableDeclaration","scope":2115,"src":"122:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2105,"indexed":false,"mutability":"mutable","name":"implementation","nameLocation":"155:14:15","nodeType":"VariableDeclaration","scope":2115,"src":"147:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2107,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"187:7:15","nodeType":"VariableDeclaration","scope":2115,"src":"179:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2109,"indexed":false,"mutability":"mutable","name":"tokenContract","nameLocation":"212:13:15","nodeType":"VariableDeclaration","scope":2115,"src":"204:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"243:7:15","nodeType":"VariableDeclaration","scope":2115,"src":"235:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"268:4:15","nodeType":"VariableDeclaration","scope":2115,"src":"260:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112:166:15"},"src":"92:187:15"},{"functionSelector":"c1340f69","id":2130,"implemented":false,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"294:13:15","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"implementation","nameLocation":"325:14:15","nodeType":"VariableDeclaration","scope":2130,"src":"317:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"chainId","nameLocation":"357:7:15","nodeType":"VariableDeclaration","scope":2130,"src":"349:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"tokenContract","nameLocation":"382:13:15","nodeType":"VariableDeclaration","scope":2130,"src":"374:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"tokenId","nameLocation":"413:7:15","nodeType":"VariableDeclaration","scope":2130,"src":"405:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"seed","nameLocation":"438:4:15","nodeType":"VariableDeclaration","scope":2130,"src":"430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"307:141:15"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"467:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"466:9:15"},"scope":2146,"src":"285:191:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5e9bc536","id":2145,"implemented":false,"kind":"function","modifiers":[],"name":"account","nameLocation":"491:7:15","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"implementation","nameLocation":"516:14:15","nodeType":"VariableDeclaration","scope":2145,"src":"508:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"chainId","nameLocation":"548:7:15","nodeType":"VariableDeclaration","scope":2145,"src":"540:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"tokenContract","nameLocation":"573:13:15","nodeType":"VariableDeclaration","scope":2145,"src":"565:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"tokenId","nameLocation":"604:7:15","nodeType":"VariableDeclaration","scope":2145,"src":"596:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"salt","nameLocation":"629:4:15","nodeType":"VariableDeclaration","scope":2145,"src":"621:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:141:15"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2145,"src":"663:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"662:9:15"},"scope":2146,"src":"482:190:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2195,"src":"58:616:15","usedErrors":[],"usedEvents":[2115]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551AccountProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2152,"linearizedBaseContracts":[2152],"name":"IERC6551AccountProxy","nameLocation":"686:20:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5c60da1b","id":2151,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"722:14:15","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[],"src":"736:2:15"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2151,"src":"762:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"761:9:15"},"scope":2152,"src":"713:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2195,"src":"676:97:15","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2194,"linearizedBaseContracts":[2194],"name":"IERC6551Account","nameLocation":"785:15:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2","id":2160,"name":"TransactionExecuted","nameLocation":"813:19:15","nodeType":"EventDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"849:6:15","nodeType":"VariableDeclaration","scope":2160,"src":"833:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2156,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"873:5:15","nodeType":"VariableDeclaration","scope":2160,"src":"857:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2158,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"886:4:15","nodeType":"VariableDeclaration","scope":2160,"src":"880:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2157,"name":"bytes","nodeType":"ElementaryTypeName","src":"880:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"832:59:15"},"src":"807:85:15"},{"id":2163,"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[],"src":"905:2:15"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"924:0:15"},"scope":2194,"src":"898:27:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":2174,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"940:11:15","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"to","nameLocation":"969:2:15","nodeType":"VariableDeclaration","scope":2174,"src":"961:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"value","nameLocation":"989:5:15","nodeType":"VariableDeclaration","scope":2174,"src":"981:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"data","nameLocation":"1019:4:15","nodeType":"VariableDeclaration","scope":2174,"src":"1004:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2168,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"951:78:15"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"1056:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2171,"name":"bytes","nodeType":"ElementaryTypeName","src":"1056:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1055:14:15"},"scope":2194,"src":"931:139:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"b553fe1e","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"1085:7:15","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[],"src":"1092:2:15"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"chainId","nameLocation":"1163:7:15","nodeType":"VariableDeclaration","scope":2183,"src":"1155:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"tokenContract","nameLocation":"1192:13:15","nodeType":"VariableDeclaration","scope":2183,"src":"1184:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"1184:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"tokenId","nameLocation":"1227:7:15","nodeType":"VariableDeclaration","scope":2183,"src":"1219:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:103:15"},"scope":2194,"src":"1076:169:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":2188,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1260:5:15","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"1265:2:15"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"1291:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1290:9:15"},"scope":2194,"src":"1251:49:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"affed0e0","id":2193,"implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1315:5:15","nodeType":"FunctionDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[],"src":"1320:2:15"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2193,"src":"1346:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1345:9:15"},"scope":2194,"src":"1306:49:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2195,"src":"775:582:15","usedErrors":[],"usedEvents":[2160]}],"src":"32:1326:15"},"id":15}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].","kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df7765a19091101415de2999aa44d3fa60f3222872e7a4b07d2235937af99a6464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH24 0x65A19091101415DE2999AA44D3FA60F3222872E7A4B07D22 CALLDATALOAD SWAP4 PUSH27 0xF99A6464736F6C6343000818003300000000000000000000000000 ","sourceMap":"750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df7765a19091101415de2999aa44d3fa60f3222872e7a4b07d2235937af99a6464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH24 0x65A19091101415DE2999AA44D3FA60F3222872E7A4B07D22 CALLDATALOAD SWAP4 PUSH27 0xF99A6464736F6C6343000818003300000000000000000000000000 ","sourceMap":"750:8692:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206512ac7312f2b03f5cdaf5795bb8e8a810dd7af4e880b8270701d3e3819d66f164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x12AC7312F2B0 EXTCODEHASH TLOAD 0xDA CREATE2 PUSH26 0x5BB8E8A810DD7AF4E880B8270701D3E3819D66F164736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5799:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206512ac7312f2b03f5cdaf5795bb8e8a810dd7af4e880b8270701d3e3819d66f164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x12AC7312F2B0 EXTCODEHASH TLOAD 0xDA CREATE2 PUSH26 0x5BB8E8A810DD7AF4E880B8270701D3E3819D66F164736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5799:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2b5afbdc314d1ed4bf6c8a739bb3d8c18cf3b7aa0c624a57f44b8603851a5a064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xB5 0xAF 0xBD 0xC3 EQ 0xD1 0xED 0x4B 0xF6 0xC8 0xA7 CODECOPY 0xBB RETURNDATASIZE DUP13 XOR 0xCF EXTCODESIZE PUSH27 0xA0C624A57F44B8603851A5A064736F6C6343000818003300000000 ","sourceMap":"411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2b5afbdc314d1ed4bf6c8a739bb3d8c18cf3b7aa0c624a57f44b8603851a5a064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xB5 0xAF 0xBD 0xC3 EQ 0xD1 0xED 0x4B 0xF6 0xC8 0xA7 CODECOPY 0xBB RETURNDATASIZE DUP13 XOR 0xCF EXTCODESIZE PUSH27 0xA0C624A57F44B8603851A5A064736F6C6343000818003300000000 ","sourceMap":"411:484:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1001,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059485d50279d56be3824d1703141c509069c5eb7228bc4eb9c1543ca04ab53a464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE BASEFEE TSTORE POP 0x27 SWAP14 JUMP 0xBE CODESIZE 0x24 0xD1 PUSH17 0x3141C509069C5EB7228BC4EB9C1543CA04 0xAB MSTORE8 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059485d50279d56be3824d1703141c509069c5eb7228bc4eb9c1543ca04ab53a464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE BASEFEE TSTORE POP 0x27 SWAP14 JUMP 0xBE CODESIZE 0x24 0xD1 PUSH17 0x3141C509069C5EB7228BC4EB9C1543CA04 0xAB MSTORE8 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_throwError(enum ECDSA.RecoverError,bytes32)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"devdoc":{"details":"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220652c817dbf16c9edbd2bb0fbd7b9254cae3945ca30a3f9af6990a7be6520d5e464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x2C817DBF16C9 0xED 0xBD 0x2B 0xB0 0xFB 0xD7 0xB9 0x25 0x4C 0xAE CODECOPY GASLIMIT 0xCA ADDRESS LOG3 0xF9 0xAF PUSH10 0x90A7BE6520D5E464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"532:1805:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220652c817dbf16c9edbd2bb0fbd7b9254cae3945ca30a3f9af6990a7be6520d5e464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x2C817DBF16C9 0xED 0xBD 0x2B 0xB0 0xFB 0xD7 0xB9 0x25 0x4C 0xAE CODECOPY GASLIMIT 0xCA ADDRESS LOG3 0xF9 0xAF PUSH10 0x90A7BE6520D5E464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"532:1805:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isValidERC1271SignatureNow(address,bytes32,bytes memory)":"infinite","isValidSignatureNow(address,bytes32,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/N2D-ERC6551-Account.sol":{"ERC6551Account":{"abi":[{"inputs":[],"name":"ERC6551Account__ExternalCallFailed","type":"error"},{"inputs":[],"name":"ERC6551Account__FailedDueToZeroAddressTransfer","type":"error"},{"inputs":[],"name":"ERC6551Account__IncorrectArraySize","type":"error"},{"inputs":[],"name":"ERC6551Account__LowBalanceToTransferFunds","type":"error"},{"inputs":[],"name":"ERC6551Account__LowERC20TokenBalance","type":"error"},{"inputs":[],"name":"ERC6551Account__NotOwner","type":"error"},{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchTransferEth","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"signValues","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"contract IERC20","name":"erc20contract","type":"address"}],"name":"sendCustomErcTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"simpleEthTransferAccount","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1012":{"entryPoint":null,"id":1012,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600081905550611dbb806100286000396000f3fe60806040526004361061008a5760003560e01c80633b3b687c116100595780633b3b687c146101525780638da5cb5b1461016e5780639e5d4c4914610199578063affed0e0146101c9578063b553fe1e146101f457610091565b806301ffc9a7146100935780631626ba7e146100d057806318a70da91461010d57806324bd11e21461012957610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b591906111bc565b610221565b6040516100c79190611204565b60405180910390f35b3480156100dc57600080fd5b506100f760048036038101906100f2919061139b565b6102f3565b6040516101049190611406565b60405180910390f35b610127600480360381019061012291906114b5565b61034b565b005b34801561013557600080fd5b50610150600480360381019061014b9190611571565b61050f565b005b61016c6004803603810190610167919061167a565b61072e565b005b34801561017a57600080fd5b506101836109d8565b604051610190919061170a565b60405180910390f35b6101b360048036038101906101ae919061177b565b610ae9565b6040516101c0919061186e565b60405180910390f35b3480156101d557600080fd5b506101de610c92565b6040516101eb919061189f565b60405180910390f35b34801561020057600080fd5b50610209610c97565b604051610218939291906118ba565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0955a9ec000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000806103086103016109d8565b8585610ced565b9050801561032057631626ba7e60e01b915050610345565b7f656e6400000000000000000000000000000000000000000000000000000000009150505b92915050565b610353610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103b9576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c16109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610425576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8047101561045f576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161048590611922565b60006040518083038185875af1925050503d80600081146104c2576040519150601f19603f3d011682016040523d82523d6000602084013e6104c7565b606091505b5050905080610502576040517f73c632db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061050b610de2565b5050565b610517610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361057d576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105856109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e9576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610624919061170a565b602060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061194c565b9050828110156106a1576040517fc82bbf7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016106dc929190611979565b6020604051808303816000875af11580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906119ce565b5050610729610de2565b505050565b610736610d9c565b61073e6109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a2576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084849050905060008383905090508082146107eb576040517f116c1ed200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b828110156109c757848482818110610809576108086119fb565b5b90506020020135471015610849576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16878783818110610874576108736119fb565b5b90506020020160208101906108899190611a2a565b73ffffffffffffffffffffffffffffffffffffffff16036108d6576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008787838181106108eb576108ea6119fb565b5b90506020020160208101906109009190611a2a565b73ffffffffffffffffffffffffffffffffffffffff16868684818110610929576109286119fb565b5b9050602002013560405161093c90611922565b60006040518083038185875af1925050503d8060008114610979576040519150601f19603f3d011682016040523d82523d6000602084013e61097e565b606091505b50509050806109b9576040517f73c632db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080806001019150506107ee565b5050506109d2610de2565b50505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663b553fe1e6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190611a6c565b925092509250468314610a665760009350505050610ae6565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610a9f919061189f565b602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae09190611abf565b93505050505b90565b6060610af3610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b59576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b616109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc5576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83471015610bff576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff16858585604051610c29929190611b11565b60006040518083038185875af1925050503d8060008114610c66576040519150601f19603f3d011682016040523d82523d6000602084013e610c6b565b606091505b50809350819250505080610c8157815160208301fd5b50610c8a610de2565b949350505050565b600090565b6000806000803073ffffffffffffffffffffffffffffffffffffffff163b9050610cce30606083610cc89190611b59565b83610dec565b806020019051810190610ce19190611ba2565b93509350935050909192565b6000808473ffffffffffffffffffffffffffffffffffffffff163b03610d8757600080610d1a8585610ed1565b509150915060006003811115610d3357610d32611bf5565b5b816003811115610d4657610d45611bf5565b5b148015610d7e57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92505050610d95565b610d92848484610f2d565b90505b9392505050565b600260005403610dd8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b60606000610df985611051565b905060008103610e1b5760405180602001604052806000815250915050610eca565b80841115610e3b5760405180602001604052806000815250915050610eca565b83831015610e84578084846040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600401610e7b93929190611c24565b60405180910390fd5b60008484039050600085830390506000828210610ea15782610ea3565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b60008060006041845103610f165760008060006020870151925060408701519150606087015160001a9050610f088882858561105c565b955095509550505050610f26565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610f5c929190611c6a565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610fae9190611ccb565b600060405180830381855afa9150503d8060008114610fe9576040519150601f19603f3d011682016040523d82523d6000602084013e610fee565b606091505b509150915081801561100257506020815110155b80156110465750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906110449190611cf7565b145b925050509392505050565b6000813b9050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561109c576000600385925092509250611146565b6000600188888888604051600081526020016040526040516110c19493929190611d40565b6020604051602081039080840390855afa1580156110e3573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361113757600060016000801b93509350935050611146565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61119981611164565b81146111a457600080fd5b50565b6000813590506111b681611190565b92915050565b6000602082840312156111d2576111d161115a565b5b60006111e0848285016111a7565b91505092915050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b6000819050919050565b6112328161121f565b811461123d57600080fd5b50565b60008135905061124f81611229565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112a88261125f565b810181811067ffffffffffffffff821117156112c7576112c6611270565b5b80604052505050565b60006112da611150565b90506112e6828261129f565b919050565b600067ffffffffffffffff82111561130657611305611270565b5b61130f8261125f565b9050602081019050919050565b82818337600083830152505050565b600061133e611339846112eb565b6112d0565b90508281526020810184848401111561135a5761135961125a565b5b61136584828561131c565b509392505050565b600082601f83011261138257611381611255565b5b813561139284826020860161132b565b91505092915050565b600080604083850312156113b2576113b161115a565b5b60006113c085828601611240565b925050602083013567ffffffffffffffff8111156113e1576113e061115f565b5b6113ed8582860161136d565b9150509250929050565b61140081611164565b82525050565b600060208201905061141b60008301846113f7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144c82611421565b9050919050565b61145c81611441565b811461146757600080fd5b50565b60008135905061147981611453565b92915050565b6000819050919050565b6114928161147f565b811461149d57600080fd5b50565b6000813590506114af81611489565b92915050565b600080604083850312156114cc576114cb61115a565b5b60006114da8582860161146a565b92505060206114eb858286016114a0565b9150509250929050565b600061150082611421565b9050919050565b611510816114f5565b811461151b57600080fd5b50565b60008135905061152d81611507565b92915050565b600061153e826114f5565b9050919050565b61154e81611533565b811461155957600080fd5b50565b60008135905061156b81611545565b92915050565b60008060006060848603121561158a5761158961115a565b5b60006115988682870161151e565b93505060206115a9868287016114a0565b92505060406115ba8682870161155c565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126115e4576115e3611255565b5b8235905067ffffffffffffffff811115611601576116006115c4565b5b60208301915083602082028301111561161d5761161c6115c9565b5b9250929050565b60008083601f84011261163a57611639611255565b5b8235905067ffffffffffffffff811115611657576116566115c4565b5b602083019150836020820283011115611673576116726115c9565b5b9250929050565b600080600080604085870312156116945761169361115a565b5b600085013567ffffffffffffffff8111156116b2576116b161115f565b5b6116be878288016115ce565b9450945050602085013567ffffffffffffffff8111156116e1576116e061115f565b5b6116ed87828801611624565b925092505092959194509250565b611704816114f5565b82525050565b600060208201905061171f60008301846116fb565b92915050565b60008083601f84011261173b5761173a611255565b5b8235905067ffffffffffffffff811115611758576117576115c4565b5b602083019150836001820283011115611774576117736115c9565b5b9250929050565b600080600080606085870312156117955761179461115a565b5b60006117a38782880161151e565b94505060206117b4878288016114a0565b935050604085013567ffffffffffffffff8111156117d5576117d461115f565b5b6117e187828801611725565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b8381101561182957808201518184015260208101905061180e565b60008484015250505050565b6000611840826117ef565b61184a81856117fa565b935061185a81856020860161180b565b6118638161125f565b840191505092915050565b600060208201905081810360008301526118888184611835565b905092915050565b6118998161147f565b82525050565b60006020820190506118b46000830184611890565b92915050565b60006060820190506118cf6000830186611890565b6118dc60208301856116fb565b6118e96040830184611890565b949350505050565b600081905092915050565b50565b600061190c6000836118f1565b9150611917826118fc565b600082019050919050565b600061192d826118ff565b9150819050919050565b60008151905061194681611489565b92915050565b6000602082840312156119625761196161115a565b5b600061197084828501611937565b91505092915050565b600060408201905061198e60008301856116fb565b61199b6020830184611890565b9392505050565b6119ab816111e9565b81146119b657600080fd5b50565b6000815190506119c8816119a2565b92915050565b6000602082840312156119e4576119e361115a565b5b60006119f2848285016119b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611a4057611a3f61115a565b5b6000611a4e8482850161151e565b91505092915050565b600081519050611a6681611507565b92915050565b600080600060608486031215611a8557611a8461115a565b5b6000611a9386828701611937565b9350506020611aa486828701611a57565b9250506040611ab586828701611937565b9150509250925092565b600060208284031215611ad557611ad461115a565b5b6000611ae384828501611a57565b91505092915050565b6000611af883856118f1565b9350611b0583858461131c565b82840190509392505050565b6000611b1e828486611aec565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b648261147f565b9150611b6f8361147f565b9250828203905081811115611b8757611b86611b2a565b5b92915050565b600081519050611b9c81611453565b92915050565b600080600060608486031215611bbb57611bba61115a565b5b6000611bc986828701611937565b9350506020611bda86828701611b8d565b9250506040611beb86828701611937565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000606082019050611c396000830186611890565b611c466020830185611890565b611c536040830184611890565b949350505050565b611c648161121f565b82525050565b6000604082019050611c7f6000830185611c5b565b8181036020830152611c918184611835565b90509392505050565b6000611ca5826117ef565b611caf81856118f1565b9350611cbf81856020860161180b565b80840191505092915050565b6000611cd78284611c9a565b915081905092915050565b600081519050611cf181611229565b92915050565b600060208284031215611d0d57611d0c61115a565b5b6000611d1b84828501611ce2565b91505092915050565b600060ff82169050919050565b611d3a81611d24565b82525050565b6000608082019050611d556000830187611c5b565b611d626020830186611d31565b611d6f6040830185611c5b565b611d7c6060830184611c5b565b9594505050505056fea2646970667358221220e3f86cad4d11789bec9de6435741998b0cd4841efdda4786a2782a600c18263064736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1DBB DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B3B687C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x3B3B687C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x1F4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x18A70DA9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24BD11E2 EQ PUSH2 0x129 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0x955A9EC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x308 PUSH2 0x301 PUSH2 0x9D8 JUMP JUMPDEST DUP6 DUP6 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x320 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH32 0x656E640000000000000000000000000000000000000000000000000000000000 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C1 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x485 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C632DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH2 0xDE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x517 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x585 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC82BBF7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP3 SWAP2 SWAP1 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST POP POP PUSH2 0x729 PUSH2 0xDE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x736 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x73E PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP DUP1 DUP3 EQ PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x116C1ED200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SELFBALANCE LT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x8EB JUMPI PUSH2 0x8EA PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x928 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x93C SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x97E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C632DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7EE JUMP JUMPDEST POP POP POP PUSH2 0x9D2 PUSH2 0xDE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4D SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0xA66 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAE6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAF3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 SELFBALANCE LT ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP3 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0xC81 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP PUSH2 0xC8A PUSH2 0xDE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0xCCE ADDRESS PUSH1 0x60 DUP4 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST DUP4 PUSH2 0xDEC JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xD87 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD1A DUP6 DUP6 PUSH2 0xED1 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD7E JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD92 DUP5 DUP5 DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF9 DUP6 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xECA JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xECA JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xE84 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xEA1 JUMPI DUP3 PUSH2 0xEA3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xF08 DUP9 DUP3 DUP6 DUP6 PUSH2 0x105C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF5C SWAP3 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1002 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1046 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x109C JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1146 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1199 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP2 EQ PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B6 DUP2 PUSH2 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E0 DUP5 DUP3 DUP6 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1232 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP2 EQ PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x124F DUP2 PUSH2 0x1229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12A8 DUP3 PUSH2 0x125F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP PUSH2 0x12E6 DUP3 DUP3 PUSH2 0x129F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST PUSH2 0x130F DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E PUSH2 0x1339 DUP5 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH2 0x1365 DUP5 DUP3 DUP6 PUSH2 0x131C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1392 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1240 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x13ED DUP6 DUP3 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144C DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x1441 JUMP JUMPDEST DUP2 EQ PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AF DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DA DUP6 DUP3 DUP7 ADD PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14EB DUP6 DUP3 DUP7 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1500 DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP3 PUSH2 0x14F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x1533 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156B DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP7 DUP3 DUP8 ADD PUSH2 0x151E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15A9 DUP7 DUP3 DUP8 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15BA DUP7 DUP3 DUP8 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x161D JUMPI PUSH2 0x161C PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x16BE DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1773 PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP8 DUP3 DUP9 ADD PUSH2 0x151E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17B4 DUP8 DUP3 DUP9 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x17E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1725 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1829 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x184A DUP2 DUP6 PUSH2 0x17FA JUMP JUMPDEST SWAP4 POP PUSH2 0x185A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0x125F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1899 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18CF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x18DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x18E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190C PUSH1 0x0 DUP4 PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1917 DUP3 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192D DUP3 PUSH2 0x18FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1946 DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1970 DUP5 DUP3 DUP6 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x198E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x199B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C8 DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F2 DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A40 JUMPI PUSH2 0x1A3F PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4E DUP5 DUP3 DUP6 ADD PUSH2 0x151E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A66 DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A93 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AA4 DUP7 DUP3 DUP8 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF8 DUP4 DUP6 PUSH2 0x18F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B05 DUP4 DUP6 DUP5 PUSH2 0x131C JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP3 DUP5 DUP7 PUSH2 0x1AEC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B64 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6F DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x1B2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9C DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBB JUMPI PUSH2 0x1BBA PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDA DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEB DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C39 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1C46 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1C53 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C64 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C7F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C91 DUP2 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA5 DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1CAF DUP2 DUP6 PUSH2 0x18F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD7 DUP3 DUP5 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF1 DUP2 PUSH2 0x1229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP5 DUP3 DUP6 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3A DUP2 PUSH2 0x1D24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D55 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xF8 PUSH13 0xAD4D11789BEC9DE6435741998B 0xC 0xD4 DUP5 0x1E REVERT 0xDA SELFBALANCE DUP7 LOG2 PUSH25 0x2A600C18263064736F6C634300081800330000000000000000 ","sourceMap":"2333:4690:13:-:0;;;;;;;;;;;;;1857:1:9;2061:7;:21;;;;2333:4690:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1982":{"entryPoint":null,"id":1982,"parameterSlots":0,"returnSlots":0},"@_1986":{"entryPoint":null,"id":1986,"parameterSlots":0,"returnSlots":0},"@_nonReentrantAfter_1047":{"entryPoint":3554,"id":1047,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1039":{"entryPoint":3484,"id":1039,"parameterSlots":0,"returnSlots":0},"@batchTransferEth_1727":{"entryPoint":1838,"id":1727,"parameterSlots":4,"returnSlots":0},"@codeAt_2098":{"entryPoint":3564,"id":2098,"parameterSlots":3,"returnSlots":1},"@codeSize_2028":{"entryPoint":4177,"id":2028,"parameterSlots":1,"returnSlots":1},"@executeCall_1628":{"entryPoint":2793,"id":1628,"parameterSlots":4,"returnSlots":1},"@isValidERC1271SignatureNow_1514":{"entryPoint":3885,"id":1514,"parameterSlots":3,"returnSlots":1},"@isValidSignatureNow_1462":{"entryPoint":3309,"id":1462,"parameterSlots":3,"returnSlots":1},"@isValidSignature_1971":{"entryPoint":755,"id":1971,"parameterSlots":2,"returnSlots":1},"@nftInfo_1886":{"entryPoint":3223,"id":1886,"parameterSlots":0,"returnSlots":3},"@nonce_1978":{"entryPoint":3218,"id":1978,"parameterSlots":0,"returnSlots":1},"@owner_1919":{"entryPoint":2520,"id":1919,"parameterSlots":0,"returnSlots":1},"@sendCustomErcTransfer_1845":{"entryPoint":1295,"id":1845,"parameterSlots":3,"returnSlots":0},"@simpleEthTransferAccount_1786":{"entryPoint":843,"id":1786,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1942":{"entryPoint":545,"id":1942,"parameterSlots":1,"returnSlots":1},"@tryRecover_1133":{"entryPoint":3793,"id":1133,"parameterSlots":2,"returnSlots":3},"@tryRecover_1321":{"entryPoint":4188,"id":1321,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4907,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5406,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":6743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":7053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":5582,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":6585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":7394,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$181":{"entryPoint":5468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5301,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":6011,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181":{"entryPoint":5489,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5754,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory":{"entryPoint":7074,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory":{"entryPoint":6764,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7259,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":5111,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6892,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7473,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6929,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6434,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6521,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7274,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7488,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":5126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":6330,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7204,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":4816,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4432,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4843,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6127,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6138,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6385,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7001,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5365,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5185,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4639,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4452,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$181":{"entryPoint":5427,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5153,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5247,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7460,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4892,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6155,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4767,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":6954,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7157,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6651,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4720,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5572,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4693,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5577,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4698,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4447,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4442,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4703,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":6396,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5383,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5203,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6562,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4649,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4496,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$181":{"entryPoint":5445,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5257,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23322:16","nodeType":"YulBlock","src":"0:23322:16","statements":[{"body":{"nativeSrc":"47:35:16","nodeType":"YulBlock","src":"47:35:16","statements":[{"nativeSrc":"57:19:16","nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:16","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:16","nodeType":"YulIdentifier","src":"67:5:16"},"nativeSrc":"67:9:16","nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:16","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:16","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:16","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nativeSrc":"177:28:16","nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:16","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:16","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:16","nodeType":"YulIdentifier","src":"187:6:16"},"nativeSrc":"187:12:16","nodeType":"YulFunctionCall","src":"187:12:16"},"nativeSrc":"187:12:16","nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:16","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nativeSrc":"300:28:16","nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:16","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:16","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:16","nodeType":"YulIdentifier","src":"310:6:16"},"nativeSrc":"310:12:16","nodeType":"YulFunctionCall","src":"310:12:16"},"nativeSrc":"310:12:16","nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:16","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nativeSrc":"378:105:16","nodeType":"YulBlock","src":"378:105:16","statements":[{"nativeSrc":"388:89:16","nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nativeSrc":"403:5:16","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nativeSrc":"410:66:16","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:16","nodeType":"YulIdentifier","src":"399:3:16"},"nativeSrc":"399:78:16","nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:16","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:16","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:16","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nativeSrc":"531:78:16","nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nativeSrc":"587:16:16","nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:16","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:16","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:16","nodeType":"YulIdentifier","src":"589:6:16"},"nativeSrc":"589:12:16","nodeType":"YulFunctionCall","src":"589:12:16"},"nativeSrc":"589:12:16","nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:16","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nativeSrc":"578:5:16","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:16","nodeType":"YulIdentifier","src":"561:16:16"},"nativeSrc":"561:23:16","nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nativeSrc":"551:2:16","nodeType":"YulIdentifier","src":"551:2:16"},"nativeSrc":"551:34:16","nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nativeSrc":"544:6:16","nodeType":"YulIdentifier","src":"544:6:16"},"nativeSrc":"544:42:16","nodeType":"YulFunctionCall","src":"544:42:16"},"nativeSrc":"541:62:16","nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:16","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nativeSrc":"666:86:16","nodeType":"YulBlock","src":"666:86:16","statements":[{"nativeSrc":"676:29:16","nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:16","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:16","nodeType":"YulIdentifier","src":"685:12:16"},"nativeSrc":"685:20:16","nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nativeSrc":"676:5:16","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:16","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:16","nodeType":"YulIdentifier","src":"714:25:16"},"nativeSrc":"714:32:16","nodeType":"YulFunctionCall","src":"714:32:16"},"nativeSrc":"714:32:16","nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:16","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nativeSrc":"652:3:16","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:16","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nativeSrc":"823:262:16","nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nativeSrc":"869:83:16","nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:16","nodeType":"YulIdentifier","src":"871:77:16"},"nativeSrc":"871:79:16","nodeType":"YulFunctionCall","src":"871:79:16"},"nativeSrc":"871:79:16","nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:16","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nativeSrc":"853:9:16","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nativeSrc":"840:3:16","nodeType":"YulIdentifier","src":"840:3:16"},"nativeSrc":"840:23:16","nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nativeSrc":"865:2:16","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:16","nodeType":"YulIdentifier","src":"836:3:16"},"nativeSrc":"836:32:16","nodeType":"YulFunctionCall","src":"836:32:16"},"nativeSrc":"833:119:16","nodeType":"YulIf","src":"833:119:16"},{"nativeSrc":"962:116:16","nodeType":"YulBlock","src":"962:116:16","statements":[{"nativeSrc":"977:15:16","nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nativeSrc":"991:1:16","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:16","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nativeSrc":"1006:62:16","nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:16","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nativeSrc":"1051:6:16","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nativeSrc":"1036:3:16","nodeType":"YulIdentifier","src":"1036:3:16"},"nativeSrc":"1036:22:16","nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nativeSrc":"1060:7:16","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:16","nodeType":"YulIdentifier","src":"1016:19:16"},"nativeSrc":"1016:52:16","nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:16","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:16","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nativeSrc":"804:7:16","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:16","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nativeSrc":"1133:48:16","nodeType":"YulBlock","src":"1133:48:16","statements":[{"nativeSrc":"1143:32:16","nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:16","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:16","nodeType":"YulIdentifier","src":"1161:6:16"},"nativeSrc":"1161:13:16","nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:16","nodeType":"YulIdentifier","src":"1154:6:16"},"nativeSrc":"1154:21:16","nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:16","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:16","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:16","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nativeSrc":"1246:50:16","nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:16","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nativeSrc":"1283:5:16","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:16","nodeType":"YulIdentifier","src":"1268:14:16"},"nativeSrc":"1268:21:16","nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:16","nodeType":"YulIdentifier","src":"1256:6:16"},"nativeSrc":"1256:34:16","nodeType":"YulFunctionCall","src":"1256:34:16"},"nativeSrc":"1256:34:16","nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:16","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nativeSrc":"1241:3:16","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nativeSrc":"1394:118:16","nodeType":"YulBlock","src":"1394:118:16","statements":[{"nativeSrc":"1404:26:16","nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:16","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nativeSrc":"1427:2:16","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:16","nodeType":"YulIdentifier","src":"1412:3:16"},"nativeSrc":"1412:18:16","nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:16","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:16","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:16","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nativeSrc":"1502:1:16","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:16","nodeType":"YulIdentifier","src":"1487:3:16"},"nativeSrc":"1487:17:16","nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:16","nodeType":"YulIdentifier","src":"1440:37:16"},"nativeSrc":"1440:65:16","nodeType":"YulFunctionCall","src":"1440:65:16"},"nativeSrc":"1440:65:16","nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:16","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nativeSrc":"1378:6:16","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:16","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nativeSrc":"1563:32:16","nodeType":"YulBlock","src":"1563:32:16","statements":[{"nativeSrc":"1573:16:16","nodeType":"YulAssignment","src":"1573:16:16","value":{"name":"value","nativeSrc":"1584:5:16","nodeType":"YulIdentifier","src":"1584:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:16","nodeType":"YulIdentifier","src":"1573:7:16"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1518:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:16","nodeType":"YulTypedName","src":"1545:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:16","nodeType":"YulTypedName","src":"1555:7:16","type":""}],"src":"1518:77:16"},{"body":{"nativeSrc":"1644:79:16","nodeType":"YulBlock","src":"1644:79:16","statements":[{"body":{"nativeSrc":"1701:16:16","nodeType":"YulBlock","src":"1701:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1710:1:16","nodeType":"YulLiteral","src":"1710:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"1713:1:16","nodeType":"YulLiteral","src":"1713:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1703:6:16","nodeType":"YulIdentifier","src":"1703:6:16"},"nativeSrc":"1703:12:16","nodeType":"YulFunctionCall","src":"1703:12:16"},"nativeSrc":"1703:12:16","nodeType":"YulExpressionStatement","src":"1703:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1667:5:16","nodeType":"YulIdentifier","src":"1667:5:16"},{"arguments":[{"name":"value","nativeSrc":"1692:5:16","nodeType":"YulIdentifier","src":"1692:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1674:17:16","nodeType":"YulIdentifier","src":"1674:17:16"},"nativeSrc":"1674:24:16","nodeType":"YulFunctionCall","src":"1674:24:16"}],"functionName":{"name":"eq","nativeSrc":"1664:2:16","nodeType":"YulIdentifier","src":"1664:2:16"},"nativeSrc":"1664:35:16","nodeType":"YulFunctionCall","src":"1664:35:16"}],"functionName":{"name":"iszero","nativeSrc":"1657:6:16","nodeType":"YulIdentifier","src":"1657:6:16"},"nativeSrc":"1657:43:16","nodeType":"YulFunctionCall","src":"1657:43:16"},"nativeSrc":"1654:63:16","nodeType":"YulIf","src":"1654:63:16"}]},"name":"validator_revert_t_bytes32","nativeSrc":"1601:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1637:5:16","nodeType":"YulTypedName","src":"1637:5:16","type":""}],"src":"1601:122:16"},{"body":{"nativeSrc":"1781:87:16","nodeType":"YulBlock","src":"1781:87:16","statements":[{"nativeSrc":"1791:29:16","nodeType":"YulAssignment","src":"1791:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"1813:6:16","nodeType":"YulIdentifier","src":"1813:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"1800:12:16","nodeType":"YulIdentifier","src":"1800:12:16"},"nativeSrc":"1800:20:16","nodeType":"YulFunctionCall","src":"1800:20:16"},"variableNames":[{"name":"value","nativeSrc":"1791:5:16","nodeType":"YulIdentifier","src":"1791:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1856:5:16","nodeType":"YulIdentifier","src":"1856:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1829:26:16","nodeType":"YulIdentifier","src":"1829:26:16"},"nativeSrc":"1829:33:16","nodeType":"YulFunctionCall","src":"1829:33:16"},"nativeSrc":"1829:33:16","nodeType":"YulExpressionStatement","src":"1829:33:16"}]},"name":"abi_decode_t_bytes32","nativeSrc":"1729:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1759:6:16","nodeType":"YulTypedName","src":"1759:6:16","type":""},{"name":"end","nativeSrc":"1767:3:16","nodeType":"YulTypedName","src":"1767:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1775:5:16","nodeType":"YulTypedName","src":"1775:5:16","type":""}],"src":"1729:139:16"},{"body":{"nativeSrc":"1963:28:16","nodeType":"YulBlock","src":"1963:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1980:1:16","nodeType":"YulLiteral","src":"1980:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"1983:1:16","nodeType":"YulLiteral","src":"1983:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1973:6:16","nodeType":"YulIdentifier","src":"1973:6:16"},"nativeSrc":"1973:12:16","nodeType":"YulFunctionCall","src":"1973:12:16"},"nativeSrc":"1973:12:16","nodeType":"YulExpressionStatement","src":"1973:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1874:117:16","nodeType":"YulFunctionDefinition","src":"1874:117:16"},{"body":{"nativeSrc":"2086:28:16","nodeType":"YulBlock","src":"2086:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2103:1:16","nodeType":"YulLiteral","src":"2103:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2106:1:16","nodeType":"YulLiteral","src":"2106:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2096:6:16","nodeType":"YulIdentifier","src":"2096:6:16"},"nativeSrc":"2096:12:16","nodeType":"YulFunctionCall","src":"2096:12:16"},"nativeSrc":"2096:12:16","nodeType":"YulExpressionStatement","src":"2096:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"1997:117:16","nodeType":"YulFunctionDefinition","src":"1997:117:16"},{"body":{"nativeSrc":"2168:54:16","nodeType":"YulBlock","src":"2168:54:16","statements":[{"nativeSrc":"2178:38:16","nodeType":"YulAssignment","src":"2178:38:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2196:5:16","nodeType":"YulIdentifier","src":"2196:5:16"},{"kind":"number","nativeSrc":"2203:2:16","nodeType":"YulLiteral","src":"2203:2:16","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2192:3:16","nodeType":"YulIdentifier","src":"2192:3:16"},"nativeSrc":"2192:14:16","nodeType":"YulFunctionCall","src":"2192:14:16"},{"arguments":[{"kind":"number","nativeSrc":"2212:2:16","nodeType":"YulLiteral","src":"2212:2:16","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2208:3:16","nodeType":"YulIdentifier","src":"2208:3:16"},"nativeSrc":"2208:7:16","nodeType":"YulFunctionCall","src":"2208:7:16"}],"functionName":{"name":"and","nativeSrc":"2188:3:16","nodeType":"YulIdentifier","src":"2188:3:16"},"nativeSrc":"2188:28:16","nodeType":"YulFunctionCall","src":"2188:28:16"},"variableNames":[{"name":"result","nativeSrc":"2178:6:16","nodeType":"YulIdentifier","src":"2178:6:16"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2120:102:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2151:5:16","nodeType":"YulTypedName","src":"2151:5:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2161:6:16","nodeType":"YulTypedName","src":"2161:6:16","type":""}],"src":"2120:102:16"},{"body":{"nativeSrc":"2256:152:16","nodeType":"YulBlock","src":"2256:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2273:1:16","nodeType":"YulLiteral","src":"2273:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2276:77:16","nodeType":"YulLiteral","src":"2276:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2266:6:16","nodeType":"YulIdentifier","src":"2266:6:16"},"nativeSrc":"2266:88:16","nodeType":"YulFunctionCall","src":"2266:88:16"},"nativeSrc":"2266:88:16","nodeType":"YulExpressionStatement","src":"2266:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2370:1:16","nodeType":"YulLiteral","src":"2370:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"2373:4:16","nodeType":"YulLiteral","src":"2373:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:16","nodeType":"YulIdentifier","src":"2363:6:16"},"nativeSrc":"2363:15:16","nodeType":"YulFunctionCall","src":"2363:15:16"},"nativeSrc":"2363:15:16","nodeType":"YulExpressionStatement","src":"2363:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2394:1:16","nodeType":"YulLiteral","src":"2394:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2397:4:16","nodeType":"YulLiteral","src":"2397:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2387:6:16","nodeType":"YulIdentifier","src":"2387:6:16"},"nativeSrc":"2387:15:16","nodeType":"YulFunctionCall","src":"2387:15:16"},"nativeSrc":"2387:15:16","nodeType":"YulExpressionStatement","src":"2387:15:16"}]},"name":"panic_error_0x41","nativeSrc":"2228:180:16","nodeType":"YulFunctionDefinition","src":"2228:180:16"},{"body":{"nativeSrc":"2457:238:16","nodeType":"YulBlock","src":"2457:238:16","statements":[{"nativeSrc":"2467:58:16","nodeType":"YulVariableDeclaration","src":"2467:58:16","value":{"arguments":[{"name":"memPtr","nativeSrc":"2489:6:16","nodeType":"YulIdentifier","src":"2489:6:16"},{"arguments":[{"name":"size","nativeSrc":"2519:4:16","nodeType":"YulIdentifier","src":"2519:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2497:21:16","nodeType":"YulIdentifier","src":"2497:21:16"},"nativeSrc":"2497:27:16","nodeType":"YulFunctionCall","src":"2497:27:16"}],"functionName":{"name":"add","nativeSrc":"2485:3:16","nodeType":"YulIdentifier","src":"2485:3:16"},"nativeSrc":"2485:40:16","nodeType":"YulFunctionCall","src":"2485:40:16"},"variables":[{"name":"newFreePtr","nativeSrc":"2471:10:16","nodeType":"YulTypedName","src":"2471:10:16","type":""}]},{"body":{"nativeSrc":"2636:22:16","nodeType":"YulBlock","src":"2636:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2638:16:16","nodeType":"YulIdentifier","src":"2638:16:16"},"nativeSrc":"2638:18:16","nodeType":"YulFunctionCall","src":"2638:18:16"},"nativeSrc":"2638:18:16","nodeType":"YulExpressionStatement","src":"2638:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2579:10:16","nodeType":"YulIdentifier","src":"2579:10:16"},{"kind":"number","nativeSrc":"2591:18:16","nodeType":"YulLiteral","src":"2591:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2576:2:16","nodeType":"YulIdentifier","src":"2576:2:16"},"nativeSrc":"2576:34:16","nodeType":"YulFunctionCall","src":"2576:34:16"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2615:10:16","nodeType":"YulIdentifier","src":"2615:10:16"},{"name":"memPtr","nativeSrc":"2627:6:16","nodeType":"YulIdentifier","src":"2627:6:16"}],"functionName":{"name":"lt","nativeSrc":"2612:2:16","nodeType":"YulIdentifier","src":"2612:2:16"},"nativeSrc":"2612:22:16","nodeType":"YulFunctionCall","src":"2612:22:16"}],"functionName":{"name":"or","nativeSrc":"2573:2:16","nodeType":"YulIdentifier","src":"2573:2:16"},"nativeSrc":"2573:62:16","nodeType":"YulFunctionCall","src":"2573:62:16"},"nativeSrc":"2570:88:16","nodeType":"YulIf","src":"2570:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2674:2:16","nodeType":"YulLiteral","src":"2674:2:16","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2678:10:16","nodeType":"YulIdentifier","src":"2678:10:16"}],"functionName":{"name":"mstore","nativeSrc":"2667:6:16","nodeType":"YulIdentifier","src":"2667:6:16"},"nativeSrc":"2667:22:16","nodeType":"YulFunctionCall","src":"2667:22:16"},"nativeSrc":"2667:22:16","nodeType":"YulExpressionStatement","src":"2667:22:16"}]},"name":"finalize_allocation","nativeSrc":"2414:281:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2443:6:16","nodeType":"YulTypedName","src":"2443:6:16","type":""},{"name":"size","nativeSrc":"2451:4:16","nodeType":"YulTypedName","src":"2451:4:16","type":""}],"src":"2414:281:16"},{"body":{"nativeSrc":"2742:88:16","nodeType":"YulBlock","src":"2742:88:16","statements":[{"nativeSrc":"2752:30:16","nodeType":"YulAssignment","src":"2752:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2762:18:16","nodeType":"YulIdentifier","src":"2762:18:16"},"nativeSrc":"2762:20:16","nodeType":"YulFunctionCall","src":"2762:20:16"},"variableNames":[{"name":"memPtr","nativeSrc":"2752:6:16","nodeType":"YulIdentifier","src":"2752:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2811:6:16","nodeType":"YulIdentifier","src":"2811:6:16"},{"name":"size","nativeSrc":"2819:4:16","nodeType":"YulIdentifier","src":"2819:4:16"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2791:19:16","nodeType":"YulIdentifier","src":"2791:19:16"},"nativeSrc":"2791:33:16","nodeType":"YulFunctionCall","src":"2791:33:16"},"nativeSrc":"2791:33:16","nodeType":"YulExpressionStatement","src":"2791:33:16"}]},"name":"allocate_memory","nativeSrc":"2701:129:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2726:4:16","nodeType":"YulTypedName","src":"2726:4:16","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2735:6:16","nodeType":"YulTypedName","src":"2735:6:16","type":""}],"src":"2701:129:16"},{"body":{"nativeSrc":"2902:241:16","nodeType":"YulBlock","src":"2902:241:16","statements":[{"body":{"nativeSrc":"3007:22:16","nodeType":"YulBlock","src":"3007:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3009:16:16","nodeType":"YulIdentifier","src":"3009:16:16"},"nativeSrc":"3009:18:16","nodeType":"YulFunctionCall","src":"3009:18:16"},"nativeSrc":"3009:18:16","nodeType":"YulExpressionStatement","src":"3009:18:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2979:6:16","nodeType":"YulIdentifier","src":"2979:6:16"},{"kind":"number","nativeSrc":"2987:18:16","nodeType":"YulLiteral","src":"2987:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2976:2:16","nodeType":"YulIdentifier","src":"2976:2:16"},"nativeSrc":"2976:30:16","nodeType":"YulFunctionCall","src":"2976:30:16"},"nativeSrc":"2973:56:16","nodeType":"YulIf","src":"2973:56:16"},{"nativeSrc":"3039:37:16","nodeType":"YulAssignment","src":"3039:37:16","value":{"arguments":[{"name":"length","nativeSrc":"3069:6:16","nodeType":"YulIdentifier","src":"3069:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3047:21:16","nodeType":"YulIdentifier","src":"3047:21:16"},"nativeSrc":"3047:29:16","nodeType":"YulFunctionCall","src":"3047:29:16"},"variableNames":[{"name":"size","nativeSrc":"3039:4:16","nodeType":"YulIdentifier","src":"3039:4:16"}]},{"nativeSrc":"3113:23:16","nodeType":"YulAssignment","src":"3113:23:16","value":{"arguments":[{"name":"size","nativeSrc":"3125:4:16","nodeType":"YulIdentifier","src":"3125:4:16"},{"kind":"number","nativeSrc":"3131:4:16","nodeType":"YulLiteral","src":"3131:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3121:3:16","nodeType":"YulIdentifier","src":"3121:3:16"},"nativeSrc":"3121:15:16","nodeType":"YulFunctionCall","src":"3121:15:16"},"variableNames":[{"name":"size","nativeSrc":"3113:4:16","nodeType":"YulIdentifier","src":"3113:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2836:307:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2886:6:16","nodeType":"YulTypedName","src":"2886:6:16","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2897:4:16","nodeType":"YulTypedName","src":"2897:4:16","type":""}],"src":"2836:307:16"},{"body":{"nativeSrc":"3213:82:16","nodeType":"YulBlock","src":"3213:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"3236:3:16","nodeType":"YulIdentifier","src":"3236:3:16"},{"name":"src","nativeSrc":"3241:3:16","nodeType":"YulIdentifier","src":"3241:3:16"},{"name":"length","nativeSrc":"3246:6:16","nodeType":"YulIdentifier","src":"3246:6:16"}],"functionName":{"name":"calldatacopy","nativeSrc":"3223:12:16","nodeType":"YulIdentifier","src":"3223:12:16"},"nativeSrc":"3223:30:16","nodeType":"YulFunctionCall","src":"3223:30:16"},"nativeSrc":"3223:30:16","nodeType":"YulExpressionStatement","src":"3223:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3273:3:16","nodeType":"YulIdentifier","src":"3273:3:16"},{"name":"length","nativeSrc":"3278:6:16","nodeType":"YulIdentifier","src":"3278:6:16"}],"functionName":{"name":"add","nativeSrc":"3269:3:16","nodeType":"YulIdentifier","src":"3269:3:16"},"nativeSrc":"3269:16:16","nodeType":"YulFunctionCall","src":"3269:16:16"},{"kind":"number","nativeSrc":"3287:1:16","nodeType":"YulLiteral","src":"3287:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3262:6:16","nodeType":"YulIdentifier","src":"3262:6:16"},"nativeSrc":"3262:27:16","nodeType":"YulFunctionCall","src":"3262:27:16"},"nativeSrc":"3262:27:16","nodeType":"YulExpressionStatement","src":"3262:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3149:146:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3195:3:16","nodeType":"YulTypedName","src":"3195:3:16","type":""},{"name":"dst","nativeSrc":"3200:3:16","nodeType":"YulTypedName","src":"3200:3:16","type":""},{"name":"length","nativeSrc":"3205:6:16","nodeType":"YulTypedName","src":"3205:6:16","type":""}],"src":"3149:146:16"},{"body":{"nativeSrc":"3384:340:16","nodeType":"YulBlock","src":"3384:340:16","statements":[{"nativeSrc":"3394:74:16","nodeType":"YulAssignment","src":"3394:74:16","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3460:6:16","nodeType":"YulIdentifier","src":"3460:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"3419:40:16","nodeType":"YulIdentifier","src":"3419:40:16"},"nativeSrc":"3419:48:16","nodeType":"YulFunctionCall","src":"3419:48:16"}],"functionName":{"name":"allocate_memory","nativeSrc":"3403:15:16","nodeType":"YulIdentifier","src":"3403:15:16"},"nativeSrc":"3403:65:16","nodeType":"YulFunctionCall","src":"3403:65:16"},"variableNames":[{"name":"array","nativeSrc":"3394:5:16","nodeType":"YulIdentifier","src":"3394:5:16"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"3484:5:16","nodeType":"YulIdentifier","src":"3484:5:16"},{"name":"length","nativeSrc":"3491:6:16","nodeType":"YulIdentifier","src":"3491:6:16"}],"functionName":{"name":"mstore","nativeSrc":"3477:6:16","nodeType":"YulIdentifier","src":"3477:6:16"},"nativeSrc":"3477:21:16","nodeType":"YulFunctionCall","src":"3477:21:16"},"nativeSrc":"3477:21:16","nodeType":"YulExpressionStatement","src":"3477:21:16"},{"nativeSrc":"3507:27:16","nodeType":"YulVariableDeclaration","src":"3507:27:16","value":{"arguments":[{"name":"array","nativeSrc":"3522:5:16","nodeType":"YulIdentifier","src":"3522:5:16"},{"kind":"number","nativeSrc":"3529:4:16","nodeType":"YulLiteral","src":"3529:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3518:3:16","nodeType":"YulIdentifier","src":"3518:3:16"},"nativeSrc":"3518:16:16","nodeType":"YulFunctionCall","src":"3518:16:16"},"variables":[{"name":"dst","nativeSrc":"3511:3:16","nodeType":"YulTypedName","src":"3511:3:16","type":""}]},{"body":{"nativeSrc":"3572:83:16","nodeType":"YulBlock","src":"3572:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3574:77:16","nodeType":"YulIdentifier","src":"3574:77:16"},"nativeSrc":"3574:79:16","nodeType":"YulFunctionCall","src":"3574:79:16"},"nativeSrc":"3574:79:16","nodeType":"YulExpressionStatement","src":"3574:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3553:3:16","nodeType":"YulIdentifier","src":"3553:3:16"},{"name":"length","nativeSrc":"3558:6:16","nodeType":"YulIdentifier","src":"3558:6:16"}],"functionName":{"name":"add","nativeSrc":"3549:3:16","nodeType":"YulIdentifier","src":"3549:3:16"},"nativeSrc":"3549:16:16","nodeType":"YulFunctionCall","src":"3549:16:16"},{"name":"end","nativeSrc":"3567:3:16","nodeType":"YulIdentifier","src":"3567:3:16"}],"functionName":{"name":"gt","nativeSrc":"3546:2:16","nodeType":"YulIdentifier","src":"3546:2:16"},"nativeSrc":"3546:25:16","nodeType":"YulFunctionCall","src":"3546:25:16"},"nativeSrc":"3543:112:16","nodeType":"YulIf","src":"3543:112:16"},{"expression":{"arguments":[{"name":"src","nativeSrc":"3701:3:16","nodeType":"YulIdentifier","src":"3701:3:16"},{"name":"dst","nativeSrc":"3706:3:16","nodeType":"YulIdentifier","src":"3706:3:16"},{"name":"length","nativeSrc":"3711:6:16","nodeType":"YulIdentifier","src":"3711:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3664:36:16","nodeType":"YulIdentifier","src":"3664:36:16"},"nativeSrc":"3664:54:16","nodeType":"YulFunctionCall","src":"3664:54:16"},"nativeSrc":"3664:54:16","nodeType":"YulExpressionStatement","src":"3664:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"3301:423:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3357:3:16","nodeType":"YulTypedName","src":"3357:3:16","type":""},{"name":"length","nativeSrc":"3362:6:16","nodeType":"YulTypedName","src":"3362:6:16","type":""},{"name":"end","nativeSrc":"3370:3:16","nodeType":"YulTypedName","src":"3370:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3378:5:16","nodeType":"YulTypedName","src":"3378:5:16","type":""}],"src":"3301:423:16"},{"body":{"nativeSrc":"3804:277:16","nodeType":"YulBlock","src":"3804:277:16","statements":[{"body":{"nativeSrc":"3853:83:16","nodeType":"YulBlock","src":"3853:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3855:77:16","nodeType":"YulIdentifier","src":"3855:77:16"},"nativeSrc":"3855:79:16","nodeType":"YulFunctionCall","src":"3855:79:16"},"nativeSrc":"3855:79:16","nodeType":"YulExpressionStatement","src":"3855:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3832:6:16","nodeType":"YulIdentifier","src":"3832:6:16"},{"kind":"number","nativeSrc":"3840:4:16","nodeType":"YulLiteral","src":"3840:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3828:3:16","nodeType":"YulIdentifier","src":"3828:3:16"},"nativeSrc":"3828:17:16","nodeType":"YulFunctionCall","src":"3828:17:16"},{"name":"end","nativeSrc":"3847:3:16","nodeType":"YulIdentifier","src":"3847:3:16"}],"functionName":{"name":"slt","nativeSrc":"3824:3:16","nodeType":"YulIdentifier","src":"3824:3:16"},"nativeSrc":"3824:27:16","nodeType":"YulFunctionCall","src":"3824:27:16"}],"functionName":{"name":"iszero","nativeSrc":"3817:6:16","nodeType":"YulIdentifier","src":"3817:6:16"},"nativeSrc":"3817:35:16","nodeType":"YulFunctionCall","src":"3817:35:16"},"nativeSrc":"3814:122:16","nodeType":"YulIf","src":"3814:122:16"},{"nativeSrc":"3945:34:16","nodeType":"YulVariableDeclaration","src":"3945:34:16","value":{"arguments":[{"name":"offset","nativeSrc":"3972:6:16","nodeType":"YulIdentifier","src":"3972:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"3959:12:16","nodeType":"YulIdentifier","src":"3959:12:16"},"nativeSrc":"3959:20:16","nodeType":"YulFunctionCall","src":"3959:20:16"},"variables":[{"name":"length","nativeSrc":"3949:6:16","nodeType":"YulTypedName","src":"3949:6:16","type":""}]},{"nativeSrc":"3988:87:16","nodeType":"YulAssignment","src":"3988:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4048:6:16","nodeType":"YulIdentifier","src":"4048:6:16"},{"kind":"number","nativeSrc":"4056:4:16","nodeType":"YulLiteral","src":"4056:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4044:3:16","nodeType":"YulIdentifier","src":"4044:3:16"},"nativeSrc":"4044:17:16","nodeType":"YulFunctionCall","src":"4044:17:16"},{"name":"length","nativeSrc":"4063:6:16","nodeType":"YulIdentifier","src":"4063:6:16"},{"name":"end","nativeSrc":"4071:3:16","nodeType":"YulIdentifier","src":"4071:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"3997:46:16","nodeType":"YulIdentifier","src":"3997:46:16"},"nativeSrc":"3997:78:16","nodeType":"YulFunctionCall","src":"3997:78:16"},"variableNames":[{"name":"array","nativeSrc":"3988:5:16","nodeType":"YulIdentifier","src":"3988:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"3743:338:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3782:6:16","nodeType":"YulTypedName","src":"3782:6:16","type":""},{"name":"end","nativeSrc":"3790:3:16","nodeType":"YulTypedName","src":"3790:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3798:5:16","nodeType":"YulTypedName","src":"3798:5:16","type":""}],"src":"3743:338:16"},{"body":{"nativeSrc":"4179:560:16","nodeType":"YulBlock","src":"4179:560:16","statements":[{"body":{"nativeSrc":"4225:83:16","nodeType":"YulBlock","src":"4225:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4227:77:16","nodeType":"YulIdentifier","src":"4227:77:16"},"nativeSrc":"4227:79:16","nodeType":"YulFunctionCall","src":"4227:79:16"},"nativeSrc":"4227:79:16","nodeType":"YulExpressionStatement","src":"4227:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4200:7:16","nodeType":"YulIdentifier","src":"4200:7:16"},{"name":"headStart","nativeSrc":"4209:9:16","nodeType":"YulIdentifier","src":"4209:9:16"}],"functionName":{"name":"sub","nativeSrc":"4196:3:16","nodeType":"YulIdentifier","src":"4196:3:16"},"nativeSrc":"4196:23:16","nodeType":"YulFunctionCall","src":"4196:23:16"},{"kind":"number","nativeSrc":"4221:2:16","nodeType":"YulLiteral","src":"4221:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4192:3:16","nodeType":"YulIdentifier","src":"4192:3:16"},"nativeSrc":"4192:32:16","nodeType":"YulFunctionCall","src":"4192:32:16"},"nativeSrc":"4189:119:16","nodeType":"YulIf","src":"4189:119:16"},{"nativeSrc":"4318:117:16","nodeType":"YulBlock","src":"4318:117:16","statements":[{"nativeSrc":"4333:15:16","nodeType":"YulVariableDeclaration","src":"4333:15:16","value":{"kind":"number","nativeSrc":"4347:1:16","nodeType":"YulLiteral","src":"4347:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4337:6:16","nodeType":"YulTypedName","src":"4337:6:16","type":""}]},{"nativeSrc":"4362:63:16","nodeType":"YulAssignment","src":"4362:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4397:9:16","nodeType":"YulIdentifier","src":"4397:9:16"},{"name":"offset","nativeSrc":"4408:6:16","nodeType":"YulIdentifier","src":"4408:6:16"}],"functionName":{"name":"add","nativeSrc":"4393:3:16","nodeType":"YulIdentifier","src":"4393:3:16"},"nativeSrc":"4393:22:16","nodeType":"YulFunctionCall","src":"4393:22:16"},{"name":"dataEnd","nativeSrc":"4417:7:16","nodeType":"YulIdentifier","src":"4417:7:16"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4372:20:16","nodeType":"YulIdentifier","src":"4372:20:16"},"nativeSrc":"4372:53:16","nodeType":"YulFunctionCall","src":"4372:53:16"},"variableNames":[{"name":"value0","nativeSrc":"4362:6:16","nodeType":"YulIdentifier","src":"4362:6:16"}]}]},{"nativeSrc":"4445:287:16","nodeType":"YulBlock","src":"4445:287:16","statements":[{"nativeSrc":"4460:46:16","nodeType":"YulVariableDeclaration","src":"4460:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4491:9:16","nodeType":"YulIdentifier","src":"4491:9:16"},{"kind":"number","nativeSrc":"4502:2:16","nodeType":"YulLiteral","src":"4502:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4487:3:16","nodeType":"YulIdentifier","src":"4487:3:16"},"nativeSrc":"4487:18:16","nodeType":"YulFunctionCall","src":"4487:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"4474:12:16","nodeType":"YulIdentifier","src":"4474:12:16"},"nativeSrc":"4474:32:16","nodeType":"YulFunctionCall","src":"4474:32:16"},"variables":[{"name":"offset","nativeSrc":"4464:6:16","nodeType":"YulTypedName","src":"4464:6:16","type":""}]},{"body":{"nativeSrc":"4553:83:16","nodeType":"YulBlock","src":"4553:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4555:77:16","nodeType":"YulIdentifier","src":"4555:77:16"},"nativeSrc":"4555:79:16","nodeType":"YulFunctionCall","src":"4555:79:16"},"nativeSrc":"4555:79:16","nodeType":"YulExpressionStatement","src":"4555:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4525:6:16","nodeType":"YulIdentifier","src":"4525:6:16"},{"kind":"number","nativeSrc":"4533:18:16","nodeType":"YulLiteral","src":"4533:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4522:2:16","nodeType":"YulIdentifier","src":"4522:2:16"},"nativeSrc":"4522:30:16","nodeType":"YulFunctionCall","src":"4522:30:16"},"nativeSrc":"4519:117:16","nodeType":"YulIf","src":"4519:117:16"},{"nativeSrc":"4650:72:16","nodeType":"YulAssignment","src":"4650:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4694:9:16","nodeType":"YulIdentifier","src":"4694:9:16"},{"name":"offset","nativeSrc":"4705:6:16","nodeType":"YulIdentifier","src":"4705:6:16"}],"functionName":{"name":"add","nativeSrc":"4690:3:16","nodeType":"YulIdentifier","src":"4690:3:16"},"nativeSrc":"4690:22:16","nodeType":"YulFunctionCall","src":"4690:22:16"},{"name":"dataEnd","nativeSrc":"4714:7:16","nodeType":"YulIdentifier","src":"4714:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"4660:29:16","nodeType":"YulIdentifier","src":"4660:29:16"},"nativeSrc":"4660:62:16","nodeType":"YulFunctionCall","src":"4660:62:16"},"variableNames":[{"name":"value1","nativeSrc":"4650:6:16","nodeType":"YulIdentifier","src":"4650:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nativeSrc":"4087:652:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4141:9:16","nodeType":"YulTypedName","src":"4141:9:16","type":""},{"name":"dataEnd","nativeSrc":"4152:7:16","nodeType":"YulTypedName","src":"4152:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4164:6:16","nodeType":"YulTypedName","src":"4164:6:16","type":""},{"name":"value1","nativeSrc":"4172:6:16","nodeType":"YulTypedName","src":"4172:6:16","type":""}],"src":"4087:652:16"},{"body":{"nativeSrc":"4808:52:16","nodeType":"YulBlock","src":"4808:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4825:3:16","nodeType":"YulIdentifier","src":"4825:3:16"},{"arguments":[{"name":"value","nativeSrc":"4847:5:16","nodeType":"YulIdentifier","src":"4847:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"4830:16:16","nodeType":"YulIdentifier","src":"4830:16:16"},"nativeSrc":"4830:23:16","nodeType":"YulFunctionCall","src":"4830:23:16"}],"functionName":{"name":"mstore","nativeSrc":"4818:6:16","nodeType":"YulIdentifier","src":"4818:6:16"},"nativeSrc":"4818:36:16","nodeType":"YulFunctionCall","src":"4818:36:16"},"nativeSrc":"4818:36:16","nodeType":"YulExpressionStatement","src":"4818:36:16"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"4745:115:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4796:5:16","nodeType":"YulTypedName","src":"4796:5:16","type":""},{"name":"pos","nativeSrc":"4803:3:16","nodeType":"YulTypedName","src":"4803:3:16","type":""}],"src":"4745:115:16"},{"body":{"nativeSrc":"4962:122:16","nodeType":"YulBlock","src":"4962:122:16","statements":[{"nativeSrc":"4972:26:16","nodeType":"YulAssignment","src":"4972:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"4984:9:16","nodeType":"YulIdentifier","src":"4984:9:16"},{"kind":"number","nativeSrc":"4995:2:16","nodeType":"YulLiteral","src":"4995:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4980:3:16","nodeType":"YulIdentifier","src":"4980:3:16"},"nativeSrc":"4980:18:16","nodeType":"YulFunctionCall","src":"4980:18:16"},"variableNames":[{"name":"tail","nativeSrc":"4972:4:16","nodeType":"YulIdentifier","src":"4972:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5050:6:16","nodeType":"YulIdentifier","src":"5050:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"5063:9:16","nodeType":"YulIdentifier","src":"5063:9:16"},{"kind":"number","nativeSrc":"5074:1:16","nodeType":"YulLiteral","src":"5074:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5059:3:16","nodeType":"YulIdentifier","src":"5059:3:16"},"nativeSrc":"5059:17:16","nodeType":"YulFunctionCall","src":"5059:17:16"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"5008:41:16","nodeType":"YulIdentifier","src":"5008:41:16"},"nativeSrc":"5008:69:16","nodeType":"YulFunctionCall","src":"5008:69:16"},"nativeSrc":"5008:69:16","nodeType":"YulExpressionStatement","src":"5008:69:16"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"4866:218:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4934:9:16","nodeType":"YulTypedName","src":"4934:9:16","type":""},{"name":"value0","nativeSrc":"4946:6:16","nodeType":"YulTypedName","src":"4946:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4957:4:16","nodeType":"YulTypedName","src":"4957:4:16","type":""}],"src":"4866:218:16"},{"body":{"nativeSrc":"5135:81:16","nodeType":"YulBlock","src":"5135:81:16","statements":[{"nativeSrc":"5145:65:16","nodeType":"YulAssignment","src":"5145:65:16","value":{"arguments":[{"name":"value","nativeSrc":"5160:5:16","nodeType":"YulIdentifier","src":"5160:5:16"},{"kind":"number","nativeSrc":"5167:42:16","nodeType":"YulLiteral","src":"5167:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5156:3:16","nodeType":"YulIdentifier","src":"5156:3:16"},"nativeSrc":"5156:54:16","nodeType":"YulFunctionCall","src":"5156:54:16"},"variableNames":[{"name":"cleaned","nativeSrc":"5145:7:16","nodeType":"YulIdentifier","src":"5145:7:16"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5090:126:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5117:5:16","nodeType":"YulTypedName","src":"5117:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5127:7:16","nodeType":"YulTypedName","src":"5127:7:16","type":""}],"src":"5090:126:16"},{"body":{"nativeSrc":"5275:51:16","nodeType":"YulBlock","src":"5275:51:16","statements":[{"nativeSrc":"5285:35:16","nodeType":"YulAssignment","src":"5285:35:16","value":{"arguments":[{"name":"value","nativeSrc":"5314:5:16","nodeType":"YulIdentifier","src":"5314:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5296:17:16","nodeType":"YulIdentifier","src":"5296:17:16"},"nativeSrc":"5296:24:16","nodeType":"YulFunctionCall","src":"5296:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"5285:7:16","nodeType":"YulIdentifier","src":"5285:7:16"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"5222:104:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5257:5:16","nodeType":"YulTypedName","src":"5257:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5267:7:16","nodeType":"YulTypedName","src":"5267:7:16","type":""}],"src":"5222:104:16"},{"body":{"nativeSrc":"5383:87:16","nodeType":"YulBlock","src":"5383:87:16","statements":[{"body":{"nativeSrc":"5448:16:16","nodeType":"YulBlock","src":"5448:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5457:1:16","nodeType":"YulLiteral","src":"5457:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5460:1:16","nodeType":"YulLiteral","src":"5460:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5450:6:16","nodeType":"YulIdentifier","src":"5450:6:16"},"nativeSrc":"5450:12:16","nodeType":"YulFunctionCall","src":"5450:12:16"},"nativeSrc":"5450:12:16","nodeType":"YulExpressionStatement","src":"5450:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5406:5:16","nodeType":"YulIdentifier","src":"5406:5:16"},{"arguments":[{"name":"value","nativeSrc":"5439:5:16","nodeType":"YulIdentifier","src":"5439:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"5413:25:16","nodeType":"YulIdentifier","src":"5413:25:16"},"nativeSrc":"5413:32:16","nodeType":"YulFunctionCall","src":"5413:32:16"}],"functionName":{"name":"eq","nativeSrc":"5403:2:16","nodeType":"YulIdentifier","src":"5403:2:16"},"nativeSrc":"5403:43:16","nodeType":"YulFunctionCall","src":"5403:43:16"}],"functionName":{"name":"iszero","nativeSrc":"5396:6:16","nodeType":"YulIdentifier","src":"5396:6:16"},"nativeSrc":"5396:51:16","nodeType":"YulFunctionCall","src":"5396:51:16"},"nativeSrc":"5393:71:16","nodeType":"YulIf","src":"5393:71:16"}]},"name":"validator_revert_t_address_payable","nativeSrc":"5332:138:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5376:5:16","nodeType":"YulTypedName","src":"5376:5:16","type":""}],"src":"5332:138:16"},{"body":{"nativeSrc":"5536:95:16","nodeType":"YulBlock","src":"5536:95:16","statements":[{"nativeSrc":"5546:29:16","nodeType":"YulAssignment","src":"5546:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"5568:6:16","nodeType":"YulIdentifier","src":"5568:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"5555:12:16","nodeType":"YulIdentifier","src":"5555:12:16"},"nativeSrc":"5555:20:16","nodeType":"YulFunctionCall","src":"5555:20:16"},"variableNames":[{"name":"value","nativeSrc":"5546:5:16","nodeType":"YulIdentifier","src":"5546:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5619:5:16","nodeType":"YulIdentifier","src":"5619:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"5584:34:16","nodeType":"YulIdentifier","src":"5584:34:16"},"nativeSrc":"5584:41:16","nodeType":"YulFunctionCall","src":"5584:41:16"},"nativeSrc":"5584:41:16","nodeType":"YulExpressionStatement","src":"5584:41:16"}]},"name":"abi_decode_t_address_payable","nativeSrc":"5476:155:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5514:6:16","nodeType":"YulTypedName","src":"5514:6:16","type":""},{"name":"end","nativeSrc":"5522:3:16","nodeType":"YulTypedName","src":"5522:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5530:5:16","nodeType":"YulTypedName","src":"5530:5:16","type":""}],"src":"5476:155:16"},{"body":{"nativeSrc":"5682:32:16","nodeType":"YulBlock","src":"5682:32:16","statements":[{"nativeSrc":"5692:16:16","nodeType":"YulAssignment","src":"5692:16:16","value":{"name":"value","nativeSrc":"5703:5:16","nodeType":"YulIdentifier","src":"5703:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"5692:7:16","nodeType":"YulIdentifier","src":"5692:7:16"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5637:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5664:5:16","nodeType":"YulTypedName","src":"5664:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5674:7:16","nodeType":"YulTypedName","src":"5674:7:16","type":""}],"src":"5637:77:16"},{"body":{"nativeSrc":"5763:79:16","nodeType":"YulBlock","src":"5763:79:16","statements":[{"body":{"nativeSrc":"5820:16:16","nodeType":"YulBlock","src":"5820:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5829:1:16","nodeType":"YulLiteral","src":"5829:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5832:1:16","nodeType":"YulLiteral","src":"5832:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5822:6:16","nodeType":"YulIdentifier","src":"5822:6:16"},"nativeSrc":"5822:12:16","nodeType":"YulFunctionCall","src":"5822:12:16"},"nativeSrc":"5822:12:16","nodeType":"YulExpressionStatement","src":"5822:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5786:5:16","nodeType":"YulIdentifier","src":"5786:5:16"},{"arguments":[{"name":"value","nativeSrc":"5811:5:16","nodeType":"YulIdentifier","src":"5811:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5793:17:16","nodeType":"YulIdentifier","src":"5793:17:16"},"nativeSrc":"5793:24:16","nodeType":"YulFunctionCall","src":"5793:24:16"}],"functionName":{"name":"eq","nativeSrc":"5783:2:16","nodeType":"YulIdentifier","src":"5783:2:16"},"nativeSrc":"5783:35:16","nodeType":"YulFunctionCall","src":"5783:35:16"}],"functionName":{"name":"iszero","nativeSrc":"5776:6:16","nodeType":"YulIdentifier","src":"5776:6:16"},"nativeSrc":"5776:43:16","nodeType":"YulFunctionCall","src":"5776:43:16"},"nativeSrc":"5773:63:16","nodeType":"YulIf","src":"5773:63:16"}]},"name":"validator_revert_t_uint256","nativeSrc":"5720:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5756:5:16","nodeType":"YulTypedName","src":"5756:5:16","type":""}],"src":"5720:122:16"},{"body":{"nativeSrc":"5900:87:16","nodeType":"YulBlock","src":"5900:87:16","statements":[{"nativeSrc":"5910:29:16","nodeType":"YulAssignment","src":"5910:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"5932:6:16","nodeType":"YulIdentifier","src":"5932:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"5919:12:16","nodeType":"YulIdentifier","src":"5919:12:16"},"nativeSrc":"5919:20:16","nodeType":"YulFunctionCall","src":"5919:20:16"},"variableNames":[{"name":"value","nativeSrc":"5910:5:16","nodeType":"YulIdentifier","src":"5910:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5975:5:16","nodeType":"YulIdentifier","src":"5975:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5948:26:16","nodeType":"YulIdentifier","src":"5948:26:16"},"nativeSrc":"5948:33:16","nodeType":"YulFunctionCall","src":"5948:33:16"},"nativeSrc":"5948:33:16","nodeType":"YulExpressionStatement","src":"5948:33:16"}]},"name":"abi_decode_t_uint256","nativeSrc":"5848:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5878:6:16","nodeType":"YulTypedName","src":"5878:6:16","type":""},{"name":"end","nativeSrc":"5886:3:16","nodeType":"YulTypedName","src":"5886:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5894:5:16","nodeType":"YulTypedName","src":"5894:5:16","type":""}],"src":"5848:139:16"},{"body":{"nativeSrc":"6084:399:16","nodeType":"YulBlock","src":"6084:399:16","statements":[{"body":{"nativeSrc":"6130:83:16","nodeType":"YulBlock","src":"6130:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6132:77:16","nodeType":"YulIdentifier","src":"6132:77:16"},"nativeSrc":"6132:79:16","nodeType":"YulFunctionCall","src":"6132:79:16"},"nativeSrc":"6132:79:16","nodeType":"YulExpressionStatement","src":"6132:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6105:7:16","nodeType":"YulIdentifier","src":"6105:7:16"},{"name":"headStart","nativeSrc":"6114:9:16","nodeType":"YulIdentifier","src":"6114:9:16"}],"functionName":{"name":"sub","nativeSrc":"6101:3:16","nodeType":"YulIdentifier","src":"6101:3:16"},"nativeSrc":"6101:23:16","nodeType":"YulFunctionCall","src":"6101:23:16"},{"kind":"number","nativeSrc":"6126:2:16","nodeType":"YulLiteral","src":"6126:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6097:3:16","nodeType":"YulIdentifier","src":"6097:3:16"},"nativeSrc":"6097:32:16","nodeType":"YulFunctionCall","src":"6097:32:16"},"nativeSrc":"6094:119:16","nodeType":"YulIf","src":"6094:119:16"},{"nativeSrc":"6223:125:16","nodeType":"YulBlock","src":"6223:125:16","statements":[{"nativeSrc":"6238:15:16","nodeType":"YulVariableDeclaration","src":"6238:15:16","value":{"kind":"number","nativeSrc":"6252:1:16","nodeType":"YulLiteral","src":"6252:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6242:6:16","nodeType":"YulTypedName","src":"6242:6:16","type":""}]},{"nativeSrc":"6267:71:16","nodeType":"YulAssignment","src":"6267:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6310:9:16","nodeType":"YulIdentifier","src":"6310:9:16"},{"name":"offset","nativeSrc":"6321:6:16","nodeType":"YulIdentifier","src":"6321:6:16"}],"functionName":{"name":"add","nativeSrc":"6306:3:16","nodeType":"YulIdentifier","src":"6306:3:16"},"nativeSrc":"6306:22:16","nodeType":"YulFunctionCall","src":"6306:22:16"},{"name":"dataEnd","nativeSrc":"6330:7:16","nodeType":"YulIdentifier","src":"6330:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"6277:28:16","nodeType":"YulIdentifier","src":"6277:28:16"},"nativeSrc":"6277:61:16","nodeType":"YulFunctionCall","src":"6277:61:16"},"variableNames":[{"name":"value0","nativeSrc":"6267:6:16","nodeType":"YulIdentifier","src":"6267:6:16"}]}]},{"nativeSrc":"6358:118:16","nodeType":"YulBlock","src":"6358:118:16","statements":[{"nativeSrc":"6373:16:16","nodeType":"YulVariableDeclaration","src":"6373:16:16","value":{"kind":"number","nativeSrc":"6387:2:16","nodeType":"YulLiteral","src":"6387:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6377:6:16","nodeType":"YulTypedName","src":"6377:6:16","type":""}]},{"nativeSrc":"6403:63:16","nodeType":"YulAssignment","src":"6403:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6438:9:16","nodeType":"YulIdentifier","src":"6438:9:16"},{"name":"offset","nativeSrc":"6449:6:16","nodeType":"YulIdentifier","src":"6449:6:16"}],"functionName":{"name":"add","nativeSrc":"6434:3:16","nodeType":"YulIdentifier","src":"6434:3:16"},"nativeSrc":"6434:22:16","nodeType":"YulFunctionCall","src":"6434:22:16"},{"name":"dataEnd","nativeSrc":"6458:7:16","nodeType":"YulIdentifier","src":"6458:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6413:20:16","nodeType":"YulIdentifier","src":"6413:20:16"},"nativeSrc":"6413:53:16","nodeType":"YulFunctionCall","src":"6413:53:16"},"variableNames":[{"name":"value1","nativeSrc":"6403:6:16","nodeType":"YulIdentifier","src":"6403:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"5993:490:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6046:9:16","nodeType":"YulTypedName","src":"6046:9:16","type":""},{"name":"dataEnd","nativeSrc":"6057:7:16","nodeType":"YulTypedName","src":"6057:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6069:6:16","nodeType":"YulTypedName","src":"6069:6:16","type":""},{"name":"value1","nativeSrc":"6077:6:16","nodeType":"YulTypedName","src":"6077:6:16","type":""}],"src":"5993:490:16"},{"body":{"nativeSrc":"6534:51:16","nodeType":"YulBlock","src":"6534:51:16","statements":[{"nativeSrc":"6544:35:16","nodeType":"YulAssignment","src":"6544:35:16","value":{"arguments":[{"name":"value","nativeSrc":"6573:5:16","nodeType":"YulIdentifier","src":"6573:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6555:17:16","nodeType":"YulIdentifier","src":"6555:17:16"},"nativeSrc":"6555:24:16","nodeType":"YulFunctionCall","src":"6555:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"6544:7:16","nodeType":"YulIdentifier","src":"6544:7:16"}]}]},"name":"cleanup_t_address","nativeSrc":"6489:96:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6516:5:16","nodeType":"YulTypedName","src":"6516:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6526:7:16","nodeType":"YulTypedName","src":"6526:7:16","type":""}],"src":"6489:96:16"},{"body":{"nativeSrc":"6634:79:16","nodeType":"YulBlock","src":"6634:79:16","statements":[{"body":{"nativeSrc":"6691:16:16","nodeType":"YulBlock","src":"6691:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6700:1:16","nodeType":"YulLiteral","src":"6700:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"6703:1:16","nodeType":"YulLiteral","src":"6703:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6693:6:16","nodeType":"YulIdentifier","src":"6693:6:16"},"nativeSrc":"6693:12:16","nodeType":"YulFunctionCall","src":"6693:12:16"},"nativeSrc":"6693:12:16","nodeType":"YulExpressionStatement","src":"6693:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6657:5:16","nodeType":"YulIdentifier","src":"6657:5:16"},{"arguments":[{"name":"value","nativeSrc":"6682:5:16","nodeType":"YulIdentifier","src":"6682:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6664:17:16","nodeType":"YulIdentifier","src":"6664:17:16"},"nativeSrc":"6664:24:16","nodeType":"YulFunctionCall","src":"6664:24:16"}],"functionName":{"name":"eq","nativeSrc":"6654:2:16","nodeType":"YulIdentifier","src":"6654:2:16"},"nativeSrc":"6654:35:16","nodeType":"YulFunctionCall","src":"6654:35:16"}],"functionName":{"name":"iszero","nativeSrc":"6647:6:16","nodeType":"YulIdentifier","src":"6647:6:16"},"nativeSrc":"6647:43:16","nodeType":"YulFunctionCall","src":"6647:43:16"},"nativeSrc":"6644:63:16","nodeType":"YulIf","src":"6644:63:16"}]},"name":"validator_revert_t_address","nativeSrc":"6591:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6627:5:16","nodeType":"YulTypedName","src":"6627:5:16","type":""}],"src":"6591:122:16"},{"body":{"nativeSrc":"6771:87:16","nodeType":"YulBlock","src":"6771:87:16","statements":[{"nativeSrc":"6781:29:16","nodeType":"YulAssignment","src":"6781:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"6803:6:16","nodeType":"YulIdentifier","src":"6803:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"6790:12:16","nodeType":"YulIdentifier","src":"6790:12:16"},"nativeSrc":"6790:20:16","nodeType":"YulFunctionCall","src":"6790:20:16"},"variableNames":[{"name":"value","nativeSrc":"6781:5:16","nodeType":"YulIdentifier","src":"6781:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6846:5:16","nodeType":"YulIdentifier","src":"6846:5:16"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"6819:26:16","nodeType":"YulIdentifier","src":"6819:26:16"},"nativeSrc":"6819:33:16","nodeType":"YulFunctionCall","src":"6819:33:16"},"nativeSrc":"6819:33:16","nodeType":"YulExpressionStatement","src":"6819:33:16"}]},"name":"abi_decode_t_address","nativeSrc":"6719:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6749:6:16","nodeType":"YulTypedName","src":"6749:6:16","type":""},{"name":"end","nativeSrc":"6757:3:16","nodeType":"YulTypedName","src":"6757:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6765:5:16","nodeType":"YulTypedName","src":"6765:5:16","type":""}],"src":"6719:139:16"},{"body":{"nativeSrc":"6923:51:16","nodeType":"YulBlock","src":"6923:51:16","statements":[{"nativeSrc":"6933:35:16","nodeType":"YulAssignment","src":"6933:35:16","value":{"arguments":[{"name":"value","nativeSrc":"6962:5:16","nodeType":"YulIdentifier","src":"6962:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6944:17:16","nodeType":"YulIdentifier","src":"6944:17:16"},"nativeSrc":"6944:24:16","nodeType":"YulFunctionCall","src":"6944:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"6933:7:16","nodeType":"YulIdentifier","src":"6933:7:16"}]}]},"name":"cleanup_t_contract$_IERC20_$181","nativeSrc":"6864:110:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6905:5:16","nodeType":"YulTypedName","src":"6905:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6915:7:16","nodeType":"YulTypedName","src":"6915:7:16","type":""}],"src":"6864:110:16"},{"body":{"nativeSrc":"7037:93:16","nodeType":"YulBlock","src":"7037:93:16","statements":[{"body":{"nativeSrc":"7108:16:16","nodeType":"YulBlock","src":"7108:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7117:1:16","nodeType":"YulLiteral","src":"7117:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"7120:1:16","nodeType":"YulLiteral","src":"7120:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7110:6:16","nodeType":"YulIdentifier","src":"7110:6:16"},"nativeSrc":"7110:12:16","nodeType":"YulFunctionCall","src":"7110:12:16"},"nativeSrc":"7110:12:16","nodeType":"YulExpressionStatement","src":"7110:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7060:5:16","nodeType":"YulIdentifier","src":"7060:5:16"},{"arguments":[{"name":"value","nativeSrc":"7099:5:16","nodeType":"YulIdentifier","src":"7099:5:16"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$181","nativeSrc":"7067:31:16","nodeType":"YulIdentifier","src":"7067:31:16"},"nativeSrc":"7067:38:16","nodeType":"YulFunctionCall","src":"7067:38:16"}],"functionName":{"name":"eq","nativeSrc":"7057:2:16","nodeType":"YulIdentifier","src":"7057:2:16"},"nativeSrc":"7057:49:16","nodeType":"YulFunctionCall","src":"7057:49:16"}],"functionName":{"name":"iszero","nativeSrc":"7050:6:16","nodeType":"YulIdentifier","src":"7050:6:16"},"nativeSrc":"7050:57:16","nodeType":"YulFunctionCall","src":"7050:57:16"},"nativeSrc":"7047:77:16","nodeType":"YulIf","src":"7047:77:16"}]},"name":"validator_revert_t_contract$_IERC20_$181","nativeSrc":"6980:150:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7030:5:16","nodeType":"YulTypedName","src":"7030:5:16","type":""}],"src":"6980:150:16"},{"body":{"nativeSrc":"7202:101:16","nodeType":"YulBlock","src":"7202:101:16","statements":[{"nativeSrc":"7212:29:16","nodeType":"YulAssignment","src":"7212:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"7234:6:16","nodeType":"YulIdentifier","src":"7234:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"7221:12:16","nodeType":"YulIdentifier","src":"7221:12:16"},"nativeSrc":"7221:20:16","nodeType":"YulFunctionCall","src":"7221:20:16"},"variableNames":[{"name":"value","nativeSrc":"7212:5:16","nodeType":"YulIdentifier","src":"7212:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7291:5:16","nodeType":"YulIdentifier","src":"7291:5:16"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$181","nativeSrc":"7250:40:16","nodeType":"YulIdentifier","src":"7250:40:16"},"nativeSrc":"7250:47:16","nodeType":"YulFunctionCall","src":"7250:47:16"},"nativeSrc":"7250:47:16","nodeType":"YulExpressionStatement","src":"7250:47:16"}]},"name":"abi_decode_t_contract$_IERC20_$181","nativeSrc":"7136:167:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7180:6:16","nodeType":"YulTypedName","src":"7180:6:16","type":""},{"name":"end","nativeSrc":"7188:3:16","nodeType":"YulTypedName","src":"7188:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7196:5:16","nodeType":"YulTypedName","src":"7196:5:16","type":""}],"src":"7136:167:16"},{"body":{"nativeSrc":"7423:533:16","nodeType":"YulBlock","src":"7423:533:16","statements":[{"body":{"nativeSrc":"7469:83:16","nodeType":"YulBlock","src":"7469:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7471:77:16","nodeType":"YulIdentifier","src":"7471:77:16"},"nativeSrc":"7471:79:16","nodeType":"YulFunctionCall","src":"7471:79:16"},"nativeSrc":"7471:79:16","nodeType":"YulExpressionStatement","src":"7471:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7444:7:16","nodeType":"YulIdentifier","src":"7444:7:16"},{"name":"headStart","nativeSrc":"7453:9:16","nodeType":"YulIdentifier","src":"7453:9:16"}],"functionName":{"name":"sub","nativeSrc":"7440:3:16","nodeType":"YulIdentifier","src":"7440:3:16"},"nativeSrc":"7440:23:16","nodeType":"YulFunctionCall","src":"7440:23:16"},{"kind":"number","nativeSrc":"7465:2:16","nodeType":"YulLiteral","src":"7465:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7436:3:16","nodeType":"YulIdentifier","src":"7436:3:16"},"nativeSrc":"7436:32:16","nodeType":"YulFunctionCall","src":"7436:32:16"},"nativeSrc":"7433:119:16","nodeType":"YulIf","src":"7433:119:16"},{"nativeSrc":"7562:117:16","nodeType":"YulBlock","src":"7562:117:16","statements":[{"nativeSrc":"7577:15:16","nodeType":"YulVariableDeclaration","src":"7577:15:16","value":{"kind":"number","nativeSrc":"7591:1:16","nodeType":"YulLiteral","src":"7591:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7581:6:16","nodeType":"YulTypedName","src":"7581:6:16","type":""}]},{"nativeSrc":"7606:63:16","nodeType":"YulAssignment","src":"7606:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7641:9:16","nodeType":"YulIdentifier","src":"7641:9:16"},{"name":"offset","nativeSrc":"7652:6:16","nodeType":"YulIdentifier","src":"7652:6:16"}],"functionName":{"name":"add","nativeSrc":"7637:3:16","nodeType":"YulIdentifier","src":"7637:3:16"},"nativeSrc":"7637:22:16","nodeType":"YulFunctionCall","src":"7637:22:16"},{"name":"dataEnd","nativeSrc":"7661:7:16","nodeType":"YulIdentifier","src":"7661:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7616:20:16","nodeType":"YulIdentifier","src":"7616:20:16"},"nativeSrc":"7616:53:16","nodeType":"YulFunctionCall","src":"7616:53:16"},"variableNames":[{"name":"value0","nativeSrc":"7606:6:16","nodeType":"YulIdentifier","src":"7606:6:16"}]}]},{"nativeSrc":"7689:118:16","nodeType":"YulBlock","src":"7689:118:16","statements":[{"nativeSrc":"7704:16:16","nodeType":"YulVariableDeclaration","src":"7704:16:16","value":{"kind":"number","nativeSrc":"7718:2:16","nodeType":"YulLiteral","src":"7718:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7708:6:16","nodeType":"YulTypedName","src":"7708:6:16","type":""}]},{"nativeSrc":"7734:63:16","nodeType":"YulAssignment","src":"7734:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7769:9:16","nodeType":"YulIdentifier","src":"7769:9:16"},{"name":"offset","nativeSrc":"7780:6:16","nodeType":"YulIdentifier","src":"7780:6:16"}],"functionName":{"name":"add","nativeSrc":"7765:3:16","nodeType":"YulIdentifier","src":"7765:3:16"},"nativeSrc":"7765:22:16","nodeType":"YulFunctionCall","src":"7765:22:16"},{"name":"dataEnd","nativeSrc":"7789:7:16","nodeType":"YulIdentifier","src":"7789:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7744:20:16","nodeType":"YulIdentifier","src":"7744:20:16"},"nativeSrc":"7744:53:16","nodeType":"YulFunctionCall","src":"7744:53:16"},"variableNames":[{"name":"value1","nativeSrc":"7734:6:16","nodeType":"YulIdentifier","src":"7734:6:16"}]}]},{"nativeSrc":"7817:132:16","nodeType":"YulBlock","src":"7817:132:16","statements":[{"nativeSrc":"7832:16:16","nodeType":"YulVariableDeclaration","src":"7832:16:16","value":{"kind":"number","nativeSrc":"7846:2:16","nodeType":"YulLiteral","src":"7846:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"7836:6:16","nodeType":"YulTypedName","src":"7836:6:16","type":""}]},{"nativeSrc":"7862:77:16","nodeType":"YulAssignment","src":"7862:77:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7911:9:16","nodeType":"YulIdentifier","src":"7911:9:16"},{"name":"offset","nativeSrc":"7922:6:16","nodeType":"YulIdentifier","src":"7922:6:16"}],"functionName":{"name":"add","nativeSrc":"7907:3:16","nodeType":"YulIdentifier","src":"7907:3:16"},"nativeSrc":"7907:22:16","nodeType":"YulFunctionCall","src":"7907:22:16"},{"name":"dataEnd","nativeSrc":"7931:7:16","nodeType":"YulIdentifier","src":"7931:7:16"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$181","nativeSrc":"7872:34:16","nodeType":"YulIdentifier","src":"7872:34:16"},"nativeSrc":"7872:67:16","nodeType":"YulFunctionCall","src":"7872:67:16"},"variableNames":[{"name":"value2","nativeSrc":"7862:6:16","nodeType":"YulIdentifier","src":"7862:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181","nativeSrc":"7309:647:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7377:9:16","nodeType":"YulTypedName","src":"7377:9:16","type":""},{"name":"dataEnd","nativeSrc":"7388:7:16","nodeType":"YulTypedName","src":"7388:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7400:6:16","nodeType":"YulTypedName","src":"7400:6:16","type":""},{"name":"value1","nativeSrc":"7408:6:16","nodeType":"YulTypedName","src":"7408:6:16","type":""},{"name":"value2","nativeSrc":"7416:6:16","nodeType":"YulTypedName","src":"7416:6:16","type":""}],"src":"7309:647:16"},{"body":{"nativeSrc":"8051:28:16","nodeType":"YulBlock","src":"8051:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8068:1:16","nodeType":"YulLiteral","src":"8068:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"8071:1:16","nodeType":"YulLiteral","src":"8071:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8061:6:16","nodeType":"YulIdentifier","src":"8061:6:16"},"nativeSrc":"8061:12:16","nodeType":"YulFunctionCall","src":"8061:12:16"},"nativeSrc":"8061:12:16","nodeType":"YulExpressionStatement","src":"8061:12:16"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"7962:117:16","nodeType":"YulFunctionDefinition","src":"7962:117:16"},{"body":{"nativeSrc":"8174:28:16","nodeType":"YulBlock","src":"8174:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8191:1:16","nodeType":"YulLiteral","src":"8191:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"8194:1:16","nodeType":"YulLiteral","src":"8194:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8184:6:16","nodeType":"YulIdentifier","src":"8184:6:16"},"nativeSrc":"8184:12:16","nodeType":"YulFunctionCall","src":"8184:12:16"},"nativeSrc":"8184:12:16","nodeType":"YulExpressionStatement","src":"8184:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8085:117:16","nodeType":"YulFunctionDefinition","src":"8085:117:16"},{"body":{"nativeSrc":"8315:478:16","nodeType":"YulBlock","src":"8315:478:16","statements":[{"body":{"nativeSrc":"8364:83:16","nodeType":"YulBlock","src":"8364:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8366:77:16","nodeType":"YulIdentifier","src":"8366:77:16"},"nativeSrc":"8366:79:16","nodeType":"YulFunctionCall","src":"8366:79:16"},"nativeSrc":"8366:79:16","nodeType":"YulExpressionStatement","src":"8366:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8343:6:16","nodeType":"YulIdentifier","src":"8343:6:16"},{"kind":"number","nativeSrc":"8351:4:16","nodeType":"YulLiteral","src":"8351:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8339:3:16","nodeType":"YulIdentifier","src":"8339:3:16"},"nativeSrc":"8339:17:16","nodeType":"YulFunctionCall","src":"8339:17:16"},{"name":"end","nativeSrc":"8358:3:16","nodeType":"YulIdentifier","src":"8358:3:16"}],"functionName":{"name":"slt","nativeSrc":"8335:3:16","nodeType":"YulIdentifier","src":"8335:3:16"},"nativeSrc":"8335:27:16","nodeType":"YulFunctionCall","src":"8335:27:16"}],"functionName":{"name":"iszero","nativeSrc":"8328:6:16","nodeType":"YulIdentifier","src":"8328:6:16"},"nativeSrc":"8328:35:16","nodeType":"YulFunctionCall","src":"8328:35:16"},"nativeSrc":"8325:122:16","nodeType":"YulIf","src":"8325:122:16"},{"nativeSrc":"8456:30:16","nodeType":"YulAssignment","src":"8456:30:16","value":{"arguments":[{"name":"offset","nativeSrc":"8479:6:16","nodeType":"YulIdentifier","src":"8479:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"8466:12:16","nodeType":"YulIdentifier","src":"8466:12:16"},"nativeSrc":"8466:20:16","nodeType":"YulFunctionCall","src":"8466:20:16"},"variableNames":[{"name":"length","nativeSrc":"8456:6:16","nodeType":"YulIdentifier","src":"8456:6:16"}]},{"body":{"nativeSrc":"8529:83:16","nodeType":"YulBlock","src":"8529:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"8531:77:16","nodeType":"YulIdentifier","src":"8531:77:16"},"nativeSrc":"8531:79:16","nodeType":"YulFunctionCall","src":"8531:79:16"},"nativeSrc":"8531:79:16","nodeType":"YulExpressionStatement","src":"8531:79:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8501:6:16","nodeType":"YulIdentifier","src":"8501:6:16"},{"kind":"number","nativeSrc":"8509:18:16","nodeType":"YulLiteral","src":"8509:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8498:2:16","nodeType":"YulIdentifier","src":"8498:2:16"},"nativeSrc":"8498:30:16","nodeType":"YulFunctionCall","src":"8498:30:16"},"nativeSrc":"8495:117:16","nodeType":"YulIf","src":"8495:117:16"},{"nativeSrc":"8621:29:16","nodeType":"YulAssignment","src":"8621:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"8637:6:16","nodeType":"YulIdentifier","src":"8637:6:16"},{"kind":"number","nativeSrc":"8645:4:16","nodeType":"YulLiteral","src":"8645:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8633:3:16","nodeType":"YulIdentifier","src":"8633:3:16"},"nativeSrc":"8633:17:16","nodeType":"YulFunctionCall","src":"8633:17:16"},"variableNames":[{"name":"arrayPos","nativeSrc":"8621:8:16","nodeType":"YulIdentifier","src":"8621:8:16"}]},{"body":{"nativeSrc":"8704:83:16","nodeType":"YulBlock","src":"8704:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8706:77:16","nodeType":"YulIdentifier","src":"8706:77:16"},"nativeSrc":"8706:79:16","nodeType":"YulFunctionCall","src":"8706:79:16"},"nativeSrc":"8706:79:16","nodeType":"YulExpressionStatement","src":"8706:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"8669:8:16","nodeType":"YulIdentifier","src":"8669:8:16"},{"arguments":[{"name":"length","nativeSrc":"8683:6:16","nodeType":"YulIdentifier","src":"8683:6:16"},{"kind":"number","nativeSrc":"8691:4:16","nodeType":"YulLiteral","src":"8691:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"8679:3:16","nodeType":"YulIdentifier","src":"8679:3:16"},"nativeSrc":"8679:17:16","nodeType":"YulFunctionCall","src":"8679:17:16"}],"functionName":{"name":"add","nativeSrc":"8665:3:16","nodeType":"YulIdentifier","src":"8665:3:16"},"nativeSrc":"8665:32:16","nodeType":"YulFunctionCall","src":"8665:32:16"},{"name":"end","nativeSrc":"8699:3:16","nodeType":"YulIdentifier","src":"8699:3:16"}],"functionName":{"name":"gt","nativeSrc":"8662:2:16","nodeType":"YulIdentifier","src":"8662:2:16"},"nativeSrc":"8662:41:16","nodeType":"YulFunctionCall","src":"8662:41:16"},"nativeSrc":"8659:128:16","nodeType":"YulIf","src":"8659:128:16"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"8225:568:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8282:6:16","nodeType":"YulTypedName","src":"8282:6:16","type":""},{"name":"end","nativeSrc":"8290:3:16","nodeType":"YulTypedName","src":"8290:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"8298:8:16","nodeType":"YulTypedName","src":"8298:8:16","type":""},{"name":"length","nativeSrc":"8308:6:16","nodeType":"YulTypedName","src":"8308:6:16","type":""}],"src":"8225:568:16"},{"body":{"nativeSrc":"8906:478:16","nodeType":"YulBlock","src":"8906:478:16","statements":[{"body":{"nativeSrc":"8955:83:16","nodeType":"YulBlock","src":"8955:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8957:77:16","nodeType":"YulIdentifier","src":"8957:77:16"},"nativeSrc":"8957:79:16","nodeType":"YulFunctionCall","src":"8957:79:16"},"nativeSrc":"8957:79:16","nodeType":"YulExpressionStatement","src":"8957:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8934:6:16","nodeType":"YulIdentifier","src":"8934:6:16"},{"kind":"number","nativeSrc":"8942:4:16","nodeType":"YulLiteral","src":"8942:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8930:3:16","nodeType":"YulIdentifier","src":"8930:3:16"},"nativeSrc":"8930:17:16","nodeType":"YulFunctionCall","src":"8930:17:16"},{"name":"end","nativeSrc":"8949:3:16","nodeType":"YulIdentifier","src":"8949:3:16"}],"functionName":{"name":"slt","nativeSrc":"8926:3:16","nodeType":"YulIdentifier","src":"8926:3:16"},"nativeSrc":"8926:27:16","nodeType":"YulFunctionCall","src":"8926:27:16"}],"functionName":{"name":"iszero","nativeSrc":"8919:6:16","nodeType":"YulIdentifier","src":"8919:6:16"},"nativeSrc":"8919:35:16","nodeType":"YulFunctionCall","src":"8919:35:16"},"nativeSrc":"8916:122:16","nodeType":"YulIf","src":"8916:122:16"},{"nativeSrc":"9047:30:16","nodeType":"YulAssignment","src":"9047:30:16","value":{"arguments":[{"name":"offset","nativeSrc":"9070:6:16","nodeType":"YulIdentifier","src":"9070:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"9057:12:16","nodeType":"YulIdentifier","src":"9057:12:16"},"nativeSrc":"9057:20:16","nodeType":"YulFunctionCall","src":"9057:20:16"},"variableNames":[{"name":"length","nativeSrc":"9047:6:16","nodeType":"YulIdentifier","src":"9047:6:16"}]},{"body":{"nativeSrc":"9120:83:16","nodeType":"YulBlock","src":"9120:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"9122:77:16","nodeType":"YulIdentifier","src":"9122:77:16"},"nativeSrc":"9122:79:16","nodeType":"YulFunctionCall","src":"9122:79:16"},"nativeSrc":"9122:79:16","nodeType":"YulExpressionStatement","src":"9122:79:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9092:6:16","nodeType":"YulIdentifier","src":"9092:6:16"},{"kind":"number","nativeSrc":"9100:18:16","nodeType":"YulLiteral","src":"9100:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9089:2:16","nodeType":"YulIdentifier","src":"9089:2:16"},"nativeSrc":"9089:30:16","nodeType":"YulFunctionCall","src":"9089:30:16"},"nativeSrc":"9086:117:16","nodeType":"YulIf","src":"9086:117:16"},{"nativeSrc":"9212:29:16","nodeType":"YulAssignment","src":"9212:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"9228:6:16","nodeType":"YulIdentifier","src":"9228:6:16"},{"kind":"number","nativeSrc":"9236:4:16","nodeType":"YulLiteral","src":"9236:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9224:3:16","nodeType":"YulIdentifier","src":"9224:3:16"},"nativeSrc":"9224:17:16","nodeType":"YulFunctionCall","src":"9224:17:16"},"variableNames":[{"name":"arrayPos","nativeSrc":"9212:8:16","nodeType":"YulIdentifier","src":"9212:8:16"}]},{"body":{"nativeSrc":"9295:83:16","nodeType":"YulBlock","src":"9295:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"9297:77:16","nodeType":"YulIdentifier","src":"9297:77:16"},"nativeSrc":"9297:79:16","nodeType":"YulFunctionCall","src":"9297:79:16"},"nativeSrc":"9297:79:16","nodeType":"YulExpressionStatement","src":"9297:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"9260:8:16","nodeType":"YulIdentifier","src":"9260:8:16"},{"arguments":[{"name":"length","nativeSrc":"9274:6:16","nodeType":"YulIdentifier","src":"9274:6:16"},{"kind":"number","nativeSrc":"9282:4:16","nodeType":"YulLiteral","src":"9282:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"9270:3:16","nodeType":"YulIdentifier","src":"9270:3:16"},"nativeSrc":"9270:17:16","nodeType":"YulFunctionCall","src":"9270:17:16"}],"functionName":{"name":"add","nativeSrc":"9256:3:16","nodeType":"YulIdentifier","src":"9256:3:16"},"nativeSrc":"9256:32:16","nodeType":"YulFunctionCall","src":"9256:32:16"},{"name":"end","nativeSrc":"9290:3:16","nodeType":"YulIdentifier","src":"9290:3:16"}],"functionName":{"name":"gt","nativeSrc":"9253:2:16","nodeType":"YulIdentifier","src":"9253:2:16"},"nativeSrc":"9253:41:16","nodeType":"YulFunctionCall","src":"9253:41:16"},"nativeSrc":"9250:128:16","nodeType":"YulIf","src":"9250:128:16"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"8816:568:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8873:6:16","nodeType":"YulTypedName","src":"8873:6:16","type":""},{"name":"end","nativeSrc":"8881:3:16","nodeType":"YulTypedName","src":"8881:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"8889:8:16","nodeType":"YulTypedName","src":"8889:8:16","type":""},{"name":"length","nativeSrc":"8899:6:16","nodeType":"YulTypedName","src":"8899:6:16","type":""}],"src":"8816:568:16"},{"body":{"nativeSrc":"9543:781:16","nodeType":"YulBlock","src":"9543:781:16","statements":[{"body":{"nativeSrc":"9589:83:16","nodeType":"YulBlock","src":"9589:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9591:77:16","nodeType":"YulIdentifier","src":"9591:77:16"},"nativeSrc":"9591:79:16","nodeType":"YulFunctionCall","src":"9591:79:16"},"nativeSrc":"9591:79:16","nodeType":"YulExpressionStatement","src":"9591:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9564:7:16","nodeType":"YulIdentifier","src":"9564:7:16"},{"name":"headStart","nativeSrc":"9573:9:16","nodeType":"YulIdentifier","src":"9573:9:16"}],"functionName":{"name":"sub","nativeSrc":"9560:3:16","nodeType":"YulIdentifier","src":"9560:3:16"},"nativeSrc":"9560:23:16","nodeType":"YulFunctionCall","src":"9560:23:16"},{"kind":"number","nativeSrc":"9585:2:16","nodeType":"YulLiteral","src":"9585:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9556:3:16","nodeType":"YulIdentifier","src":"9556:3:16"},"nativeSrc":"9556:32:16","nodeType":"YulFunctionCall","src":"9556:32:16"},"nativeSrc":"9553:119:16","nodeType":"YulIf","src":"9553:119:16"},{"nativeSrc":"9682:312:16","nodeType":"YulBlock","src":"9682:312:16","statements":[{"nativeSrc":"9697:45:16","nodeType":"YulVariableDeclaration","src":"9697:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9728:9:16","nodeType":"YulIdentifier","src":"9728:9:16"},{"kind":"number","nativeSrc":"9739:1:16","nodeType":"YulLiteral","src":"9739:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9724:3:16","nodeType":"YulIdentifier","src":"9724:3:16"},"nativeSrc":"9724:17:16","nodeType":"YulFunctionCall","src":"9724:17:16"}],"functionName":{"name":"calldataload","nativeSrc":"9711:12:16","nodeType":"YulIdentifier","src":"9711:12:16"},"nativeSrc":"9711:31:16","nodeType":"YulFunctionCall","src":"9711:31:16"},"variables":[{"name":"offset","nativeSrc":"9701:6:16","nodeType":"YulTypedName","src":"9701:6:16","type":""}]},{"body":{"nativeSrc":"9789:83:16","nodeType":"YulBlock","src":"9789:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9791:77:16","nodeType":"YulIdentifier","src":"9791:77:16"},"nativeSrc":"9791:79:16","nodeType":"YulFunctionCall","src":"9791:79:16"},"nativeSrc":"9791:79:16","nodeType":"YulExpressionStatement","src":"9791:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9761:6:16","nodeType":"YulIdentifier","src":"9761:6:16"},{"kind":"number","nativeSrc":"9769:18:16","nodeType":"YulLiteral","src":"9769:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9758:2:16","nodeType":"YulIdentifier","src":"9758:2:16"},"nativeSrc":"9758:30:16","nodeType":"YulFunctionCall","src":"9758:30:16"},"nativeSrc":"9755:117:16","nodeType":"YulIf","src":"9755:117:16"},{"nativeSrc":"9886:98:16","nodeType":"YulAssignment","src":"9886:98:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9956:9:16","nodeType":"YulIdentifier","src":"9956:9:16"},{"name":"offset","nativeSrc":"9967:6:16","nodeType":"YulIdentifier","src":"9967:6:16"}],"functionName":{"name":"add","nativeSrc":"9952:3:16","nodeType":"YulIdentifier","src":"9952:3:16"},"nativeSrc":"9952:22:16","nodeType":"YulFunctionCall","src":"9952:22:16"},{"name":"dataEnd","nativeSrc":"9976:7:16","nodeType":"YulIdentifier","src":"9976:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"9904:47:16","nodeType":"YulIdentifier","src":"9904:47:16"},"nativeSrc":"9904:80:16","nodeType":"YulFunctionCall","src":"9904:80:16"},"variableNames":[{"name":"value0","nativeSrc":"9886:6:16","nodeType":"YulIdentifier","src":"9886:6:16"},{"name":"value1","nativeSrc":"9894:6:16","nodeType":"YulIdentifier","src":"9894:6:16"}]}]},{"nativeSrc":"10004:313:16","nodeType":"YulBlock","src":"10004:313:16","statements":[{"nativeSrc":"10019:46:16","nodeType":"YulVariableDeclaration","src":"10019:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10050:9:16","nodeType":"YulIdentifier","src":"10050:9:16"},{"kind":"number","nativeSrc":"10061:2:16","nodeType":"YulLiteral","src":"10061:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10046:3:16","nodeType":"YulIdentifier","src":"10046:3:16"},"nativeSrc":"10046:18:16","nodeType":"YulFunctionCall","src":"10046:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"10033:12:16","nodeType":"YulIdentifier","src":"10033:12:16"},"nativeSrc":"10033:32:16","nodeType":"YulFunctionCall","src":"10033:32:16"},"variables":[{"name":"offset","nativeSrc":"10023:6:16","nodeType":"YulTypedName","src":"10023:6:16","type":""}]},{"body":{"nativeSrc":"10112:83:16","nodeType":"YulBlock","src":"10112:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10114:77:16","nodeType":"YulIdentifier","src":"10114:77:16"},"nativeSrc":"10114:79:16","nodeType":"YulFunctionCall","src":"10114:79:16"},"nativeSrc":"10114:79:16","nodeType":"YulExpressionStatement","src":"10114:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10084:6:16","nodeType":"YulIdentifier","src":"10084:6:16"},{"kind":"number","nativeSrc":"10092:18:16","nodeType":"YulLiteral","src":"10092:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10081:2:16","nodeType":"YulIdentifier","src":"10081:2:16"},"nativeSrc":"10081:30:16","nodeType":"YulFunctionCall","src":"10081:30:16"},"nativeSrc":"10078:117:16","nodeType":"YulIf","src":"10078:117:16"},{"nativeSrc":"10209:98:16","nodeType":"YulAssignment","src":"10209:98:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10279:9:16","nodeType":"YulIdentifier","src":"10279:9:16"},{"name":"offset","nativeSrc":"10290:6:16","nodeType":"YulIdentifier","src":"10290:6:16"}],"functionName":{"name":"add","nativeSrc":"10275:3:16","nodeType":"YulIdentifier","src":"10275:3:16"},"nativeSrc":"10275:22:16","nodeType":"YulFunctionCall","src":"10275:22:16"},{"name":"dataEnd","nativeSrc":"10299:7:16","nodeType":"YulIdentifier","src":"10299:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"10227:47:16","nodeType":"YulIdentifier","src":"10227:47:16"},"nativeSrc":"10227:80:16","nodeType":"YulFunctionCall","src":"10227:80:16"},"variableNames":[{"name":"value2","nativeSrc":"10209:6:16","nodeType":"YulIdentifier","src":"10209:6:16"},{"name":"value3","nativeSrc":"10217:6:16","nodeType":"YulIdentifier","src":"10217:6:16"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"9390:934:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9489:9:16","nodeType":"YulTypedName","src":"9489:9:16","type":""},{"name":"dataEnd","nativeSrc":"9500:7:16","nodeType":"YulTypedName","src":"9500:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9512:6:16","nodeType":"YulTypedName","src":"9512:6:16","type":""},{"name":"value1","nativeSrc":"9520:6:16","nodeType":"YulTypedName","src":"9520:6:16","type":""},{"name":"value2","nativeSrc":"9528:6:16","nodeType":"YulTypedName","src":"9528:6:16","type":""},{"name":"value3","nativeSrc":"9536:6:16","nodeType":"YulTypedName","src":"9536:6:16","type":""}],"src":"9390:934:16"},{"body":{"nativeSrc":"10395:53:16","nodeType":"YulBlock","src":"10395:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10412:3:16","nodeType":"YulIdentifier","src":"10412:3:16"},{"arguments":[{"name":"value","nativeSrc":"10435:5:16","nodeType":"YulIdentifier","src":"10435:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10417:17:16","nodeType":"YulIdentifier","src":"10417:17:16"},"nativeSrc":"10417:24:16","nodeType":"YulFunctionCall","src":"10417:24:16"}],"functionName":{"name":"mstore","nativeSrc":"10405:6:16","nodeType":"YulIdentifier","src":"10405:6:16"},"nativeSrc":"10405:37:16","nodeType":"YulFunctionCall","src":"10405:37:16"},"nativeSrc":"10405:37:16","nodeType":"YulExpressionStatement","src":"10405:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10330:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10383:5:16","nodeType":"YulTypedName","src":"10383:5:16","type":""},{"name":"pos","nativeSrc":"10390:3:16","nodeType":"YulTypedName","src":"10390:3:16","type":""}],"src":"10330:118:16"},{"body":{"nativeSrc":"10552:124:16","nodeType":"YulBlock","src":"10552:124:16","statements":[{"nativeSrc":"10562:26:16","nodeType":"YulAssignment","src":"10562:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"10574:9:16","nodeType":"YulIdentifier","src":"10574:9:16"},{"kind":"number","nativeSrc":"10585:2:16","nodeType":"YulLiteral","src":"10585:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10570:3:16","nodeType":"YulIdentifier","src":"10570:3:16"},"nativeSrc":"10570:18:16","nodeType":"YulFunctionCall","src":"10570:18:16"},"variableNames":[{"name":"tail","nativeSrc":"10562:4:16","nodeType":"YulIdentifier","src":"10562:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10642:6:16","nodeType":"YulIdentifier","src":"10642:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"10655:9:16","nodeType":"YulIdentifier","src":"10655:9:16"},{"kind":"number","nativeSrc":"10666:1:16","nodeType":"YulLiteral","src":"10666:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10651:3:16","nodeType":"YulIdentifier","src":"10651:3:16"},"nativeSrc":"10651:17:16","nodeType":"YulFunctionCall","src":"10651:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10598:43:16","nodeType":"YulIdentifier","src":"10598:43:16"},"nativeSrc":"10598:71:16","nodeType":"YulFunctionCall","src":"10598:71:16"},"nativeSrc":"10598:71:16","nodeType":"YulExpressionStatement","src":"10598:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10454:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10524:9:16","nodeType":"YulTypedName","src":"10524:9:16","type":""},{"name":"value0","nativeSrc":"10536:6:16","nodeType":"YulTypedName","src":"10536:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10547:4:16","nodeType":"YulTypedName","src":"10547:4:16","type":""}],"src":"10454:222:16"},{"body":{"nativeSrc":"10769:478:16","nodeType":"YulBlock","src":"10769:478:16","statements":[{"body":{"nativeSrc":"10818:83:16","nodeType":"YulBlock","src":"10818:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10820:77:16","nodeType":"YulIdentifier","src":"10820:77:16"},"nativeSrc":"10820:79:16","nodeType":"YulFunctionCall","src":"10820:79:16"},"nativeSrc":"10820:79:16","nodeType":"YulExpressionStatement","src":"10820:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10797:6:16","nodeType":"YulIdentifier","src":"10797:6:16"},{"kind":"number","nativeSrc":"10805:4:16","nodeType":"YulLiteral","src":"10805:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10793:3:16","nodeType":"YulIdentifier","src":"10793:3:16"},"nativeSrc":"10793:17:16","nodeType":"YulFunctionCall","src":"10793:17:16"},{"name":"end","nativeSrc":"10812:3:16","nodeType":"YulIdentifier","src":"10812:3:16"}],"functionName":{"name":"slt","nativeSrc":"10789:3:16","nodeType":"YulIdentifier","src":"10789:3:16"},"nativeSrc":"10789:27:16","nodeType":"YulFunctionCall","src":"10789:27:16"}],"functionName":{"name":"iszero","nativeSrc":"10782:6:16","nodeType":"YulIdentifier","src":"10782:6:16"},"nativeSrc":"10782:35:16","nodeType":"YulFunctionCall","src":"10782:35:16"},"nativeSrc":"10779:122:16","nodeType":"YulIf","src":"10779:122:16"},{"nativeSrc":"10910:30:16","nodeType":"YulAssignment","src":"10910:30:16","value":{"arguments":[{"name":"offset","nativeSrc":"10933:6:16","nodeType":"YulIdentifier","src":"10933:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"10920:12:16","nodeType":"YulIdentifier","src":"10920:12:16"},"nativeSrc":"10920:20:16","nodeType":"YulFunctionCall","src":"10920:20:16"},"variableNames":[{"name":"length","nativeSrc":"10910:6:16","nodeType":"YulIdentifier","src":"10910:6:16"}]},{"body":{"nativeSrc":"10983:83:16","nodeType":"YulBlock","src":"10983:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"10985:77:16","nodeType":"YulIdentifier","src":"10985:77:16"},"nativeSrc":"10985:79:16","nodeType":"YulFunctionCall","src":"10985:79:16"},"nativeSrc":"10985:79:16","nodeType":"YulExpressionStatement","src":"10985:79:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10955:6:16","nodeType":"YulIdentifier","src":"10955:6:16"},{"kind":"number","nativeSrc":"10963:18:16","nodeType":"YulLiteral","src":"10963:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10952:2:16","nodeType":"YulIdentifier","src":"10952:2:16"},"nativeSrc":"10952:30:16","nodeType":"YulFunctionCall","src":"10952:30:16"},"nativeSrc":"10949:117:16","nodeType":"YulIf","src":"10949:117:16"},{"nativeSrc":"11075:29:16","nodeType":"YulAssignment","src":"11075:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"11091:6:16","nodeType":"YulIdentifier","src":"11091:6:16"},{"kind":"number","nativeSrc":"11099:4:16","nodeType":"YulLiteral","src":"11099:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11087:3:16","nodeType":"YulIdentifier","src":"11087:3:16"},"nativeSrc":"11087:17:16","nodeType":"YulFunctionCall","src":"11087:17:16"},"variableNames":[{"name":"arrayPos","nativeSrc":"11075:8:16","nodeType":"YulIdentifier","src":"11075:8:16"}]},{"body":{"nativeSrc":"11158:83:16","nodeType":"YulBlock","src":"11158:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"11160:77:16","nodeType":"YulIdentifier","src":"11160:77:16"},"nativeSrc":"11160:79:16","nodeType":"YulFunctionCall","src":"11160:79:16"},"nativeSrc":"11160:79:16","nodeType":"YulExpressionStatement","src":"11160:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"11123:8:16","nodeType":"YulIdentifier","src":"11123:8:16"},{"arguments":[{"name":"length","nativeSrc":"11137:6:16","nodeType":"YulIdentifier","src":"11137:6:16"},{"kind":"number","nativeSrc":"11145:4:16","nodeType":"YulLiteral","src":"11145:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"11133:3:16","nodeType":"YulIdentifier","src":"11133:3:16"},"nativeSrc":"11133:17:16","nodeType":"YulFunctionCall","src":"11133:17:16"}],"functionName":{"name":"add","nativeSrc":"11119:3:16","nodeType":"YulIdentifier","src":"11119:3:16"},"nativeSrc":"11119:32:16","nodeType":"YulFunctionCall","src":"11119:32:16"},{"name":"end","nativeSrc":"11153:3:16","nodeType":"YulIdentifier","src":"11153:3:16"}],"functionName":{"name":"gt","nativeSrc":"11116:2:16","nodeType":"YulIdentifier","src":"11116:2:16"},"nativeSrc":"11116:41:16","nodeType":"YulFunctionCall","src":"11116:41:16"},"nativeSrc":"11113:128:16","nodeType":"YulIf","src":"11113:128:16"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"10695:552:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10736:6:16","nodeType":"YulTypedName","src":"10736:6:16","type":""},{"name":"end","nativeSrc":"10744:3:16","nodeType":"YulTypedName","src":"10744:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"10752:8:16","nodeType":"YulTypedName","src":"10752:8:16","type":""},{"name":"length","nativeSrc":"10762:6:16","nodeType":"YulTypedName","src":"10762:6:16","type":""}],"src":"10695:552:16"},{"body":{"nativeSrc":"11372:698:16","nodeType":"YulBlock","src":"11372:698:16","statements":[{"body":{"nativeSrc":"11418:83:16","nodeType":"YulBlock","src":"11418:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11420:77:16","nodeType":"YulIdentifier","src":"11420:77:16"},"nativeSrc":"11420:79:16","nodeType":"YulFunctionCall","src":"11420:79:16"},"nativeSrc":"11420:79:16","nodeType":"YulExpressionStatement","src":"11420:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11393:7:16","nodeType":"YulIdentifier","src":"11393:7:16"},{"name":"headStart","nativeSrc":"11402:9:16","nodeType":"YulIdentifier","src":"11402:9:16"}],"functionName":{"name":"sub","nativeSrc":"11389:3:16","nodeType":"YulIdentifier","src":"11389:3:16"},"nativeSrc":"11389:23:16","nodeType":"YulFunctionCall","src":"11389:23:16"},{"kind":"number","nativeSrc":"11414:2:16","nodeType":"YulLiteral","src":"11414:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"11385:3:16","nodeType":"YulIdentifier","src":"11385:3:16"},"nativeSrc":"11385:32:16","nodeType":"YulFunctionCall","src":"11385:32:16"},"nativeSrc":"11382:119:16","nodeType":"YulIf","src":"11382:119:16"},{"nativeSrc":"11511:117:16","nodeType":"YulBlock","src":"11511:117:16","statements":[{"nativeSrc":"11526:15:16","nodeType":"YulVariableDeclaration","src":"11526:15:16","value":{"kind":"number","nativeSrc":"11540:1:16","nodeType":"YulLiteral","src":"11540:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11530:6:16","nodeType":"YulTypedName","src":"11530:6:16","type":""}]},{"nativeSrc":"11555:63:16","nodeType":"YulAssignment","src":"11555:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11590:9:16","nodeType":"YulIdentifier","src":"11590:9:16"},{"name":"offset","nativeSrc":"11601:6:16","nodeType":"YulIdentifier","src":"11601:6:16"}],"functionName":{"name":"add","nativeSrc":"11586:3:16","nodeType":"YulIdentifier","src":"11586:3:16"},"nativeSrc":"11586:22:16","nodeType":"YulFunctionCall","src":"11586:22:16"},{"name":"dataEnd","nativeSrc":"11610:7:16","nodeType":"YulIdentifier","src":"11610:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11565:20:16","nodeType":"YulIdentifier","src":"11565:20:16"},"nativeSrc":"11565:53:16","nodeType":"YulFunctionCall","src":"11565:53:16"},"variableNames":[{"name":"value0","nativeSrc":"11555:6:16","nodeType":"YulIdentifier","src":"11555:6:16"}]}]},{"nativeSrc":"11638:118:16","nodeType":"YulBlock","src":"11638:118:16","statements":[{"nativeSrc":"11653:16:16","nodeType":"YulVariableDeclaration","src":"11653:16:16","value":{"kind":"number","nativeSrc":"11667:2:16","nodeType":"YulLiteral","src":"11667:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11657:6:16","nodeType":"YulTypedName","src":"11657:6:16","type":""}]},{"nativeSrc":"11683:63:16","nodeType":"YulAssignment","src":"11683:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11718:9:16","nodeType":"YulIdentifier","src":"11718:9:16"},{"name":"offset","nativeSrc":"11729:6:16","nodeType":"YulIdentifier","src":"11729:6:16"}],"functionName":{"name":"add","nativeSrc":"11714:3:16","nodeType":"YulIdentifier","src":"11714:3:16"},"nativeSrc":"11714:22:16","nodeType":"YulFunctionCall","src":"11714:22:16"},{"name":"dataEnd","nativeSrc":"11738:7:16","nodeType":"YulIdentifier","src":"11738:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11693:20:16","nodeType":"YulIdentifier","src":"11693:20:16"},"nativeSrc":"11693:53:16","nodeType":"YulFunctionCall","src":"11693:53:16"},"variableNames":[{"name":"value1","nativeSrc":"11683:6:16","nodeType":"YulIdentifier","src":"11683:6:16"}]}]},{"nativeSrc":"11766:297:16","nodeType":"YulBlock","src":"11766:297:16","statements":[{"nativeSrc":"11781:46:16","nodeType":"YulVariableDeclaration","src":"11781:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11812:9:16","nodeType":"YulIdentifier","src":"11812:9:16"},{"kind":"number","nativeSrc":"11823:2:16","nodeType":"YulLiteral","src":"11823:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11808:3:16","nodeType":"YulIdentifier","src":"11808:3:16"},"nativeSrc":"11808:18:16","nodeType":"YulFunctionCall","src":"11808:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"11795:12:16","nodeType":"YulIdentifier","src":"11795:12:16"},"nativeSrc":"11795:32:16","nodeType":"YulFunctionCall","src":"11795:32:16"},"variables":[{"name":"offset","nativeSrc":"11785:6:16","nodeType":"YulTypedName","src":"11785:6:16","type":""}]},{"body":{"nativeSrc":"11874:83:16","nodeType":"YulBlock","src":"11874:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11876:77:16","nodeType":"YulIdentifier","src":"11876:77:16"},"nativeSrc":"11876:79:16","nodeType":"YulFunctionCall","src":"11876:79:16"},"nativeSrc":"11876:79:16","nodeType":"YulExpressionStatement","src":"11876:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11846:6:16","nodeType":"YulIdentifier","src":"11846:6:16"},{"kind":"number","nativeSrc":"11854:18:16","nodeType":"YulLiteral","src":"11854:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11843:2:16","nodeType":"YulIdentifier","src":"11843:2:16"},"nativeSrc":"11843:30:16","nodeType":"YulFunctionCall","src":"11843:30:16"},"nativeSrc":"11840:117:16","nodeType":"YulIf","src":"11840:117:16"},{"nativeSrc":"11971:82:16","nodeType":"YulAssignment","src":"11971:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12025:9:16","nodeType":"YulIdentifier","src":"12025:9:16"},{"name":"offset","nativeSrc":"12036:6:16","nodeType":"YulIdentifier","src":"12036:6:16"}],"functionName":{"name":"add","nativeSrc":"12021:3:16","nodeType":"YulIdentifier","src":"12021:3:16"},"nativeSrc":"12021:22:16","nodeType":"YulFunctionCall","src":"12021:22:16"},{"name":"dataEnd","nativeSrc":"12045:7:16","nodeType":"YulIdentifier","src":"12045:7:16"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"11989:31:16","nodeType":"YulIdentifier","src":"11989:31:16"},"nativeSrc":"11989:64:16","nodeType":"YulFunctionCall","src":"11989:64:16"},"variableNames":[{"name":"value2","nativeSrc":"11971:6:16","nodeType":"YulIdentifier","src":"11971:6:16"},{"name":"value3","nativeSrc":"11979:6:16","nodeType":"YulIdentifier","src":"11979:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"11253:817:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11318:9:16","nodeType":"YulTypedName","src":"11318:9:16","type":""},{"name":"dataEnd","nativeSrc":"11329:7:16","nodeType":"YulTypedName","src":"11329:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11341:6:16","nodeType":"YulTypedName","src":"11341:6:16","type":""},{"name":"value1","nativeSrc":"11349:6:16","nodeType":"YulTypedName","src":"11349:6:16","type":""},{"name":"value2","nativeSrc":"11357:6:16","nodeType":"YulTypedName","src":"11357:6:16","type":""},{"name":"value3","nativeSrc":"11365:6:16","nodeType":"YulTypedName","src":"11365:6:16","type":""}],"src":"11253:817:16"},{"body":{"nativeSrc":"12134:40:16","nodeType":"YulBlock","src":"12134:40:16","statements":[{"nativeSrc":"12145:22:16","nodeType":"YulAssignment","src":"12145:22:16","value":{"arguments":[{"name":"value","nativeSrc":"12161:5:16","nodeType":"YulIdentifier","src":"12161:5:16"}],"functionName":{"name":"mload","nativeSrc":"12155:5:16","nodeType":"YulIdentifier","src":"12155:5:16"},"nativeSrc":"12155:12:16","nodeType":"YulFunctionCall","src":"12155:12:16"},"variableNames":[{"name":"length","nativeSrc":"12145:6:16","nodeType":"YulIdentifier","src":"12145:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12076:98:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12117:5:16","nodeType":"YulTypedName","src":"12117:5:16","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12127:6:16","nodeType":"YulTypedName","src":"12127:6:16","type":""}],"src":"12076:98:16"},{"body":{"nativeSrc":"12275:73:16","nodeType":"YulBlock","src":"12275:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12292:3:16","nodeType":"YulIdentifier","src":"12292:3:16"},{"name":"length","nativeSrc":"12297:6:16","nodeType":"YulIdentifier","src":"12297:6:16"}],"functionName":{"name":"mstore","nativeSrc":"12285:6:16","nodeType":"YulIdentifier","src":"12285:6:16"},"nativeSrc":"12285:19:16","nodeType":"YulFunctionCall","src":"12285:19:16"},"nativeSrc":"12285:19:16","nodeType":"YulExpressionStatement","src":"12285:19:16"},{"nativeSrc":"12313:29:16","nodeType":"YulAssignment","src":"12313:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"12332:3:16","nodeType":"YulIdentifier","src":"12332:3:16"},{"kind":"number","nativeSrc":"12337:4:16","nodeType":"YulLiteral","src":"12337:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12328:3:16","nodeType":"YulIdentifier","src":"12328:3:16"},"nativeSrc":"12328:14:16","nodeType":"YulFunctionCall","src":"12328:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"12313:11:16","nodeType":"YulIdentifier","src":"12313:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"12180:168:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12247:3:16","nodeType":"YulTypedName","src":"12247:3:16","type":""},{"name":"length","nativeSrc":"12252:6:16","nodeType":"YulTypedName","src":"12252:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12263:11:16","nodeType":"YulTypedName","src":"12263:11:16","type":""}],"src":"12180:168:16"},{"body":{"nativeSrc":"12416:184:16","nodeType":"YulBlock","src":"12416:184:16","statements":[{"nativeSrc":"12426:10:16","nodeType":"YulVariableDeclaration","src":"12426:10:16","value":{"kind":"number","nativeSrc":"12435:1:16","nodeType":"YulLiteral","src":"12435:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"12430:1:16","nodeType":"YulTypedName","src":"12430:1:16","type":""}]},{"body":{"nativeSrc":"12495:63:16","nodeType":"YulBlock","src":"12495:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"12520:3:16","nodeType":"YulIdentifier","src":"12520:3:16"},{"name":"i","nativeSrc":"12525:1:16","nodeType":"YulIdentifier","src":"12525:1:16"}],"functionName":{"name":"add","nativeSrc":"12516:3:16","nodeType":"YulIdentifier","src":"12516:3:16"},"nativeSrc":"12516:11:16","nodeType":"YulFunctionCall","src":"12516:11:16"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"12539:3:16","nodeType":"YulIdentifier","src":"12539:3:16"},{"name":"i","nativeSrc":"12544:1:16","nodeType":"YulIdentifier","src":"12544:1:16"}],"functionName":{"name":"add","nativeSrc":"12535:3:16","nodeType":"YulIdentifier","src":"12535:3:16"},"nativeSrc":"12535:11:16","nodeType":"YulFunctionCall","src":"12535:11:16"}],"functionName":{"name":"mload","nativeSrc":"12529:5:16","nodeType":"YulIdentifier","src":"12529:5:16"},"nativeSrc":"12529:18:16","nodeType":"YulFunctionCall","src":"12529:18:16"}],"functionName":{"name":"mstore","nativeSrc":"12509:6:16","nodeType":"YulIdentifier","src":"12509:6:16"},"nativeSrc":"12509:39:16","nodeType":"YulFunctionCall","src":"12509:39:16"},"nativeSrc":"12509:39:16","nodeType":"YulExpressionStatement","src":"12509:39:16"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"12456:1:16","nodeType":"YulIdentifier","src":"12456:1:16"},{"name":"length","nativeSrc":"12459:6:16","nodeType":"YulIdentifier","src":"12459:6:16"}],"functionName":{"name":"lt","nativeSrc":"12453:2:16","nodeType":"YulIdentifier","src":"12453:2:16"},"nativeSrc":"12453:13:16","nodeType":"YulFunctionCall","src":"12453:13:16"},"nativeSrc":"12445:113:16","nodeType":"YulForLoop","post":{"nativeSrc":"12467:19:16","nodeType":"YulBlock","src":"12467:19:16","statements":[{"nativeSrc":"12469:15:16","nodeType":"YulAssignment","src":"12469:15:16","value":{"arguments":[{"name":"i","nativeSrc":"12478:1:16","nodeType":"YulIdentifier","src":"12478:1:16"},{"kind":"number","nativeSrc":"12481:2:16","nodeType":"YulLiteral","src":"12481:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12474:3:16","nodeType":"YulIdentifier","src":"12474:3:16"},"nativeSrc":"12474:10:16","nodeType":"YulFunctionCall","src":"12474:10:16"},"variableNames":[{"name":"i","nativeSrc":"12469:1:16","nodeType":"YulIdentifier","src":"12469:1:16"}]}]},"pre":{"nativeSrc":"12449:3:16","nodeType":"YulBlock","src":"12449:3:16","statements":[]},"src":"12445:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"12578:3:16","nodeType":"YulIdentifier","src":"12578:3:16"},{"name":"length","nativeSrc":"12583:6:16","nodeType":"YulIdentifier","src":"12583:6:16"}],"functionName":{"name":"add","nativeSrc":"12574:3:16","nodeType":"YulIdentifier","src":"12574:3:16"},"nativeSrc":"12574:16:16","nodeType":"YulFunctionCall","src":"12574:16:16"},{"kind":"number","nativeSrc":"12592:1:16","nodeType":"YulLiteral","src":"12592:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"12567:6:16","nodeType":"YulIdentifier","src":"12567:6:16"},"nativeSrc":"12567:27:16","nodeType":"YulFunctionCall","src":"12567:27:16"},"nativeSrc":"12567:27:16","nodeType":"YulExpressionStatement","src":"12567:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"12354:246:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"12398:3:16","nodeType":"YulTypedName","src":"12398:3:16","type":""},{"name":"dst","nativeSrc":"12403:3:16","nodeType":"YulTypedName","src":"12403:3:16","type":""},{"name":"length","nativeSrc":"12408:6:16","nodeType":"YulTypedName","src":"12408:6:16","type":""}],"src":"12354:246:16"},{"body":{"nativeSrc":"12696:283:16","nodeType":"YulBlock","src":"12696:283:16","statements":[{"nativeSrc":"12706:52:16","nodeType":"YulVariableDeclaration","src":"12706:52:16","value":{"arguments":[{"name":"value","nativeSrc":"12752:5:16","nodeType":"YulIdentifier","src":"12752:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12720:31:16","nodeType":"YulIdentifier","src":"12720:31:16"},"nativeSrc":"12720:38:16","nodeType":"YulFunctionCall","src":"12720:38:16"},"variables":[{"name":"length","nativeSrc":"12710:6:16","nodeType":"YulTypedName","src":"12710:6:16","type":""}]},{"nativeSrc":"12767:77:16","nodeType":"YulAssignment","src":"12767:77:16","value":{"arguments":[{"name":"pos","nativeSrc":"12832:3:16","nodeType":"YulIdentifier","src":"12832:3:16"},{"name":"length","nativeSrc":"12837:6:16","nodeType":"YulIdentifier","src":"12837:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"12774:57:16","nodeType":"YulIdentifier","src":"12774:57:16"},"nativeSrc":"12774:70:16","nodeType":"YulFunctionCall","src":"12774:70:16"},"variableNames":[{"name":"pos","nativeSrc":"12767:3:16","nodeType":"YulIdentifier","src":"12767:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12892:5:16","nodeType":"YulIdentifier","src":"12892:5:16"},{"kind":"number","nativeSrc":"12899:4:16","nodeType":"YulLiteral","src":"12899:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12888:3:16","nodeType":"YulIdentifier","src":"12888:3:16"},"nativeSrc":"12888:16:16","nodeType":"YulFunctionCall","src":"12888:16:16"},{"name":"pos","nativeSrc":"12906:3:16","nodeType":"YulIdentifier","src":"12906:3:16"},{"name":"length","nativeSrc":"12911:6:16","nodeType":"YulIdentifier","src":"12911:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"12853:34:16","nodeType":"YulIdentifier","src":"12853:34:16"},"nativeSrc":"12853:65:16","nodeType":"YulFunctionCall","src":"12853:65:16"},"nativeSrc":"12853:65:16","nodeType":"YulExpressionStatement","src":"12853:65:16"},{"nativeSrc":"12927:46:16","nodeType":"YulAssignment","src":"12927:46:16","value":{"arguments":[{"name":"pos","nativeSrc":"12938:3:16","nodeType":"YulIdentifier","src":"12938:3:16"},{"arguments":[{"name":"length","nativeSrc":"12965:6:16","nodeType":"YulIdentifier","src":"12965:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"12943:21:16","nodeType":"YulIdentifier","src":"12943:21:16"},"nativeSrc":"12943:29:16","nodeType":"YulFunctionCall","src":"12943:29:16"}],"functionName":{"name":"add","nativeSrc":"12934:3:16","nodeType":"YulIdentifier","src":"12934:3:16"},"nativeSrc":"12934:39:16","nodeType":"YulFunctionCall","src":"12934:39:16"},"variableNames":[{"name":"end","nativeSrc":"12927:3:16","nodeType":"YulIdentifier","src":"12927:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"12606:373:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12677:5:16","nodeType":"YulTypedName","src":"12677:5:16","type":""},{"name":"pos","nativeSrc":"12684:3:16","nodeType":"YulTypedName","src":"12684:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12692:3:16","nodeType":"YulTypedName","src":"12692:3:16","type":""}],"src":"12606:373:16"},{"body":{"nativeSrc":"13101:193:16","nodeType":"YulBlock","src":"13101:193:16","statements":[{"nativeSrc":"13111:26:16","nodeType":"YulAssignment","src":"13111:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13123:9:16","nodeType":"YulIdentifier","src":"13123:9:16"},{"kind":"number","nativeSrc":"13134:2:16","nodeType":"YulLiteral","src":"13134:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13119:3:16","nodeType":"YulIdentifier","src":"13119:3:16"},"nativeSrc":"13119:18:16","nodeType":"YulFunctionCall","src":"13119:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13111:4:16","nodeType":"YulIdentifier","src":"13111:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13158:9:16","nodeType":"YulIdentifier","src":"13158:9:16"},{"kind":"number","nativeSrc":"13169:1:16","nodeType":"YulLiteral","src":"13169:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13154:3:16","nodeType":"YulIdentifier","src":"13154:3:16"},"nativeSrc":"13154:17:16","nodeType":"YulFunctionCall","src":"13154:17:16"},{"arguments":[{"name":"tail","nativeSrc":"13177:4:16","nodeType":"YulIdentifier","src":"13177:4:16"},{"name":"headStart","nativeSrc":"13183:9:16","nodeType":"YulIdentifier","src":"13183:9:16"}],"functionName":{"name":"sub","nativeSrc":"13173:3:16","nodeType":"YulIdentifier","src":"13173:3:16"},"nativeSrc":"13173:20:16","nodeType":"YulFunctionCall","src":"13173:20:16"}],"functionName":{"name":"mstore","nativeSrc":"13147:6:16","nodeType":"YulIdentifier","src":"13147:6:16"},"nativeSrc":"13147:47:16","nodeType":"YulFunctionCall","src":"13147:47:16"},"nativeSrc":"13147:47:16","nodeType":"YulExpressionStatement","src":"13147:47:16"},{"nativeSrc":"13203:84:16","nodeType":"YulAssignment","src":"13203:84:16","value":{"arguments":[{"name":"value0","nativeSrc":"13273:6:16","nodeType":"YulIdentifier","src":"13273:6:16"},{"name":"tail","nativeSrc":"13282:4:16","nodeType":"YulIdentifier","src":"13282:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"13211:61:16","nodeType":"YulIdentifier","src":"13211:61:16"},"nativeSrc":"13211:76:16","nodeType":"YulFunctionCall","src":"13211:76:16"},"variableNames":[{"name":"tail","nativeSrc":"13203:4:16","nodeType":"YulIdentifier","src":"13203:4:16"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"12985:309:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13073:9:16","nodeType":"YulTypedName","src":"13073:9:16","type":""},{"name":"value0","nativeSrc":"13085:6:16","nodeType":"YulTypedName","src":"13085:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13096:4:16","nodeType":"YulTypedName","src":"13096:4:16","type":""}],"src":"12985:309:16"},{"body":{"nativeSrc":"13365:53:16","nodeType":"YulBlock","src":"13365:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13382:3:16","nodeType":"YulIdentifier","src":"13382:3:16"},{"arguments":[{"name":"value","nativeSrc":"13405:5:16","nodeType":"YulIdentifier","src":"13405:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13387:17:16","nodeType":"YulIdentifier","src":"13387:17:16"},"nativeSrc":"13387:24:16","nodeType":"YulFunctionCall","src":"13387:24:16"}],"functionName":{"name":"mstore","nativeSrc":"13375:6:16","nodeType":"YulIdentifier","src":"13375:6:16"},"nativeSrc":"13375:37:16","nodeType":"YulFunctionCall","src":"13375:37:16"},"nativeSrc":"13375:37:16","nodeType":"YulExpressionStatement","src":"13375:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13300:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13353:5:16","nodeType":"YulTypedName","src":"13353:5:16","type":""},{"name":"pos","nativeSrc":"13360:3:16","nodeType":"YulTypedName","src":"13360:3:16","type":""}],"src":"13300:118:16"},{"body":{"nativeSrc":"13522:124:16","nodeType":"YulBlock","src":"13522:124:16","statements":[{"nativeSrc":"13532:26:16","nodeType":"YulAssignment","src":"13532:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13544:9:16","nodeType":"YulIdentifier","src":"13544:9:16"},{"kind":"number","nativeSrc":"13555:2:16","nodeType":"YulLiteral","src":"13555:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13540:3:16","nodeType":"YulIdentifier","src":"13540:3:16"},"nativeSrc":"13540:18:16","nodeType":"YulFunctionCall","src":"13540:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13532:4:16","nodeType":"YulIdentifier","src":"13532:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13612:6:16","nodeType":"YulIdentifier","src":"13612:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"13625:9:16","nodeType":"YulIdentifier","src":"13625:9:16"},{"kind":"number","nativeSrc":"13636:1:16","nodeType":"YulLiteral","src":"13636:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13621:3:16","nodeType":"YulIdentifier","src":"13621:3:16"},"nativeSrc":"13621:17:16","nodeType":"YulFunctionCall","src":"13621:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13568:43:16","nodeType":"YulIdentifier","src":"13568:43:16"},"nativeSrc":"13568:71:16","nodeType":"YulFunctionCall","src":"13568:71:16"},"nativeSrc":"13568:71:16","nodeType":"YulExpressionStatement","src":"13568:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"13424:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13494:9:16","nodeType":"YulTypedName","src":"13494:9:16","type":""},{"name":"value0","nativeSrc":"13506:6:16","nodeType":"YulTypedName","src":"13506:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13517:4:16","nodeType":"YulTypedName","src":"13517:4:16","type":""}],"src":"13424:222:16"},{"body":{"nativeSrc":"13806:288:16","nodeType":"YulBlock","src":"13806:288:16","statements":[{"nativeSrc":"13816:26:16","nodeType":"YulAssignment","src":"13816:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13828:9:16","nodeType":"YulIdentifier","src":"13828:9:16"},{"kind":"number","nativeSrc":"13839:2:16","nodeType":"YulLiteral","src":"13839:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13824:3:16","nodeType":"YulIdentifier","src":"13824:3:16"},"nativeSrc":"13824:18:16","nodeType":"YulFunctionCall","src":"13824:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13816:4:16","nodeType":"YulIdentifier","src":"13816:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13896:6:16","nodeType":"YulIdentifier","src":"13896:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"13909:9:16","nodeType":"YulIdentifier","src":"13909:9:16"},{"kind":"number","nativeSrc":"13920:1:16","nodeType":"YulLiteral","src":"13920:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13905:3:16","nodeType":"YulIdentifier","src":"13905:3:16"},"nativeSrc":"13905:17:16","nodeType":"YulFunctionCall","src":"13905:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13852:43:16","nodeType":"YulIdentifier","src":"13852:43:16"},"nativeSrc":"13852:71:16","nodeType":"YulFunctionCall","src":"13852:71:16"},"nativeSrc":"13852:71:16","nodeType":"YulExpressionStatement","src":"13852:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13977:6:16","nodeType":"YulIdentifier","src":"13977:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"13990:9:16","nodeType":"YulIdentifier","src":"13990:9:16"},{"kind":"number","nativeSrc":"14001:2:16","nodeType":"YulLiteral","src":"14001:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13986:3:16","nodeType":"YulIdentifier","src":"13986:3:16"},"nativeSrc":"13986:18:16","nodeType":"YulFunctionCall","src":"13986:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13933:43:16","nodeType":"YulIdentifier","src":"13933:43:16"},"nativeSrc":"13933:72:16","nodeType":"YulFunctionCall","src":"13933:72:16"},"nativeSrc":"13933:72:16","nodeType":"YulExpressionStatement","src":"13933:72:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14059:6:16","nodeType":"YulIdentifier","src":"14059:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"14072:9:16","nodeType":"YulIdentifier","src":"14072:9:16"},{"kind":"number","nativeSrc":"14083:2:16","nodeType":"YulLiteral","src":"14083:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14068:3:16","nodeType":"YulIdentifier","src":"14068:3:16"},"nativeSrc":"14068:18:16","nodeType":"YulFunctionCall","src":"14068:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14015:43:16","nodeType":"YulIdentifier","src":"14015:43:16"},"nativeSrc":"14015:72:16","nodeType":"YulFunctionCall","src":"14015:72:16"},"nativeSrc":"14015:72:16","nodeType":"YulExpressionStatement","src":"14015:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"13652:442:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13762:9:16","nodeType":"YulTypedName","src":"13762:9:16","type":""},{"name":"value2","nativeSrc":"13774:6:16","nodeType":"YulTypedName","src":"13774:6:16","type":""},{"name":"value1","nativeSrc":"13782:6:16","nodeType":"YulTypedName","src":"13782:6:16","type":""},{"name":"value0","nativeSrc":"13790:6:16","nodeType":"YulTypedName","src":"13790:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13801:4:16","nodeType":"YulTypedName","src":"13801:4:16","type":""}],"src":"13652:442:16"},{"body":{"nativeSrc":"14213:34:16","nodeType":"YulBlock","src":"14213:34:16","statements":[{"nativeSrc":"14223:18:16","nodeType":"YulAssignment","src":"14223:18:16","value":{"name":"pos","nativeSrc":"14238:3:16","nodeType":"YulIdentifier","src":"14238:3:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"14223:11:16","nodeType":"YulIdentifier","src":"14223:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14100:147:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14185:3:16","nodeType":"YulTypedName","src":"14185:3:16","type":""},{"name":"length","nativeSrc":"14190:6:16","nodeType":"YulTypedName","src":"14190:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14201:11:16","nodeType":"YulTypedName","src":"14201:11:16","type":""}],"src":"14100:147:16"},{"body":{"nativeSrc":"14359:8:16","nodeType":"YulBlock","src":"14359:8:16","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"14253:114:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14351:6:16","nodeType":"YulTypedName","src":"14351:6:16","type":""}],"src":"14253:114:16"},{"body":{"nativeSrc":"14536:235:16","nodeType":"YulBlock","src":"14536:235:16","statements":[{"nativeSrc":"14546:90:16","nodeType":"YulAssignment","src":"14546:90:16","value":{"arguments":[{"name":"pos","nativeSrc":"14629:3:16","nodeType":"YulIdentifier","src":"14629:3:16"},{"kind":"number","nativeSrc":"14634:1:16","nodeType":"YulLiteral","src":"14634:1:16","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14553:75:16","nodeType":"YulIdentifier","src":"14553:75:16"},"nativeSrc":"14553:83:16","nodeType":"YulFunctionCall","src":"14553:83:16"},"variableNames":[{"name":"pos","nativeSrc":"14546:3:16","nodeType":"YulIdentifier","src":"14546:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14734:3:16","nodeType":"YulIdentifier","src":"14734:3:16"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"14645:88:16","nodeType":"YulIdentifier","src":"14645:88:16"},"nativeSrc":"14645:93:16","nodeType":"YulFunctionCall","src":"14645:93:16"},"nativeSrc":"14645:93:16","nodeType":"YulExpressionStatement","src":"14645:93:16"},{"nativeSrc":"14747:18:16","nodeType":"YulAssignment","src":"14747:18:16","value":{"arguments":[{"name":"pos","nativeSrc":"14758:3:16","nodeType":"YulIdentifier","src":"14758:3:16"},{"kind":"number","nativeSrc":"14763:1:16","nodeType":"YulLiteral","src":"14763:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14754:3:16","nodeType":"YulIdentifier","src":"14754:3:16"},"nativeSrc":"14754:11:16","nodeType":"YulFunctionCall","src":"14754:11:16"},"variableNames":[{"name":"end","nativeSrc":"14747:3:16","nodeType":"YulIdentifier","src":"14747:3:16"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14373:398:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14524:3:16","nodeType":"YulTypedName","src":"14524:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14532:3:16","nodeType":"YulTypedName","src":"14532:3:16","type":""}],"src":"14373:398:16"},{"body":{"nativeSrc":"14965:191:16","nodeType":"YulBlock","src":"14965:191:16","statements":[{"nativeSrc":"14976:154:16","nodeType":"YulAssignment","src":"14976:154:16","value":{"arguments":[{"name":"pos","nativeSrc":"15126:3:16","nodeType":"YulIdentifier","src":"15126:3:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14983:141:16","nodeType":"YulIdentifier","src":"14983:141:16"},"nativeSrc":"14983:147:16","nodeType":"YulFunctionCall","src":"14983:147:16"},"variableNames":[{"name":"pos","nativeSrc":"14976:3:16","nodeType":"YulIdentifier","src":"14976:3:16"}]},{"nativeSrc":"15140:10:16","nodeType":"YulAssignment","src":"15140:10:16","value":{"name":"pos","nativeSrc":"15147:3:16","nodeType":"YulIdentifier","src":"15147:3:16"},"variableNames":[{"name":"end","nativeSrc":"15140:3:16","nodeType":"YulIdentifier","src":"15140:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"14777:379:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14952:3:16","nodeType":"YulTypedName","src":"14952:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14961:3:16","nodeType":"YulTypedName","src":"14961:3:16","type":""}],"src":"14777:379:16"},{"body":{"nativeSrc":"15225:80:16","nodeType":"YulBlock","src":"15225:80:16","statements":[{"nativeSrc":"15235:22:16","nodeType":"YulAssignment","src":"15235:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"15250:6:16","nodeType":"YulIdentifier","src":"15250:6:16"}],"functionName":{"name":"mload","nativeSrc":"15244:5:16","nodeType":"YulIdentifier","src":"15244:5:16"},"nativeSrc":"15244:13:16","nodeType":"YulFunctionCall","src":"15244:13:16"},"variableNames":[{"name":"value","nativeSrc":"15235:5:16","nodeType":"YulIdentifier","src":"15235:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15293:5:16","nodeType":"YulIdentifier","src":"15293:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"15266:26:16","nodeType":"YulIdentifier","src":"15266:26:16"},"nativeSrc":"15266:33:16","nodeType":"YulFunctionCall","src":"15266:33:16"},"nativeSrc":"15266:33:16","nodeType":"YulExpressionStatement","src":"15266:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15162:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15203:6:16","nodeType":"YulTypedName","src":"15203:6:16","type":""},{"name":"end","nativeSrc":"15211:3:16","nodeType":"YulTypedName","src":"15211:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15219:5:16","nodeType":"YulTypedName","src":"15219:5:16","type":""}],"src":"15162:143:16"},{"body":{"nativeSrc":"15388:274:16","nodeType":"YulBlock","src":"15388:274:16","statements":[{"body":{"nativeSrc":"15434:83:16","nodeType":"YulBlock","src":"15434:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15436:77:16","nodeType":"YulIdentifier","src":"15436:77:16"},"nativeSrc":"15436:79:16","nodeType":"YulFunctionCall","src":"15436:79:16"},"nativeSrc":"15436:79:16","nodeType":"YulExpressionStatement","src":"15436:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15409:7:16","nodeType":"YulIdentifier","src":"15409:7:16"},{"name":"headStart","nativeSrc":"15418:9:16","nodeType":"YulIdentifier","src":"15418:9:16"}],"functionName":{"name":"sub","nativeSrc":"15405:3:16","nodeType":"YulIdentifier","src":"15405:3:16"},"nativeSrc":"15405:23:16","nodeType":"YulFunctionCall","src":"15405:23:16"},{"kind":"number","nativeSrc":"15430:2:16","nodeType":"YulLiteral","src":"15430:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15401:3:16","nodeType":"YulIdentifier","src":"15401:3:16"},"nativeSrc":"15401:32:16","nodeType":"YulFunctionCall","src":"15401:32:16"},"nativeSrc":"15398:119:16","nodeType":"YulIf","src":"15398:119:16"},{"nativeSrc":"15527:128:16","nodeType":"YulBlock","src":"15527:128:16","statements":[{"nativeSrc":"15542:15:16","nodeType":"YulVariableDeclaration","src":"15542:15:16","value":{"kind":"number","nativeSrc":"15556:1:16","nodeType":"YulLiteral","src":"15556:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15546:6:16","nodeType":"YulTypedName","src":"15546:6:16","type":""}]},{"nativeSrc":"15571:74:16","nodeType":"YulAssignment","src":"15571:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15617:9:16","nodeType":"YulIdentifier","src":"15617:9:16"},{"name":"offset","nativeSrc":"15628:6:16","nodeType":"YulIdentifier","src":"15628:6:16"}],"functionName":{"name":"add","nativeSrc":"15613:3:16","nodeType":"YulIdentifier","src":"15613:3:16"},"nativeSrc":"15613:22:16","nodeType":"YulFunctionCall","src":"15613:22:16"},{"name":"dataEnd","nativeSrc":"15637:7:16","nodeType":"YulIdentifier","src":"15637:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15581:31:16","nodeType":"YulIdentifier","src":"15581:31:16"},"nativeSrc":"15581:64:16","nodeType":"YulFunctionCall","src":"15581:64:16"},"variableNames":[{"name":"value0","nativeSrc":"15571:6:16","nodeType":"YulIdentifier","src":"15571:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"15311:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15358:9:16","nodeType":"YulTypedName","src":"15358:9:16","type":""},{"name":"dataEnd","nativeSrc":"15369:7:16","nodeType":"YulTypedName","src":"15369:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15381:6:16","nodeType":"YulTypedName","src":"15381:6:16","type":""}],"src":"15311:351:16"},{"body":{"nativeSrc":"15794:206:16","nodeType":"YulBlock","src":"15794:206:16","statements":[{"nativeSrc":"15804:26:16","nodeType":"YulAssignment","src":"15804:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"15816:9:16","nodeType":"YulIdentifier","src":"15816:9:16"},{"kind":"number","nativeSrc":"15827:2:16","nodeType":"YulLiteral","src":"15827:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15812:3:16","nodeType":"YulIdentifier","src":"15812:3:16"},"nativeSrc":"15812:18:16","nodeType":"YulFunctionCall","src":"15812:18:16"},"variableNames":[{"name":"tail","nativeSrc":"15804:4:16","nodeType":"YulIdentifier","src":"15804:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15884:6:16","nodeType":"YulIdentifier","src":"15884:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"15897:9:16","nodeType":"YulIdentifier","src":"15897:9:16"},{"kind":"number","nativeSrc":"15908:1:16","nodeType":"YulLiteral","src":"15908:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15893:3:16","nodeType":"YulIdentifier","src":"15893:3:16"},"nativeSrc":"15893:17:16","nodeType":"YulFunctionCall","src":"15893:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15840:43:16","nodeType":"YulIdentifier","src":"15840:43:16"},"nativeSrc":"15840:71:16","nodeType":"YulFunctionCall","src":"15840:71:16"},"nativeSrc":"15840:71:16","nodeType":"YulExpressionStatement","src":"15840:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15965:6:16","nodeType":"YulIdentifier","src":"15965:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"15978:9:16","nodeType":"YulIdentifier","src":"15978:9:16"},{"kind":"number","nativeSrc":"15989:2:16","nodeType":"YulLiteral","src":"15989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15974:3:16","nodeType":"YulIdentifier","src":"15974:3:16"},"nativeSrc":"15974:18:16","nodeType":"YulFunctionCall","src":"15974:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15921:43:16","nodeType":"YulIdentifier","src":"15921:43:16"},"nativeSrc":"15921:72:16","nodeType":"YulFunctionCall","src":"15921:72:16"},"nativeSrc":"15921:72:16","nodeType":"YulExpressionStatement","src":"15921:72:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"15668:332:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15758:9:16","nodeType":"YulTypedName","src":"15758:9:16","type":""},{"name":"value1","nativeSrc":"15770:6:16","nodeType":"YulTypedName","src":"15770:6:16","type":""},{"name":"value0","nativeSrc":"15778:6:16","nodeType":"YulTypedName","src":"15778:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15789:4:16","nodeType":"YulTypedName","src":"15789:4:16","type":""}],"src":"15668:332:16"},{"body":{"nativeSrc":"16046:76:16","nodeType":"YulBlock","src":"16046:76:16","statements":[{"body":{"nativeSrc":"16100:16:16","nodeType":"YulBlock","src":"16100:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16109:1:16","nodeType":"YulLiteral","src":"16109:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"16112:1:16","nodeType":"YulLiteral","src":"16112:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16102:6:16","nodeType":"YulIdentifier","src":"16102:6:16"},"nativeSrc":"16102:12:16","nodeType":"YulFunctionCall","src":"16102:12:16"},"nativeSrc":"16102:12:16","nodeType":"YulExpressionStatement","src":"16102:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16069:5:16","nodeType":"YulIdentifier","src":"16069:5:16"},{"arguments":[{"name":"value","nativeSrc":"16091:5:16","nodeType":"YulIdentifier","src":"16091:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"16076:14:16","nodeType":"YulIdentifier","src":"16076:14:16"},"nativeSrc":"16076:21:16","nodeType":"YulFunctionCall","src":"16076:21:16"}],"functionName":{"name":"eq","nativeSrc":"16066:2:16","nodeType":"YulIdentifier","src":"16066:2:16"},"nativeSrc":"16066:32:16","nodeType":"YulFunctionCall","src":"16066:32:16"}],"functionName":{"name":"iszero","nativeSrc":"16059:6:16","nodeType":"YulIdentifier","src":"16059:6:16"},"nativeSrc":"16059:40:16","nodeType":"YulFunctionCall","src":"16059:40:16"},"nativeSrc":"16056:60:16","nodeType":"YulIf","src":"16056:60:16"}]},"name":"validator_revert_t_bool","nativeSrc":"16006:116:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16039:5:16","nodeType":"YulTypedName","src":"16039:5:16","type":""}],"src":"16006:116:16"},{"body":{"nativeSrc":"16188:77:16","nodeType":"YulBlock","src":"16188:77:16","statements":[{"nativeSrc":"16198:22:16","nodeType":"YulAssignment","src":"16198:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"16213:6:16","nodeType":"YulIdentifier","src":"16213:6:16"}],"functionName":{"name":"mload","nativeSrc":"16207:5:16","nodeType":"YulIdentifier","src":"16207:5:16"},"nativeSrc":"16207:13:16","nodeType":"YulFunctionCall","src":"16207:13:16"},"variableNames":[{"name":"value","nativeSrc":"16198:5:16","nodeType":"YulIdentifier","src":"16198:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16253:5:16","nodeType":"YulIdentifier","src":"16253:5:16"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16229:23:16","nodeType":"YulIdentifier","src":"16229:23:16"},"nativeSrc":"16229:30:16","nodeType":"YulFunctionCall","src":"16229:30:16"},"nativeSrc":"16229:30:16","nodeType":"YulExpressionStatement","src":"16229:30:16"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16128:137:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16166:6:16","nodeType":"YulTypedName","src":"16166:6:16","type":""},{"name":"end","nativeSrc":"16174:3:16","nodeType":"YulTypedName","src":"16174:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16182:5:16","nodeType":"YulTypedName","src":"16182:5:16","type":""}],"src":"16128:137:16"},{"body":{"nativeSrc":"16345:271:16","nodeType":"YulBlock","src":"16345:271:16","statements":[{"body":{"nativeSrc":"16391:83:16","nodeType":"YulBlock","src":"16391:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16393:77:16","nodeType":"YulIdentifier","src":"16393:77:16"},"nativeSrc":"16393:79:16","nodeType":"YulFunctionCall","src":"16393:79:16"},"nativeSrc":"16393:79:16","nodeType":"YulExpressionStatement","src":"16393:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16366:7:16","nodeType":"YulIdentifier","src":"16366:7:16"},{"name":"headStart","nativeSrc":"16375:9:16","nodeType":"YulIdentifier","src":"16375:9:16"}],"functionName":{"name":"sub","nativeSrc":"16362:3:16","nodeType":"YulIdentifier","src":"16362:3:16"},"nativeSrc":"16362:23:16","nodeType":"YulFunctionCall","src":"16362:23:16"},{"kind":"number","nativeSrc":"16387:2:16","nodeType":"YulLiteral","src":"16387:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16358:3:16","nodeType":"YulIdentifier","src":"16358:3:16"},"nativeSrc":"16358:32:16","nodeType":"YulFunctionCall","src":"16358:32:16"},"nativeSrc":"16355:119:16","nodeType":"YulIf","src":"16355:119:16"},{"nativeSrc":"16484:125:16","nodeType":"YulBlock","src":"16484:125:16","statements":[{"nativeSrc":"16499:15:16","nodeType":"YulVariableDeclaration","src":"16499:15:16","value":{"kind":"number","nativeSrc":"16513:1:16","nodeType":"YulLiteral","src":"16513:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16503:6:16","nodeType":"YulTypedName","src":"16503:6:16","type":""}]},{"nativeSrc":"16528:71:16","nodeType":"YulAssignment","src":"16528:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16571:9:16","nodeType":"YulIdentifier","src":"16571:9:16"},{"name":"offset","nativeSrc":"16582:6:16","nodeType":"YulIdentifier","src":"16582:6:16"}],"functionName":{"name":"add","nativeSrc":"16567:3:16","nodeType":"YulIdentifier","src":"16567:3:16"},"nativeSrc":"16567:22:16","nodeType":"YulFunctionCall","src":"16567:22:16"},{"name":"dataEnd","nativeSrc":"16591:7:16","nodeType":"YulIdentifier","src":"16591:7:16"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16538:28:16","nodeType":"YulIdentifier","src":"16538:28:16"},"nativeSrc":"16538:61:16","nodeType":"YulFunctionCall","src":"16538:61:16"},"variableNames":[{"name":"value0","nativeSrc":"16528:6:16","nodeType":"YulIdentifier","src":"16528:6:16"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"16271:345:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16315:9:16","nodeType":"YulTypedName","src":"16315:9:16","type":""},{"name":"dataEnd","nativeSrc":"16326:7:16","nodeType":"YulTypedName","src":"16326:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16338:6:16","nodeType":"YulTypedName","src":"16338:6:16","type":""}],"src":"16271:345:16"},{"body":{"nativeSrc":"16650:152:16","nodeType":"YulBlock","src":"16650:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16667:1:16","nodeType":"YulLiteral","src":"16667:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"16670:77:16","nodeType":"YulLiteral","src":"16670:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16660:6:16","nodeType":"YulIdentifier","src":"16660:6:16"},"nativeSrc":"16660:88:16","nodeType":"YulFunctionCall","src":"16660:88:16"},"nativeSrc":"16660:88:16","nodeType":"YulExpressionStatement","src":"16660:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16764:1:16","nodeType":"YulLiteral","src":"16764:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"16767:4:16","nodeType":"YulLiteral","src":"16767:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"16757:6:16","nodeType":"YulIdentifier","src":"16757:6:16"},"nativeSrc":"16757:15:16","nodeType":"YulFunctionCall","src":"16757:15:16"},"nativeSrc":"16757:15:16","nodeType":"YulExpressionStatement","src":"16757:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16788:1:16","nodeType":"YulLiteral","src":"16788:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"16791:4:16","nodeType":"YulLiteral","src":"16791:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16781:6:16","nodeType":"YulIdentifier","src":"16781:6:16"},"nativeSrc":"16781:15:16","nodeType":"YulFunctionCall","src":"16781:15:16"},"nativeSrc":"16781:15:16","nodeType":"YulExpressionStatement","src":"16781:15:16"}]},"name":"panic_error_0x32","nativeSrc":"16622:180:16","nodeType":"YulFunctionDefinition","src":"16622:180:16"},{"body":{"nativeSrc":"16874:263:16","nodeType":"YulBlock","src":"16874:263:16","statements":[{"body":{"nativeSrc":"16920:83:16","nodeType":"YulBlock","src":"16920:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16922:77:16","nodeType":"YulIdentifier","src":"16922:77:16"},"nativeSrc":"16922:79:16","nodeType":"YulFunctionCall","src":"16922:79:16"},"nativeSrc":"16922:79:16","nodeType":"YulExpressionStatement","src":"16922:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16895:7:16","nodeType":"YulIdentifier","src":"16895:7:16"},{"name":"headStart","nativeSrc":"16904:9:16","nodeType":"YulIdentifier","src":"16904:9:16"}],"functionName":{"name":"sub","nativeSrc":"16891:3:16","nodeType":"YulIdentifier","src":"16891:3:16"},"nativeSrc":"16891:23:16","nodeType":"YulFunctionCall","src":"16891:23:16"},{"kind":"number","nativeSrc":"16916:2:16","nodeType":"YulLiteral","src":"16916:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16887:3:16","nodeType":"YulIdentifier","src":"16887:3:16"},"nativeSrc":"16887:32:16","nodeType":"YulFunctionCall","src":"16887:32:16"},"nativeSrc":"16884:119:16","nodeType":"YulIf","src":"16884:119:16"},{"nativeSrc":"17013:117:16","nodeType":"YulBlock","src":"17013:117:16","statements":[{"nativeSrc":"17028:15:16","nodeType":"YulVariableDeclaration","src":"17028:15:16","value":{"kind":"number","nativeSrc":"17042:1:16","nodeType":"YulLiteral","src":"17042:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17032:6:16","nodeType":"YulTypedName","src":"17032:6:16","type":""}]},{"nativeSrc":"17057:63:16","nodeType":"YulAssignment","src":"17057:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17092:9:16","nodeType":"YulIdentifier","src":"17092:9:16"},{"name":"offset","nativeSrc":"17103:6:16","nodeType":"YulIdentifier","src":"17103:6:16"}],"functionName":{"name":"add","nativeSrc":"17088:3:16","nodeType":"YulIdentifier","src":"17088:3:16"},"nativeSrc":"17088:22:16","nodeType":"YulFunctionCall","src":"17088:22:16"},{"name":"dataEnd","nativeSrc":"17112:7:16","nodeType":"YulIdentifier","src":"17112:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17067:20:16","nodeType":"YulIdentifier","src":"17067:20:16"},"nativeSrc":"17067:53:16","nodeType":"YulFunctionCall","src":"17067:53:16"},"variableNames":[{"name":"value0","nativeSrc":"17057:6:16","nodeType":"YulIdentifier","src":"17057:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"16808:329:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16844:9:16","nodeType":"YulTypedName","src":"16844:9:16","type":""},{"name":"dataEnd","nativeSrc":"16855:7:16","nodeType":"YulTypedName","src":"16855:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16867:6:16","nodeType":"YulTypedName","src":"16867:6:16","type":""}],"src":"16808:329:16"},{"body":{"nativeSrc":"17206:80:16","nodeType":"YulBlock","src":"17206:80:16","statements":[{"nativeSrc":"17216:22:16","nodeType":"YulAssignment","src":"17216:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"17231:6:16","nodeType":"YulIdentifier","src":"17231:6:16"}],"functionName":{"name":"mload","nativeSrc":"17225:5:16","nodeType":"YulIdentifier","src":"17225:5:16"},"nativeSrc":"17225:13:16","nodeType":"YulFunctionCall","src":"17225:13:16"},"variableNames":[{"name":"value","nativeSrc":"17216:5:16","nodeType":"YulIdentifier","src":"17216:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17274:5:16","nodeType":"YulIdentifier","src":"17274:5:16"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"17247:26:16","nodeType":"YulIdentifier","src":"17247:26:16"},"nativeSrc":"17247:33:16","nodeType":"YulFunctionCall","src":"17247:33:16"},"nativeSrc":"17247:33:16","nodeType":"YulExpressionStatement","src":"17247:33:16"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"17143:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17184:6:16","nodeType":"YulTypedName","src":"17184:6:16","type":""},{"name":"end","nativeSrc":"17192:3:16","nodeType":"YulTypedName","src":"17192:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17200:5:16","nodeType":"YulTypedName","src":"17200:5:16","type":""}],"src":"17143:143:16"},{"body":{"nativeSrc":"17403:552:16","nodeType":"YulBlock","src":"17403:552:16","statements":[{"body":{"nativeSrc":"17449:83:16","nodeType":"YulBlock","src":"17449:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17451:77:16","nodeType":"YulIdentifier","src":"17451:77:16"},"nativeSrc":"17451:79:16","nodeType":"YulFunctionCall","src":"17451:79:16"},"nativeSrc":"17451:79:16","nodeType":"YulExpressionStatement","src":"17451:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17424:7:16","nodeType":"YulIdentifier","src":"17424:7:16"},{"name":"headStart","nativeSrc":"17433:9:16","nodeType":"YulIdentifier","src":"17433:9:16"}],"functionName":{"name":"sub","nativeSrc":"17420:3:16","nodeType":"YulIdentifier","src":"17420:3:16"},"nativeSrc":"17420:23:16","nodeType":"YulFunctionCall","src":"17420:23:16"},{"kind":"number","nativeSrc":"17445:2:16","nodeType":"YulLiteral","src":"17445:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"17416:3:16","nodeType":"YulIdentifier","src":"17416:3:16"},"nativeSrc":"17416:32:16","nodeType":"YulFunctionCall","src":"17416:32:16"},"nativeSrc":"17413:119:16","nodeType":"YulIf","src":"17413:119:16"},{"nativeSrc":"17542:128:16","nodeType":"YulBlock","src":"17542:128:16","statements":[{"nativeSrc":"17557:15:16","nodeType":"YulVariableDeclaration","src":"17557:15:16","value":{"kind":"number","nativeSrc":"17571:1:16","nodeType":"YulLiteral","src":"17571:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17561:6:16","nodeType":"YulTypedName","src":"17561:6:16","type":""}]},{"nativeSrc":"17586:74:16","nodeType":"YulAssignment","src":"17586:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17632:9:16","nodeType":"YulIdentifier","src":"17632:9:16"},{"name":"offset","nativeSrc":"17643:6:16","nodeType":"YulIdentifier","src":"17643:6:16"}],"functionName":{"name":"add","nativeSrc":"17628:3:16","nodeType":"YulIdentifier","src":"17628:3:16"},"nativeSrc":"17628:22:16","nodeType":"YulFunctionCall","src":"17628:22:16"},{"name":"dataEnd","nativeSrc":"17652:7:16","nodeType":"YulIdentifier","src":"17652:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"17596:31:16","nodeType":"YulIdentifier","src":"17596:31:16"},"nativeSrc":"17596:64:16","nodeType":"YulFunctionCall","src":"17596:64:16"},"variableNames":[{"name":"value0","nativeSrc":"17586:6:16","nodeType":"YulIdentifier","src":"17586:6:16"}]}]},{"nativeSrc":"17680:129:16","nodeType":"YulBlock","src":"17680:129:16","statements":[{"nativeSrc":"17695:16:16","nodeType":"YulVariableDeclaration","src":"17695:16:16","value":{"kind":"number","nativeSrc":"17709:2:16","nodeType":"YulLiteral","src":"17709:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17699:6:16","nodeType":"YulTypedName","src":"17699:6:16","type":""}]},{"nativeSrc":"17725:74:16","nodeType":"YulAssignment","src":"17725:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17771:9:16","nodeType":"YulIdentifier","src":"17771:9:16"},{"name":"offset","nativeSrc":"17782:6:16","nodeType":"YulIdentifier","src":"17782:6:16"}],"functionName":{"name":"add","nativeSrc":"17767:3:16","nodeType":"YulIdentifier","src":"17767:3:16"},"nativeSrc":"17767:22:16","nodeType":"YulFunctionCall","src":"17767:22:16"},{"name":"dataEnd","nativeSrc":"17791:7:16","nodeType":"YulIdentifier","src":"17791:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"17735:31:16","nodeType":"YulIdentifier","src":"17735:31:16"},"nativeSrc":"17735:64:16","nodeType":"YulFunctionCall","src":"17735:64:16"},"variableNames":[{"name":"value1","nativeSrc":"17725:6:16","nodeType":"YulIdentifier","src":"17725:6:16"}]}]},{"nativeSrc":"17819:129:16","nodeType":"YulBlock","src":"17819:129:16","statements":[{"nativeSrc":"17834:16:16","nodeType":"YulVariableDeclaration","src":"17834:16:16","value":{"kind":"number","nativeSrc":"17848:2:16","nodeType":"YulLiteral","src":"17848:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"17838:6:16","nodeType":"YulTypedName","src":"17838:6:16","type":""}]},{"nativeSrc":"17864:74:16","nodeType":"YulAssignment","src":"17864:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17910:9:16","nodeType":"YulIdentifier","src":"17910:9:16"},{"name":"offset","nativeSrc":"17921:6:16","nodeType":"YulIdentifier","src":"17921:6:16"}],"functionName":{"name":"add","nativeSrc":"17906:3:16","nodeType":"YulIdentifier","src":"17906:3:16"},"nativeSrc":"17906:22:16","nodeType":"YulFunctionCall","src":"17906:22:16"},{"name":"dataEnd","nativeSrc":"17930:7:16","nodeType":"YulIdentifier","src":"17930:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"17874:31:16","nodeType":"YulIdentifier","src":"17874:31:16"},"nativeSrc":"17874:64:16","nodeType":"YulFunctionCall","src":"17874:64:16"},"variableNames":[{"name":"value2","nativeSrc":"17864:6:16","nodeType":"YulIdentifier","src":"17864:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory","nativeSrc":"17292:663:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17357:9:16","nodeType":"YulTypedName","src":"17357:9:16","type":""},{"name":"dataEnd","nativeSrc":"17368:7:16","nodeType":"YulTypedName","src":"17368:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17380:6:16","nodeType":"YulTypedName","src":"17380:6:16","type":""},{"name":"value1","nativeSrc":"17388:6:16","nodeType":"YulTypedName","src":"17388:6:16","type":""},{"name":"value2","nativeSrc":"17396:6:16","nodeType":"YulTypedName","src":"17396:6:16","type":""}],"src":"17292:663:16"},{"body":{"nativeSrc":"18038:274:16","nodeType":"YulBlock","src":"18038:274:16","statements":[{"body":{"nativeSrc":"18084:83:16","nodeType":"YulBlock","src":"18084:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18086:77:16","nodeType":"YulIdentifier","src":"18086:77:16"},"nativeSrc":"18086:79:16","nodeType":"YulFunctionCall","src":"18086:79:16"},"nativeSrc":"18086:79:16","nodeType":"YulExpressionStatement","src":"18086:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18059:7:16","nodeType":"YulIdentifier","src":"18059:7:16"},{"name":"headStart","nativeSrc":"18068:9:16","nodeType":"YulIdentifier","src":"18068:9:16"}],"functionName":{"name":"sub","nativeSrc":"18055:3:16","nodeType":"YulIdentifier","src":"18055:3:16"},"nativeSrc":"18055:23:16","nodeType":"YulFunctionCall","src":"18055:23:16"},{"kind":"number","nativeSrc":"18080:2:16","nodeType":"YulLiteral","src":"18080:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18051:3:16","nodeType":"YulIdentifier","src":"18051:3:16"},"nativeSrc":"18051:32:16","nodeType":"YulFunctionCall","src":"18051:32:16"},"nativeSrc":"18048:119:16","nodeType":"YulIf","src":"18048:119:16"},{"nativeSrc":"18177:128:16","nodeType":"YulBlock","src":"18177:128:16","statements":[{"nativeSrc":"18192:15:16","nodeType":"YulVariableDeclaration","src":"18192:15:16","value":{"kind":"number","nativeSrc":"18206:1:16","nodeType":"YulLiteral","src":"18206:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18196:6:16","nodeType":"YulTypedName","src":"18196:6:16","type":""}]},{"nativeSrc":"18221:74:16","nodeType":"YulAssignment","src":"18221:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18267:9:16","nodeType":"YulIdentifier","src":"18267:9:16"},{"name":"offset","nativeSrc":"18278:6:16","nodeType":"YulIdentifier","src":"18278:6:16"}],"functionName":{"name":"add","nativeSrc":"18263:3:16","nodeType":"YulIdentifier","src":"18263:3:16"},"nativeSrc":"18263:22:16","nodeType":"YulFunctionCall","src":"18263:22:16"},{"name":"dataEnd","nativeSrc":"18287:7:16","nodeType":"YulIdentifier","src":"18287:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"18231:31:16","nodeType":"YulIdentifier","src":"18231:31:16"},"nativeSrc":"18231:64:16","nodeType":"YulFunctionCall","src":"18231:64:16"},"variableNames":[{"name":"value0","nativeSrc":"18221:6:16","nodeType":"YulIdentifier","src":"18221:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"17961:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18008:9:16","nodeType":"YulTypedName","src":"18008:9:16","type":""},{"name":"dataEnd","nativeSrc":"18019:7:16","nodeType":"YulTypedName","src":"18019:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18031:6:16","nodeType":"YulTypedName","src":"18031:6:16","type":""}],"src":"17961:351:16"},{"body":{"nativeSrc":"18458:209:16","nodeType":"YulBlock","src":"18458:209:16","statements":[{"nativeSrc":"18468:95:16","nodeType":"YulAssignment","src":"18468:95:16","value":{"arguments":[{"name":"pos","nativeSrc":"18551:3:16","nodeType":"YulIdentifier","src":"18551:3:16"},{"name":"length","nativeSrc":"18556:6:16","nodeType":"YulIdentifier","src":"18556:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18475:75:16","nodeType":"YulIdentifier","src":"18475:75:16"},"nativeSrc":"18475:88:16","nodeType":"YulFunctionCall","src":"18475:88:16"},"variableNames":[{"name":"pos","nativeSrc":"18468:3:16","nodeType":"YulIdentifier","src":"18468:3:16"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"18610:5:16","nodeType":"YulIdentifier","src":"18610:5:16"},{"name":"pos","nativeSrc":"18617:3:16","nodeType":"YulIdentifier","src":"18617:3:16"},{"name":"length","nativeSrc":"18622:6:16","nodeType":"YulIdentifier","src":"18622:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"18573:36:16","nodeType":"YulIdentifier","src":"18573:36:16"},"nativeSrc":"18573:56:16","nodeType":"YulFunctionCall","src":"18573:56:16"},"nativeSrc":"18573:56:16","nodeType":"YulExpressionStatement","src":"18573:56:16"},{"nativeSrc":"18638:23:16","nodeType":"YulAssignment","src":"18638:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"18649:3:16","nodeType":"YulIdentifier","src":"18649:3:16"},{"name":"length","nativeSrc":"18654:6:16","nodeType":"YulIdentifier","src":"18654:6:16"}],"functionName":{"name":"add","nativeSrc":"18645:3:16","nodeType":"YulIdentifier","src":"18645:3:16"},"nativeSrc":"18645:16:16","nodeType":"YulFunctionCall","src":"18645:16:16"},"variableNames":[{"name":"end","nativeSrc":"18638:3:16","nodeType":"YulIdentifier","src":"18638:3:16"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18340:327:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"18431:5:16","nodeType":"YulTypedName","src":"18431:5:16","type":""},{"name":"length","nativeSrc":"18438:6:16","nodeType":"YulTypedName","src":"18438:6:16","type":""},{"name":"pos","nativeSrc":"18446:3:16","nodeType":"YulTypedName","src":"18446:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18454:3:16","nodeType":"YulTypedName","src":"18454:3:16","type":""}],"src":"18340:327:16"},{"body":{"nativeSrc":"18817:147:16","nodeType":"YulBlock","src":"18817:147:16","statements":[{"nativeSrc":"18828:110:16","nodeType":"YulAssignment","src":"18828:110:16","value":{"arguments":[{"name":"value0","nativeSrc":"18917:6:16","nodeType":"YulIdentifier","src":"18917:6:16"},{"name":"value1","nativeSrc":"18925:6:16","nodeType":"YulIdentifier","src":"18925:6:16"},{"name":"pos","nativeSrc":"18934:3:16","nodeType":"YulIdentifier","src":"18934:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18835:81:16","nodeType":"YulIdentifier","src":"18835:81:16"},"nativeSrc":"18835:103:16","nodeType":"YulFunctionCall","src":"18835:103:16"},"variableNames":[{"name":"pos","nativeSrc":"18828:3:16","nodeType":"YulIdentifier","src":"18828:3:16"}]},{"nativeSrc":"18948:10:16","nodeType":"YulAssignment","src":"18948:10:16","value":{"name":"pos","nativeSrc":"18955:3:16","nodeType":"YulIdentifier","src":"18955:3:16"},"variableNames":[{"name":"end","nativeSrc":"18948:3:16","nodeType":"YulIdentifier","src":"18948:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"18673:291:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18788:3:16","nodeType":"YulTypedName","src":"18788:3:16","type":""},{"name":"value1","nativeSrc":"18794:6:16","nodeType":"YulTypedName","src":"18794:6:16","type":""},{"name":"value0","nativeSrc":"18802:6:16","nodeType":"YulTypedName","src":"18802:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18813:3:16","nodeType":"YulTypedName","src":"18813:3:16","type":""}],"src":"18673:291:16"},{"body":{"nativeSrc":"18998:152:16","nodeType":"YulBlock","src":"18998:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19015:1:16","nodeType":"YulLiteral","src":"19015:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"19018:77:16","nodeType":"YulLiteral","src":"19018:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19008:6:16","nodeType":"YulIdentifier","src":"19008:6:16"},"nativeSrc":"19008:88:16","nodeType":"YulFunctionCall","src":"19008:88:16"},"nativeSrc":"19008:88:16","nodeType":"YulExpressionStatement","src":"19008:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19112:1:16","nodeType":"YulLiteral","src":"19112:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"19115:4:16","nodeType":"YulLiteral","src":"19115:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"19105:6:16","nodeType":"YulIdentifier","src":"19105:6:16"},"nativeSrc":"19105:15:16","nodeType":"YulFunctionCall","src":"19105:15:16"},"nativeSrc":"19105:15:16","nodeType":"YulExpressionStatement","src":"19105:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19136:1:16","nodeType":"YulLiteral","src":"19136:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"19139:4:16","nodeType":"YulLiteral","src":"19139:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19129:6:16","nodeType":"YulIdentifier","src":"19129:6:16"},"nativeSrc":"19129:15:16","nodeType":"YulFunctionCall","src":"19129:15:16"},"nativeSrc":"19129:15:16","nodeType":"YulExpressionStatement","src":"19129:15:16"}]},"name":"panic_error_0x11","nativeSrc":"18970:180:16","nodeType":"YulFunctionDefinition","src":"18970:180:16"},{"body":{"nativeSrc":"19201:149:16","nodeType":"YulBlock","src":"19201:149:16","statements":[{"nativeSrc":"19211:25:16","nodeType":"YulAssignment","src":"19211:25:16","value":{"arguments":[{"name":"x","nativeSrc":"19234:1:16","nodeType":"YulIdentifier","src":"19234:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19216:17:16","nodeType":"YulIdentifier","src":"19216:17:16"},"nativeSrc":"19216:20:16","nodeType":"YulFunctionCall","src":"19216:20:16"},"variableNames":[{"name":"x","nativeSrc":"19211:1:16","nodeType":"YulIdentifier","src":"19211:1:16"}]},{"nativeSrc":"19245:25:16","nodeType":"YulAssignment","src":"19245:25:16","value":{"arguments":[{"name":"y","nativeSrc":"19268:1:16","nodeType":"YulIdentifier","src":"19268:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19250:17:16","nodeType":"YulIdentifier","src":"19250:17:16"},"nativeSrc":"19250:20:16","nodeType":"YulFunctionCall","src":"19250:20:16"},"variableNames":[{"name":"y","nativeSrc":"19245:1:16","nodeType":"YulIdentifier","src":"19245:1:16"}]},{"nativeSrc":"19279:17:16","nodeType":"YulAssignment","src":"19279:17:16","value":{"arguments":[{"name":"x","nativeSrc":"19291:1:16","nodeType":"YulIdentifier","src":"19291:1:16"},{"name":"y","nativeSrc":"19294:1:16","nodeType":"YulIdentifier","src":"19294:1:16"}],"functionName":{"name":"sub","nativeSrc":"19287:3:16","nodeType":"YulIdentifier","src":"19287:3:16"},"nativeSrc":"19287:9:16","nodeType":"YulFunctionCall","src":"19287:9:16"},"variableNames":[{"name":"diff","nativeSrc":"19279:4:16","nodeType":"YulIdentifier","src":"19279:4:16"}]},{"body":{"nativeSrc":"19321:22:16","nodeType":"YulBlock","src":"19321:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19323:16:16","nodeType":"YulIdentifier","src":"19323:16:16"},"nativeSrc":"19323:18:16","nodeType":"YulFunctionCall","src":"19323:18:16"},"nativeSrc":"19323:18:16","nodeType":"YulExpressionStatement","src":"19323:18:16"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"19312:4:16","nodeType":"YulIdentifier","src":"19312:4:16"},{"name":"x","nativeSrc":"19318:1:16","nodeType":"YulIdentifier","src":"19318:1:16"}],"functionName":{"name":"gt","nativeSrc":"19309:2:16","nodeType":"YulIdentifier","src":"19309:2:16"},"nativeSrc":"19309:11:16","nodeType":"YulFunctionCall","src":"19309:11:16"},"nativeSrc":"19306:37:16","nodeType":"YulIf","src":"19306:37:16"}]},"name":"checked_sub_t_uint256","nativeSrc":"19156:194:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19187:1:16","nodeType":"YulTypedName","src":"19187:1:16","type":""},{"name":"y","nativeSrc":"19190:1:16","nodeType":"YulTypedName","src":"19190:1:16","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"19196:4:16","nodeType":"YulTypedName","src":"19196:4:16","type":""}],"src":"19156:194:16"},{"body":{"nativeSrc":"19427:88:16","nodeType":"YulBlock","src":"19427:88:16","statements":[{"nativeSrc":"19437:22:16","nodeType":"YulAssignment","src":"19437:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"19452:6:16","nodeType":"YulIdentifier","src":"19452:6:16"}],"functionName":{"name":"mload","nativeSrc":"19446:5:16","nodeType":"YulIdentifier","src":"19446:5:16"},"nativeSrc":"19446:13:16","nodeType":"YulFunctionCall","src":"19446:13:16"},"variableNames":[{"name":"value","nativeSrc":"19437:5:16","nodeType":"YulIdentifier","src":"19437:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19503:5:16","nodeType":"YulIdentifier","src":"19503:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"19468:34:16","nodeType":"YulIdentifier","src":"19468:34:16"},"nativeSrc":"19468:41:16","nodeType":"YulFunctionCall","src":"19468:41:16"},"nativeSrc":"19468:41:16","nodeType":"YulExpressionStatement","src":"19468:41:16"}]},"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"19356:159:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19405:6:16","nodeType":"YulTypedName","src":"19405:6:16","type":""},{"name":"end","nativeSrc":"19413:3:16","nodeType":"YulTypedName","src":"19413:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19421:5:16","nodeType":"YulTypedName","src":"19421:5:16","type":""}],"src":"19356:159:16"},{"body":{"nativeSrc":"19640:560:16","nodeType":"YulBlock","src":"19640:560:16","statements":[{"body":{"nativeSrc":"19686:83:16","nodeType":"YulBlock","src":"19686:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19688:77:16","nodeType":"YulIdentifier","src":"19688:77:16"},"nativeSrc":"19688:79:16","nodeType":"YulFunctionCall","src":"19688:79:16"},"nativeSrc":"19688:79:16","nodeType":"YulExpressionStatement","src":"19688:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19661:7:16","nodeType":"YulIdentifier","src":"19661:7:16"},{"name":"headStart","nativeSrc":"19670:9:16","nodeType":"YulIdentifier","src":"19670:9:16"}],"functionName":{"name":"sub","nativeSrc":"19657:3:16","nodeType":"YulIdentifier","src":"19657:3:16"},"nativeSrc":"19657:23:16","nodeType":"YulFunctionCall","src":"19657:23:16"},{"kind":"number","nativeSrc":"19682:2:16","nodeType":"YulLiteral","src":"19682:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"19653:3:16","nodeType":"YulIdentifier","src":"19653:3:16"},"nativeSrc":"19653:32:16","nodeType":"YulFunctionCall","src":"19653:32:16"},"nativeSrc":"19650:119:16","nodeType":"YulIf","src":"19650:119:16"},{"nativeSrc":"19779:128:16","nodeType":"YulBlock","src":"19779:128:16","statements":[{"nativeSrc":"19794:15:16","nodeType":"YulVariableDeclaration","src":"19794:15:16","value":{"kind":"number","nativeSrc":"19808:1:16","nodeType":"YulLiteral","src":"19808:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19798:6:16","nodeType":"YulTypedName","src":"19798:6:16","type":""}]},{"nativeSrc":"19823:74:16","nodeType":"YulAssignment","src":"19823:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19869:9:16","nodeType":"YulIdentifier","src":"19869:9:16"},{"name":"offset","nativeSrc":"19880:6:16","nodeType":"YulIdentifier","src":"19880:6:16"}],"functionName":{"name":"add","nativeSrc":"19865:3:16","nodeType":"YulIdentifier","src":"19865:3:16"},"nativeSrc":"19865:22:16","nodeType":"YulFunctionCall","src":"19865:22:16"},{"name":"dataEnd","nativeSrc":"19889:7:16","nodeType":"YulIdentifier","src":"19889:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"19833:31:16","nodeType":"YulIdentifier","src":"19833:31:16"},"nativeSrc":"19833:64:16","nodeType":"YulFunctionCall","src":"19833:64:16"},"variableNames":[{"name":"value0","nativeSrc":"19823:6:16","nodeType":"YulIdentifier","src":"19823:6:16"}]}]},{"nativeSrc":"19917:137:16","nodeType":"YulBlock","src":"19917:137:16","statements":[{"nativeSrc":"19932:16:16","nodeType":"YulVariableDeclaration","src":"19932:16:16","value":{"kind":"number","nativeSrc":"19946:2:16","nodeType":"YulLiteral","src":"19946:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19936:6:16","nodeType":"YulTypedName","src":"19936:6:16","type":""}]},{"nativeSrc":"19962:82:16","nodeType":"YulAssignment","src":"19962:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20016:9:16","nodeType":"YulIdentifier","src":"20016:9:16"},{"name":"offset","nativeSrc":"20027:6:16","nodeType":"YulIdentifier","src":"20027:6:16"}],"functionName":{"name":"add","nativeSrc":"20012:3:16","nodeType":"YulIdentifier","src":"20012:3:16"},"nativeSrc":"20012:22:16","nodeType":"YulFunctionCall","src":"20012:22:16"},{"name":"dataEnd","nativeSrc":"20036:7:16","nodeType":"YulIdentifier","src":"20036:7:16"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"19972:39:16","nodeType":"YulIdentifier","src":"19972:39:16"},"nativeSrc":"19972:72:16","nodeType":"YulFunctionCall","src":"19972:72:16"},"variableNames":[{"name":"value1","nativeSrc":"19962:6:16","nodeType":"YulIdentifier","src":"19962:6:16"}]}]},{"nativeSrc":"20064:129:16","nodeType":"YulBlock","src":"20064:129:16","statements":[{"nativeSrc":"20079:16:16","nodeType":"YulVariableDeclaration","src":"20079:16:16","value":{"kind":"number","nativeSrc":"20093:2:16","nodeType":"YulLiteral","src":"20093:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"20083:6:16","nodeType":"YulTypedName","src":"20083:6:16","type":""}]},{"nativeSrc":"20109:74:16","nodeType":"YulAssignment","src":"20109:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20155:9:16","nodeType":"YulIdentifier","src":"20155:9:16"},{"name":"offset","nativeSrc":"20166:6:16","nodeType":"YulIdentifier","src":"20166:6:16"}],"functionName":{"name":"add","nativeSrc":"20151:3:16","nodeType":"YulIdentifier","src":"20151:3:16"},"nativeSrc":"20151:22:16","nodeType":"YulFunctionCall","src":"20151:22:16"},{"name":"dataEnd","nativeSrc":"20175:7:16","nodeType":"YulIdentifier","src":"20175:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20119:31:16","nodeType":"YulIdentifier","src":"20119:31:16"},"nativeSrc":"20119:64:16","nodeType":"YulFunctionCall","src":"20119:64:16"},"variableNames":[{"name":"value2","nativeSrc":"20109:6:16","nodeType":"YulIdentifier","src":"20109:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory","nativeSrc":"19521:679:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19594:9:16","nodeType":"YulTypedName","src":"19594:9:16","type":""},{"name":"dataEnd","nativeSrc":"19605:7:16","nodeType":"YulTypedName","src":"19605:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19617:6:16","nodeType":"YulTypedName","src":"19617:6:16","type":""},{"name":"value1","nativeSrc":"19625:6:16","nodeType":"YulTypedName","src":"19625:6:16","type":""},{"name":"value2","nativeSrc":"19633:6:16","nodeType":"YulTypedName","src":"19633:6:16","type":""}],"src":"19521:679:16"},{"body":{"nativeSrc":"20234:152:16","nodeType":"YulBlock","src":"20234:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20251:1:16","nodeType":"YulLiteral","src":"20251:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"20254:77:16","nodeType":"YulLiteral","src":"20254:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20244:6:16","nodeType":"YulIdentifier","src":"20244:6:16"},"nativeSrc":"20244:88:16","nodeType":"YulFunctionCall","src":"20244:88:16"},"nativeSrc":"20244:88:16","nodeType":"YulExpressionStatement","src":"20244:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20348:1:16","nodeType":"YulLiteral","src":"20348:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"20351:4:16","nodeType":"YulLiteral","src":"20351:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"20341:6:16","nodeType":"YulIdentifier","src":"20341:6:16"},"nativeSrc":"20341:15:16","nodeType":"YulFunctionCall","src":"20341:15:16"},"nativeSrc":"20341:15:16","nodeType":"YulExpressionStatement","src":"20341:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20372:1:16","nodeType":"YulLiteral","src":"20372:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"20375:4:16","nodeType":"YulLiteral","src":"20375:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20365:6:16","nodeType":"YulIdentifier","src":"20365:6:16"},"nativeSrc":"20365:15:16","nodeType":"YulFunctionCall","src":"20365:15:16"},"nativeSrc":"20365:15:16","nodeType":"YulExpressionStatement","src":"20365:15:16"}]},"name":"panic_error_0x21","nativeSrc":"20206:180:16","nodeType":"YulFunctionDefinition","src":"20206:180:16"},{"body":{"nativeSrc":"20546:288:16","nodeType":"YulBlock","src":"20546:288:16","statements":[{"nativeSrc":"20556:26:16","nodeType":"YulAssignment","src":"20556:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"20568:9:16","nodeType":"YulIdentifier","src":"20568:9:16"},{"kind":"number","nativeSrc":"20579:2:16","nodeType":"YulLiteral","src":"20579:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20564:3:16","nodeType":"YulIdentifier","src":"20564:3:16"},"nativeSrc":"20564:18:16","nodeType":"YulFunctionCall","src":"20564:18:16"},"variableNames":[{"name":"tail","nativeSrc":"20556:4:16","nodeType":"YulIdentifier","src":"20556:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20636:6:16","nodeType":"YulIdentifier","src":"20636:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"20649:9:16","nodeType":"YulIdentifier","src":"20649:9:16"},{"kind":"number","nativeSrc":"20660:1:16","nodeType":"YulLiteral","src":"20660:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20645:3:16","nodeType":"YulIdentifier","src":"20645:3:16"},"nativeSrc":"20645:17:16","nodeType":"YulFunctionCall","src":"20645:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20592:43:16","nodeType":"YulIdentifier","src":"20592:43:16"},"nativeSrc":"20592:71:16","nodeType":"YulFunctionCall","src":"20592:71:16"},"nativeSrc":"20592:71:16","nodeType":"YulExpressionStatement","src":"20592:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20717:6:16","nodeType":"YulIdentifier","src":"20717:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"20730:9:16","nodeType":"YulIdentifier","src":"20730:9:16"},{"kind":"number","nativeSrc":"20741:2:16","nodeType":"YulLiteral","src":"20741:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20726:3:16","nodeType":"YulIdentifier","src":"20726:3:16"},"nativeSrc":"20726:18:16","nodeType":"YulFunctionCall","src":"20726:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20673:43:16","nodeType":"YulIdentifier","src":"20673:43:16"},"nativeSrc":"20673:72:16","nodeType":"YulFunctionCall","src":"20673:72:16"},"nativeSrc":"20673:72:16","nodeType":"YulExpressionStatement","src":"20673:72:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20799:6:16","nodeType":"YulIdentifier","src":"20799:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"20812:9:16","nodeType":"YulIdentifier","src":"20812:9:16"},{"kind":"number","nativeSrc":"20823:2:16","nodeType":"YulLiteral","src":"20823:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20808:3:16","nodeType":"YulIdentifier","src":"20808:3:16"},"nativeSrc":"20808:18:16","nodeType":"YulFunctionCall","src":"20808:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20755:43:16","nodeType":"YulIdentifier","src":"20755:43:16"},"nativeSrc":"20755:72:16","nodeType":"YulFunctionCall","src":"20755:72:16"},"nativeSrc":"20755:72:16","nodeType":"YulExpressionStatement","src":"20755:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"20392:442:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20502:9:16","nodeType":"YulTypedName","src":"20502:9:16","type":""},{"name":"value2","nativeSrc":"20514:6:16","nodeType":"YulTypedName","src":"20514:6:16","type":""},{"name":"value1","nativeSrc":"20522:6:16","nodeType":"YulTypedName","src":"20522:6:16","type":""},{"name":"value0","nativeSrc":"20530:6:16","nodeType":"YulTypedName","src":"20530:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20541:4:16","nodeType":"YulTypedName","src":"20541:4:16","type":""}],"src":"20392:442:16"},{"body":{"nativeSrc":"20905:53:16","nodeType":"YulBlock","src":"20905:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20922:3:16","nodeType":"YulIdentifier","src":"20922:3:16"},{"arguments":[{"name":"value","nativeSrc":"20945:5:16","nodeType":"YulIdentifier","src":"20945:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"20927:17:16","nodeType":"YulIdentifier","src":"20927:17:16"},"nativeSrc":"20927:24:16","nodeType":"YulFunctionCall","src":"20927:24:16"}],"functionName":{"name":"mstore","nativeSrc":"20915:6:16","nodeType":"YulIdentifier","src":"20915:6:16"},"nativeSrc":"20915:37:16","nodeType":"YulFunctionCall","src":"20915:37:16"},"nativeSrc":"20915:37:16","nodeType":"YulExpressionStatement","src":"20915:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20840:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20893:5:16","nodeType":"YulTypedName","src":"20893:5:16","type":""},{"name":"pos","nativeSrc":"20900:3:16","nodeType":"YulTypedName","src":"20900:3:16","type":""}],"src":"20840:118:16"},{"body":{"nativeSrc":"21108:275:16","nodeType":"YulBlock","src":"21108:275:16","statements":[{"nativeSrc":"21118:26:16","nodeType":"YulAssignment","src":"21118:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"21130:9:16","nodeType":"YulIdentifier","src":"21130:9:16"},{"kind":"number","nativeSrc":"21141:2:16","nodeType":"YulLiteral","src":"21141:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21126:3:16","nodeType":"YulIdentifier","src":"21126:3:16"},"nativeSrc":"21126:18:16","nodeType":"YulFunctionCall","src":"21126:18:16"},"variableNames":[{"name":"tail","nativeSrc":"21118:4:16","nodeType":"YulIdentifier","src":"21118:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21198:6:16","nodeType":"YulIdentifier","src":"21198:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"21211:9:16","nodeType":"YulIdentifier","src":"21211:9:16"},{"kind":"number","nativeSrc":"21222:1:16","nodeType":"YulLiteral","src":"21222:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21207:3:16","nodeType":"YulIdentifier","src":"21207:3:16"},"nativeSrc":"21207:17:16","nodeType":"YulFunctionCall","src":"21207:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21154:43:16","nodeType":"YulIdentifier","src":"21154:43:16"},"nativeSrc":"21154:71:16","nodeType":"YulFunctionCall","src":"21154:71:16"},"nativeSrc":"21154:71:16","nodeType":"YulExpressionStatement","src":"21154:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21246:9:16","nodeType":"YulIdentifier","src":"21246:9:16"},{"kind":"number","nativeSrc":"21257:2:16","nodeType":"YulLiteral","src":"21257:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21242:3:16","nodeType":"YulIdentifier","src":"21242:3:16"},"nativeSrc":"21242:18:16","nodeType":"YulFunctionCall","src":"21242:18:16"},{"arguments":[{"name":"tail","nativeSrc":"21266:4:16","nodeType":"YulIdentifier","src":"21266:4:16"},{"name":"headStart","nativeSrc":"21272:9:16","nodeType":"YulIdentifier","src":"21272:9:16"}],"functionName":{"name":"sub","nativeSrc":"21262:3:16","nodeType":"YulIdentifier","src":"21262:3:16"},"nativeSrc":"21262:20:16","nodeType":"YulFunctionCall","src":"21262:20:16"}],"functionName":{"name":"mstore","nativeSrc":"21235:6:16","nodeType":"YulIdentifier","src":"21235:6:16"},"nativeSrc":"21235:48:16","nodeType":"YulFunctionCall","src":"21235:48:16"},"nativeSrc":"21235:48:16","nodeType":"YulExpressionStatement","src":"21235:48:16"},{"nativeSrc":"21292:84:16","nodeType":"YulAssignment","src":"21292:84:16","value":{"arguments":[{"name":"value1","nativeSrc":"21362:6:16","nodeType":"YulIdentifier","src":"21362:6:16"},{"name":"tail","nativeSrc":"21371:4:16","nodeType":"YulIdentifier","src":"21371:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"21300:61:16","nodeType":"YulIdentifier","src":"21300:61:16"},"nativeSrc":"21300:76:16","nodeType":"YulFunctionCall","src":"21300:76:16"},"variableNames":[{"name":"tail","nativeSrc":"21292:4:16","nodeType":"YulIdentifier","src":"21292:4:16"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"20964:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21072:9:16","nodeType":"YulTypedName","src":"21072:9:16","type":""},{"name":"value1","nativeSrc":"21084:6:16","nodeType":"YulTypedName","src":"21084:6:16","type":""},{"name":"value0","nativeSrc":"21092:6:16","nodeType":"YulTypedName","src":"21092:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21103:4:16","nodeType":"YulTypedName","src":"21103:4:16","type":""}],"src":"20964:419:16"},{"body":{"nativeSrc":"21497:278:16","nodeType":"YulBlock","src":"21497:278:16","statements":[{"nativeSrc":"21507:52:16","nodeType":"YulVariableDeclaration","src":"21507:52:16","value":{"arguments":[{"name":"value","nativeSrc":"21553:5:16","nodeType":"YulIdentifier","src":"21553:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21521:31:16","nodeType":"YulIdentifier","src":"21521:31:16"},"nativeSrc":"21521:38:16","nodeType":"YulFunctionCall","src":"21521:38:16"},"variables":[{"name":"length","nativeSrc":"21511:6:16","nodeType":"YulTypedName","src":"21511:6:16","type":""}]},{"nativeSrc":"21568:95:16","nodeType":"YulAssignment","src":"21568:95:16","value":{"arguments":[{"name":"pos","nativeSrc":"21651:3:16","nodeType":"YulIdentifier","src":"21651:3:16"},{"name":"length","nativeSrc":"21656:6:16","nodeType":"YulIdentifier","src":"21656:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21575:75:16","nodeType":"YulIdentifier","src":"21575:75:16"},"nativeSrc":"21575:88:16","nodeType":"YulFunctionCall","src":"21575:88:16"},"variableNames":[{"name":"pos","nativeSrc":"21568:3:16","nodeType":"YulIdentifier","src":"21568:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21711:5:16","nodeType":"YulIdentifier","src":"21711:5:16"},{"kind":"number","nativeSrc":"21718:4:16","nodeType":"YulLiteral","src":"21718:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21707:3:16","nodeType":"YulIdentifier","src":"21707:3:16"},"nativeSrc":"21707:16:16","nodeType":"YulFunctionCall","src":"21707:16:16"},{"name":"pos","nativeSrc":"21725:3:16","nodeType":"YulIdentifier","src":"21725:3:16"},{"name":"length","nativeSrc":"21730:6:16","nodeType":"YulIdentifier","src":"21730:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21672:34:16","nodeType":"YulIdentifier","src":"21672:34:16"},"nativeSrc":"21672:65:16","nodeType":"YulFunctionCall","src":"21672:65:16"},"nativeSrc":"21672:65:16","nodeType":"YulExpressionStatement","src":"21672:65:16"},{"nativeSrc":"21746:23:16","nodeType":"YulAssignment","src":"21746:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"21757:3:16","nodeType":"YulIdentifier","src":"21757:3:16"},{"name":"length","nativeSrc":"21762:6:16","nodeType":"YulIdentifier","src":"21762:6:16"}],"functionName":{"name":"add","nativeSrc":"21753:3:16","nodeType":"YulIdentifier","src":"21753:3:16"},"nativeSrc":"21753:16:16","nodeType":"YulFunctionCall","src":"21753:16:16"},"variableNames":[{"name":"end","nativeSrc":"21746:3:16","nodeType":"YulIdentifier","src":"21746:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21389:386:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21478:5:16","nodeType":"YulTypedName","src":"21478:5:16","type":""},{"name":"pos","nativeSrc":"21485:3:16","nodeType":"YulTypedName","src":"21485:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21493:3:16","nodeType":"YulTypedName","src":"21493:3:16","type":""}],"src":"21389:386:16"},{"body":{"nativeSrc":"21915:137:16","nodeType":"YulBlock","src":"21915:137:16","statements":[{"nativeSrc":"21926:100:16","nodeType":"YulAssignment","src":"21926:100:16","value":{"arguments":[{"name":"value0","nativeSrc":"22013:6:16","nodeType":"YulIdentifier","src":"22013:6:16"},{"name":"pos","nativeSrc":"22022:3:16","nodeType":"YulIdentifier","src":"22022:3:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21933:79:16","nodeType":"YulIdentifier","src":"21933:79:16"},"nativeSrc":"21933:93:16","nodeType":"YulFunctionCall","src":"21933:93:16"},"variableNames":[{"name":"pos","nativeSrc":"21926:3:16","nodeType":"YulIdentifier","src":"21926:3:16"}]},{"nativeSrc":"22036:10:16","nodeType":"YulAssignment","src":"22036:10:16","value":{"name":"pos","nativeSrc":"22043:3:16","nodeType":"YulIdentifier","src":"22043:3:16"},"variableNames":[{"name":"end","nativeSrc":"22036:3:16","nodeType":"YulIdentifier","src":"22036:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"21781:271:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21894:3:16","nodeType":"YulTypedName","src":"21894:3:16","type":""},{"name":"value0","nativeSrc":"21900:6:16","nodeType":"YulTypedName","src":"21900:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21911:3:16","nodeType":"YulTypedName","src":"21911:3:16","type":""}],"src":"21781:271:16"},{"body":{"nativeSrc":"22121:80:16","nodeType":"YulBlock","src":"22121:80:16","statements":[{"nativeSrc":"22131:22:16","nodeType":"YulAssignment","src":"22131:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"22146:6:16","nodeType":"YulIdentifier","src":"22146:6:16"}],"functionName":{"name":"mload","nativeSrc":"22140:5:16","nodeType":"YulIdentifier","src":"22140:5:16"},"nativeSrc":"22140:13:16","nodeType":"YulFunctionCall","src":"22140:13:16"},"variableNames":[{"name":"value","nativeSrc":"22131:5:16","nodeType":"YulIdentifier","src":"22131:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22189:5:16","nodeType":"YulIdentifier","src":"22189:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"22162:26:16","nodeType":"YulIdentifier","src":"22162:26:16"},"nativeSrc":"22162:33:16","nodeType":"YulFunctionCall","src":"22162:33:16"},"nativeSrc":"22162:33:16","nodeType":"YulExpressionStatement","src":"22162:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"22058:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22099:6:16","nodeType":"YulTypedName","src":"22099:6:16","type":""},{"name":"end","nativeSrc":"22107:3:16","nodeType":"YulTypedName","src":"22107:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22115:5:16","nodeType":"YulTypedName","src":"22115:5:16","type":""}],"src":"22058:143:16"},{"body":{"nativeSrc":"22284:274:16","nodeType":"YulBlock","src":"22284:274:16","statements":[{"body":{"nativeSrc":"22330:83:16","nodeType":"YulBlock","src":"22330:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22332:77:16","nodeType":"YulIdentifier","src":"22332:77:16"},"nativeSrc":"22332:79:16","nodeType":"YulFunctionCall","src":"22332:79:16"},"nativeSrc":"22332:79:16","nodeType":"YulExpressionStatement","src":"22332:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22305:7:16","nodeType":"YulIdentifier","src":"22305:7:16"},{"name":"headStart","nativeSrc":"22314:9:16","nodeType":"YulIdentifier","src":"22314:9:16"}],"functionName":{"name":"sub","nativeSrc":"22301:3:16","nodeType":"YulIdentifier","src":"22301:3:16"},"nativeSrc":"22301:23:16","nodeType":"YulFunctionCall","src":"22301:23:16"},{"kind":"number","nativeSrc":"22326:2:16","nodeType":"YulLiteral","src":"22326:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"22297:3:16","nodeType":"YulIdentifier","src":"22297:3:16"},"nativeSrc":"22297:32:16","nodeType":"YulFunctionCall","src":"22297:32:16"},"nativeSrc":"22294:119:16","nodeType":"YulIf","src":"22294:119:16"},{"nativeSrc":"22423:128:16","nodeType":"YulBlock","src":"22423:128:16","statements":[{"nativeSrc":"22438:15:16","nodeType":"YulVariableDeclaration","src":"22438:15:16","value":{"kind":"number","nativeSrc":"22452:1:16","nodeType":"YulLiteral","src":"22452:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"22442:6:16","nodeType":"YulTypedName","src":"22442:6:16","type":""}]},{"nativeSrc":"22467:74:16","nodeType":"YulAssignment","src":"22467:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22513:9:16","nodeType":"YulIdentifier","src":"22513:9:16"},{"name":"offset","nativeSrc":"22524:6:16","nodeType":"YulIdentifier","src":"22524:6:16"}],"functionName":{"name":"add","nativeSrc":"22509:3:16","nodeType":"YulIdentifier","src":"22509:3:16"},"nativeSrc":"22509:22:16","nodeType":"YulFunctionCall","src":"22509:22:16"},{"name":"dataEnd","nativeSrc":"22533:7:16","nodeType":"YulIdentifier","src":"22533:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"22477:31:16","nodeType":"YulIdentifier","src":"22477:31:16"},"nativeSrc":"22477:64:16","nodeType":"YulFunctionCall","src":"22477:64:16"},"variableNames":[{"name":"value0","nativeSrc":"22467:6:16","nodeType":"YulIdentifier","src":"22467:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"22207:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22254:9:16","nodeType":"YulTypedName","src":"22254:9:16","type":""},{"name":"dataEnd","nativeSrc":"22265:7:16","nodeType":"YulTypedName","src":"22265:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22277:6:16","nodeType":"YulTypedName","src":"22277:6:16","type":""}],"src":"22207:351:16"},{"body":{"nativeSrc":"22607:43:16","nodeType":"YulBlock","src":"22607:43:16","statements":[{"nativeSrc":"22617:27:16","nodeType":"YulAssignment","src":"22617:27:16","value":{"arguments":[{"name":"value","nativeSrc":"22632:5:16","nodeType":"YulIdentifier","src":"22632:5:16"},{"kind":"number","nativeSrc":"22639:4:16","nodeType":"YulLiteral","src":"22639:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"22628:3:16","nodeType":"YulIdentifier","src":"22628:3:16"},"nativeSrc":"22628:16:16","nodeType":"YulFunctionCall","src":"22628:16:16"},"variableNames":[{"name":"cleaned","nativeSrc":"22617:7:16","nodeType":"YulIdentifier","src":"22617:7:16"}]}]},"name":"cleanup_t_uint8","nativeSrc":"22564:86:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22589:5:16","nodeType":"YulTypedName","src":"22589:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"22599:7:16","nodeType":"YulTypedName","src":"22599:7:16","type":""}],"src":"22564:86:16"},{"body":{"nativeSrc":"22717:51:16","nodeType":"YulBlock","src":"22717:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22734:3:16","nodeType":"YulIdentifier","src":"22734:3:16"},{"arguments":[{"name":"value","nativeSrc":"22755:5:16","nodeType":"YulIdentifier","src":"22755:5:16"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"22739:15:16","nodeType":"YulIdentifier","src":"22739:15:16"},"nativeSrc":"22739:22:16","nodeType":"YulFunctionCall","src":"22739:22:16"}],"functionName":{"name":"mstore","nativeSrc":"22727:6:16","nodeType":"YulIdentifier","src":"22727:6:16"},"nativeSrc":"22727:35:16","nodeType":"YulFunctionCall","src":"22727:35:16"},"nativeSrc":"22727:35:16","nodeType":"YulExpressionStatement","src":"22727:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"22656:112:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22705:5:16","nodeType":"YulTypedName","src":"22705:5:16","type":""},{"name":"pos","nativeSrc":"22712:3:16","nodeType":"YulTypedName","src":"22712:3:16","type":""}],"src":"22656:112:16"},{"body":{"nativeSrc":"22952:367:16","nodeType":"YulBlock","src":"22952:367:16","statements":[{"nativeSrc":"22962:27:16","nodeType":"YulAssignment","src":"22962:27:16","value":{"arguments":[{"name":"headStart","nativeSrc":"22974:9:16","nodeType":"YulIdentifier","src":"22974:9:16"},{"kind":"number","nativeSrc":"22985:3:16","nodeType":"YulLiteral","src":"22985:3:16","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22970:3:16","nodeType":"YulIdentifier","src":"22970:3:16"},"nativeSrc":"22970:19:16","nodeType":"YulFunctionCall","src":"22970:19:16"},"variableNames":[{"name":"tail","nativeSrc":"22962:4:16","nodeType":"YulIdentifier","src":"22962:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23043:6:16","nodeType":"YulIdentifier","src":"23043:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23056:9:16","nodeType":"YulIdentifier","src":"23056:9:16"},{"kind":"number","nativeSrc":"23067:1:16","nodeType":"YulLiteral","src":"23067:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23052:3:16","nodeType":"YulIdentifier","src":"23052:3:16"},"nativeSrc":"23052:17:16","nodeType":"YulFunctionCall","src":"23052:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22999:43:16","nodeType":"YulIdentifier","src":"22999:43:16"},"nativeSrc":"22999:71:16","nodeType":"YulFunctionCall","src":"22999:71:16"},"nativeSrc":"22999:71:16","nodeType":"YulExpressionStatement","src":"22999:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23120:6:16","nodeType":"YulIdentifier","src":"23120:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23133:9:16","nodeType":"YulIdentifier","src":"23133:9:16"},{"kind":"number","nativeSrc":"23144:2:16","nodeType":"YulLiteral","src":"23144:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23129:3:16","nodeType":"YulIdentifier","src":"23129:3:16"},"nativeSrc":"23129:18:16","nodeType":"YulFunctionCall","src":"23129:18:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"23080:39:16","nodeType":"YulIdentifier","src":"23080:39:16"},"nativeSrc":"23080:68:16","nodeType":"YulFunctionCall","src":"23080:68:16"},"nativeSrc":"23080:68:16","nodeType":"YulExpressionStatement","src":"23080:68:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23202:6:16","nodeType":"YulIdentifier","src":"23202:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23215:9:16","nodeType":"YulIdentifier","src":"23215:9:16"},{"kind":"number","nativeSrc":"23226:2:16","nodeType":"YulLiteral","src":"23226:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23211:3:16","nodeType":"YulIdentifier","src":"23211:3:16"},"nativeSrc":"23211:18:16","nodeType":"YulFunctionCall","src":"23211:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23158:43:16","nodeType":"YulIdentifier","src":"23158:43:16"},"nativeSrc":"23158:72:16","nodeType":"YulFunctionCall","src":"23158:72:16"},"nativeSrc":"23158:72:16","nodeType":"YulExpressionStatement","src":"23158:72:16"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"23284:6:16","nodeType":"YulIdentifier","src":"23284:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23297:9:16","nodeType":"YulIdentifier","src":"23297:9:16"},{"kind":"number","nativeSrc":"23308:2:16","nodeType":"YulLiteral","src":"23308:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23293:3:16","nodeType":"YulIdentifier","src":"23293:3:16"},"nativeSrc":"23293:18:16","nodeType":"YulFunctionCall","src":"23293:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23240:43:16","nodeType":"YulIdentifier","src":"23240:43:16"},"nativeSrc":"23240:72:16","nodeType":"YulFunctionCall","src":"23240:72:16"},"nativeSrc":"23240:72:16","nodeType":"YulExpressionStatement","src":"23240:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"22774:545:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22900:9:16","nodeType":"YulTypedName","src":"22900:9:16","type":""},{"name":"value3","nativeSrc":"22912:6:16","nodeType":"YulTypedName","src":"22912:6:16","type":""},{"name":"value2","nativeSrc":"22920:6:16","nodeType":"YulTypedName","src":"22920:6:16","type":""},{"name":"value1","nativeSrc":"22928:6:16","nodeType":"YulTypedName","src":"22928:6:16","type":""},{"name":"value0","nativeSrc":"22936:6:16","nodeType":"YulTypedName","src":"22936:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22947:4:16","nodeType":"YulTypedName","src":"22947:4:16","type":""}],"src":"22774:545:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$181(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$181(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$181(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$181(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$181(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$181(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80633b3b687c116100595780633b3b687c146101525780638da5cb5b1461016e5780639e5d4c4914610199578063affed0e0146101c9578063b553fe1e146101f457610091565b806301ffc9a7146100935780631626ba7e146100d057806318a70da91461010d57806324bd11e21461012957610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b591906111bc565b610221565b6040516100c79190611204565b60405180910390f35b3480156100dc57600080fd5b506100f760048036038101906100f2919061139b565b6102f3565b6040516101049190611406565b60405180910390f35b610127600480360381019061012291906114b5565b61034b565b005b34801561013557600080fd5b50610150600480360381019061014b9190611571565b61050f565b005b61016c6004803603810190610167919061167a565b61072e565b005b34801561017a57600080fd5b506101836109d8565b604051610190919061170a565b60405180910390f35b6101b360048036038101906101ae919061177b565b610ae9565b6040516101c0919061186e565b60405180910390f35b3480156101d557600080fd5b506101de610c92565b6040516101eb919061189f565b60405180910390f35b34801561020057600080fd5b50610209610c97565b604051610218939291906118ba565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0955a9ec000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000806103086103016109d8565b8585610ced565b9050801561032057631626ba7e60e01b915050610345565b7f656e6400000000000000000000000000000000000000000000000000000000009150505b92915050565b610353610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103b9576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c16109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610425576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8047101561045f576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161048590611922565b60006040518083038185875af1925050503d80600081146104c2576040519150601f19603f3d011682016040523d82523d6000602084013e6104c7565b606091505b5050905080610502576040517f73c632db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061050b610de2565b5050565b610517610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361057d576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105856109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e9576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610624919061170a565b602060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061194c565b9050828110156106a1576040517fc82bbf7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016106dc929190611979565b6020604051808303816000875af11580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906119ce565b5050610729610de2565b505050565b610736610d9c565b61073e6109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a2576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084849050905060008383905090508082146107eb576040517f116c1ed200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b828110156109c757848482818110610809576108086119fb565b5b90506020020135471015610849576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16878783818110610874576108736119fb565b5b90506020020160208101906108899190611a2a565b73ffffffffffffffffffffffffffffffffffffffff16036108d6576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008787838181106108eb576108ea6119fb565b5b90506020020160208101906109009190611a2a565b73ffffffffffffffffffffffffffffffffffffffff16868684818110610929576109286119fb565b5b9050602002013560405161093c90611922565b60006040518083038185875af1925050503d8060008114610979576040519150601f19603f3d011682016040523d82523d6000602084013e61097e565b606091505b50509050806109b9576040517f73c632db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080806001019150506107ee565b5050506109d2610de2565b50505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663b553fe1e6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190611a6c565b925092509250468314610a665760009350505050610ae6565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610a9f919061189f565b602060405180830381865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae09190611abf565b93505050505b90565b6060610af3610d9c565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b59576040517fc269116200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b616109d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc5576040517fffb4324a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83471015610bff576040517f3ecc75d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff16858585604051610c29929190611b11565b60006040518083038185875af1925050503d8060008114610c66576040519150601f19603f3d011682016040523d82523d6000602084013e610c6b565b606091505b50809350819250505080610c8157815160208301fd5b50610c8a610de2565b949350505050565b600090565b6000806000803073ffffffffffffffffffffffffffffffffffffffff163b9050610cce30606083610cc89190611b59565b83610dec565b806020019051810190610ce19190611ba2565b93509350935050909192565b6000808473ffffffffffffffffffffffffffffffffffffffff163b03610d8757600080610d1a8585610ed1565b509150915060006003811115610d3357610d32611bf5565b5b816003811115610d4657610d45611bf5565b5b148015610d7e57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92505050610d95565b610d92848484610f2d565b90505b9392505050565b600260005403610dd8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b60606000610df985611051565b905060008103610e1b5760405180602001604052806000815250915050610eca565b80841115610e3b5760405180602001604052806000815250915050610eca565b83831015610e84578084846040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600401610e7b93929190611c24565b60405180910390fd5b60008484039050600085830390506000828210610ea15782610ea3565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b60008060006041845103610f165760008060006020870151925060408701519150606087015160001a9050610f088882858561105c565b955095509550505050610f26565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610f5c929190611c6a565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610fae9190611ccb565b600060405180830381855afa9150503d8060008114610fe9576040519150601f19603f3d011682016040523d82523d6000602084013e610fee565b606091505b509150915081801561100257506020815110155b80156110465750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906110449190611cf7565b145b925050509392505050565b6000813b9050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561109c576000600385925092509250611146565b6000600188888888604051600081526020016040526040516110c19493929190611d40565b6020604051602081039080840390855afa1580156110e3573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361113757600060016000801b93509350935050611146565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61119981611164565b81146111a457600080fd5b50565b6000813590506111b681611190565b92915050565b6000602082840312156111d2576111d161115a565b5b60006111e0848285016111a7565b91505092915050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b6000819050919050565b6112328161121f565b811461123d57600080fd5b50565b60008135905061124f81611229565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112a88261125f565b810181811067ffffffffffffffff821117156112c7576112c6611270565b5b80604052505050565b60006112da611150565b90506112e6828261129f565b919050565b600067ffffffffffffffff82111561130657611305611270565b5b61130f8261125f565b9050602081019050919050565b82818337600083830152505050565b600061133e611339846112eb565b6112d0565b90508281526020810184848401111561135a5761135961125a565b5b61136584828561131c565b509392505050565b600082601f83011261138257611381611255565b5b813561139284826020860161132b565b91505092915050565b600080604083850312156113b2576113b161115a565b5b60006113c085828601611240565b925050602083013567ffffffffffffffff8111156113e1576113e061115f565b5b6113ed8582860161136d565b9150509250929050565b61140081611164565b82525050565b600060208201905061141b60008301846113f7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144c82611421565b9050919050565b61145c81611441565b811461146757600080fd5b50565b60008135905061147981611453565b92915050565b6000819050919050565b6114928161147f565b811461149d57600080fd5b50565b6000813590506114af81611489565b92915050565b600080604083850312156114cc576114cb61115a565b5b60006114da8582860161146a565b92505060206114eb858286016114a0565b9150509250929050565b600061150082611421565b9050919050565b611510816114f5565b811461151b57600080fd5b50565b60008135905061152d81611507565b92915050565b600061153e826114f5565b9050919050565b61154e81611533565b811461155957600080fd5b50565b60008135905061156b81611545565b92915050565b60008060006060848603121561158a5761158961115a565b5b60006115988682870161151e565b93505060206115a9868287016114a0565b92505060406115ba8682870161155c565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126115e4576115e3611255565b5b8235905067ffffffffffffffff811115611601576116006115c4565b5b60208301915083602082028301111561161d5761161c6115c9565b5b9250929050565b60008083601f84011261163a57611639611255565b5b8235905067ffffffffffffffff811115611657576116566115c4565b5b602083019150836020820283011115611673576116726115c9565b5b9250929050565b600080600080604085870312156116945761169361115a565b5b600085013567ffffffffffffffff8111156116b2576116b161115f565b5b6116be878288016115ce565b9450945050602085013567ffffffffffffffff8111156116e1576116e061115f565b5b6116ed87828801611624565b925092505092959194509250565b611704816114f5565b82525050565b600060208201905061171f60008301846116fb565b92915050565b60008083601f84011261173b5761173a611255565b5b8235905067ffffffffffffffff811115611758576117576115c4565b5b602083019150836001820283011115611774576117736115c9565b5b9250929050565b600080600080606085870312156117955761179461115a565b5b60006117a38782880161151e565b94505060206117b4878288016114a0565b935050604085013567ffffffffffffffff8111156117d5576117d461115f565b5b6117e187828801611725565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b8381101561182957808201518184015260208101905061180e565b60008484015250505050565b6000611840826117ef565b61184a81856117fa565b935061185a81856020860161180b565b6118638161125f565b840191505092915050565b600060208201905081810360008301526118888184611835565b905092915050565b6118998161147f565b82525050565b60006020820190506118b46000830184611890565b92915050565b60006060820190506118cf6000830186611890565b6118dc60208301856116fb565b6118e96040830184611890565b949350505050565b600081905092915050565b50565b600061190c6000836118f1565b9150611917826118fc565b600082019050919050565b600061192d826118ff565b9150819050919050565b60008151905061194681611489565b92915050565b6000602082840312156119625761196161115a565b5b600061197084828501611937565b91505092915050565b600060408201905061198e60008301856116fb565b61199b6020830184611890565b9392505050565b6119ab816111e9565b81146119b657600080fd5b50565b6000815190506119c8816119a2565b92915050565b6000602082840312156119e4576119e361115a565b5b60006119f2848285016119b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611a4057611a3f61115a565b5b6000611a4e8482850161151e565b91505092915050565b600081519050611a6681611507565b92915050565b600080600060608486031215611a8557611a8461115a565b5b6000611a9386828701611937565b9350506020611aa486828701611a57565b9250506040611ab586828701611937565b9150509250925092565b600060208284031215611ad557611ad461115a565b5b6000611ae384828501611a57565b91505092915050565b6000611af883856118f1565b9350611b0583858461131c565b82840190509392505050565b6000611b1e828486611aec565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b648261147f565b9150611b6f8361147f565b9250828203905081811115611b8757611b86611b2a565b5b92915050565b600081519050611b9c81611453565b92915050565b600080600060608486031215611bbb57611bba61115a565b5b6000611bc986828701611937565b9350506020611bda86828701611b8d565b9250506040611beb86828701611937565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000606082019050611c396000830186611890565b611c466020830185611890565b611c536040830184611890565b949350505050565b611c648161121f565b82525050565b6000604082019050611c7f6000830185611c5b565b8181036020830152611c918184611835565b90509392505050565b6000611ca5826117ef565b611caf81856118f1565b9350611cbf81856020860161180b565b80840191505092915050565b6000611cd78284611c9a565b915081905092915050565b600081519050611cf181611229565b92915050565b600060208284031215611d0d57611d0c61115a565b5b6000611d1b84828501611ce2565b91505092915050565b600060ff82169050919050565b611d3a81611d24565b82525050565b6000608082019050611d556000830187611c5b565b611d626020830186611d31565b611d6f6040830185611c5b565b611d7c6060830184611c5b565b9594505050505056fea2646970667358221220e3f86cad4d11789bec9de6435741998b0cd4841efdda4786a2782a600c18263064736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B3B687C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x3B3B687C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x1F4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x18A70DA9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24BD11E2 EQ PUSH2 0x129 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0x955A9EC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x308 PUSH2 0x301 PUSH2 0x9D8 JUMP JUMPDEST DUP6 DUP6 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x320 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH32 0x656E640000000000000000000000000000000000000000000000000000000000 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C1 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x485 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C632DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH2 0xDE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x517 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x585 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC82BBF7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP3 SWAP2 SWAP1 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST POP POP PUSH2 0x729 PUSH2 0xDE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x736 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x73E PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP DUP1 DUP3 EQ PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x116C1ED200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SELFBALANCE LT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x8EB JUMPI PUSH2 0x8EA PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x928 PUSH2 0x19FB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x93C SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x97E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C632DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7EE JUMP JUMPDEST POP POP POP PUSH2 0x9D2 PUSH2 0xDE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4D SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0xA66 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAE6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAF3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC269116200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFFB4324A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 SELFBALANCE LT ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3ECC75D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP3 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0xC81 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP PUSH2 0xC8A PUSH2 0xDE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0xCCE ADDRESS PUSH1 0x60 DUP4 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST DUP4 PUSH2 0xDEC JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xD87 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD1A DUP6 DUP6 PUSH2 0xED1 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD7E JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD92 DUP5 DUP5 DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF9 DUP6 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xECA JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xECA JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xE84 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xEA1 JUMPI DUP3 PUSH2 0xEA3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xF08 DUP9 DUP3 DUP6 DUP6 PUSH2 0x105C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF5C SWAP3 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1002 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1046 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x109C JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1146 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1199 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP2 EQ PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B6 DUP2 PUSH2 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E0 DUP5 DUP3 DUP6 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1232 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP2 EQ PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x124F DUP2 PUSH2 0x1229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12A8 DUP3 PUSH2 0x125F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP PUSH2 0x12E6 DUP3 DUP3 PUSH2 0x129F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST PUSH2 0x130F DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E PUSH2 0x1339 DUP5 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH2 0x1365 DUP5 DUP3 DUP6 PUSH2 0x131C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1392 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1240 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x13ED DUP6 DUP3 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144C DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x1441 JUMP JUMPDEST DUP2 EQ PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AF DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DA DUP6 DUP3 DUP7 ADD PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14EB DUP6 DUP3 DUP7 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1500 DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP3 PUSH2 0x14F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x1533 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156B DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP7 DUP3 DUP8 ADD PUSH2 0x151E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15A9 DUP7 DUP3 DUP8 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15BA DUP7 DUP3 DUP8 ADD PUSH2 0x155C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x161D JUMPI PUSH2 0x161C PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x16BE DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x14F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x1255 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0x15C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1773 PUSH2 0x15C9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP8 DUP3 DUP9 ADD PUSH2 0x151E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17B4 DUP8 DUP3 DUP9 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x115F JUMP JUMPDEST JUMPDEST PUSH2 0x17E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1725 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1829 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x184A DUP2 DUP6 PUSH2 0x17FA JUMP JUMPDEST SWAP4 POP PUSH2 0x185A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0x125F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1899 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18CF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x18DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x18E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190C PUSH1 0x0 DUP4 PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1917 DUP3 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192D DUP3 PUSH2 0x18FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1946 DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1970 DUP5 DUP3 DUP6 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x198E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x199B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C8 DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F2 DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A40 JUMPI PUSH2 0x1A3F PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4E DUP5 DUP3 DUP6 ADD PUSH2 0x151E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A66 DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A93 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AA4 DUP7 DUP3 DUP8 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF8 DUP4 DUP6 PUSH2 0x18F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B05 DUP4 DUP6 DUP5 PUSH2 0x131C JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP3 DUP5 DUP7 PUSH2 0x1AEC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B64 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6F DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x1B2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B9C DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBB JUMPI PUSH2 0x1BBA PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDA DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEB DUP7 DUP3 DUP8 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C39 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1C46 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1C53 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C64 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C7F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C91 DUP2 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA5 DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1CAF DUP2 DUP6 PUSH2 0x18F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD7 DUP3 DUP5 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF1 DUP2 PUSH2 0x1229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x115A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP5 DUP3 DUP6 ADD PUSH2 0x1CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3A DUP2 PUSH2 0x1D24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D55 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xF8 PUSH13 0xAD4D11789BEC9DE6435741998B 0xC 0xD4 DUP5 0x1E REVERT 0xDA SELFBALANCE DUP7 LOG2 PUSH25 0x2A600C18263064736F6C634300081800330000000000000000 ","sourceMap":"2333:4690:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6346:207;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6561:318;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4551:606;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5242:554;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3613:930;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6083:255;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:698;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6887:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5804:271;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6346:207;6414:4;6454:25;6439:40;;;:11;:40;;;;:105;;;;6511:33;6496:48;;;:11;:48;;;;6439:105;6431:114;;6346:207;;;:::o;6561:318::-;6649:17;6679:12;6694:63;6732:7;:5;:7::i;:::-;6741:4;6747:9;6694:36;:63::i;:::-;6679:78;;6772:7;6768:81;;;6803:34;;;6796:41;;;;;6768:81;6859:12;;;;6561:318;;;;;:::o;4551:606::-;2500:21:9;:19;:21::i;:::-;4680:1:13::1;4666:16;;:2;:16;;::::0;4662:104:::1;;4706:48;;;;;;;;;;;;;;4662:104;4804:7;:5;:7::i;:::-;4790:21;;:10;:21;;;4786:87;;4835:26;;;;;;;;;;;;;;4786:87;4913:6;4889:21;:30;4885:113;;;4943:43;;;;;;;;;;;;;;4885:113;5011:12;5029:2;:7;;5044:6;5029:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5010:45;;;5071:7;5066:84;;5102:36;;;;;;;;;;;;;;5066:84;4651:506;2542:20:9::0;:18;:20::i;:::-;4551:606:13;;:::o;5242:554::-;2500:21:9;:19;:21::i;:::-;5374:1:13::1;5360:16;;:2;:16;;::::0;5356:104:::1;;5400:48;;;;;;;;;;;;;;5356:104;5498:7;:5;:7::i;:::-;5484:21;;:10;:21;;;5480:87;;5529:26;;;;;;;;;;;;;;5480:87;5579:15;5597:13;:23;;;5629:4;5597:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5579:56;;5662:6;5652:7;:16;5648:94;;;5692:38;;;;;;;;;;;;;;5648:94;5754:13;:22;;;5777:2;5781:6;5754:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5345:451;2542:20:9::0;:18;:20::i;:::-;5242:554:13;;;:::o;3613:930::-;2500:21:9;:19;:21::i;:::-;3749:7:13::1;:5;:7::i;:::-;3735:21;;:10;:21;;;3731:87;;3780:26;;;;;;;;;;;;;;3731:87;3830:19;3852:2;;:9;;3830:31;;3872:24;3899:7;;:14;;3872:41;;3945:16;3930:11;:31;3926:107;;3985:36;;;;;;;;;;;;;;3926:107;4050:9;4045:491;4069:11;4065:1;:15;4045:491;;;4130:7;;4138:1;4130:10;;;;;;;:::i;:::-;;;;;;;;4106:21;:34;4102:121;;;4164:43;;;;;;;;;;;;;;4102:121;4260:1;4243:19;;:2;;4246:1;4243:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:19;;::::0;4239:111:::1;;4286:48;;;;;;;;;;;;;;4239:111;4367:12;4385:2;;4388:1;4385:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:10;;4403:7;;4411:1;4403:10;;;;;;;:::i;:::-;;;;;;;;4385:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:52;;;4438:7;4433:92;;4473:36;;;;;;;;;;;;;;4433:92;4087:449;4082:3;;;;;;;4045:491;;;;3720:823;;2542:20:9::0;:18;:20::i;:::-;3613:930:13;;;;:::o;6083:255::-;6121:7;6142:15;6159:21;6182:15;6201:4;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6141:74;;;;;;6241:13;6230:7;:24;6226:47;;6271:1;6256:17;;;;;;;6226:47;6299:13;6291:30;;;6322:7;6291:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6284:46;;;;;6083:255;;:::o;2907:698::-;3014:19;2500:21:9;:19;:21::i;:::-;3065:1:13::1;3051:16;;:2;:16;;::::0;3047:104:::1;;3091:48;;;;;;;;;;;;;;3047:104;3189:7;:5;:7::i;:::-;3175:21;;:10;:21;;;3171:87;;3220:26;;;;;;;;;;;;;;3171:87;3298:5;3274:21;:29;3270:112;;;3327:43;;;;;;;;;;;;;;3270:112;3394:12;3437:2;:7;;3452:5;3459:4;;3437:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3417:47;;;;;;;;3482:7;3477:121;;3564:6;3558:13;3553:2;3545:6;3541:15;3534:38;3477:121;3036:569;2542:20:9::0;:18;:20::i;:::-;2907:698:13;;;;;;:::o;6887:60::-;6936:7;6887:60;:::o;5804:271::-;5845:15;5862:21;5885:15;5913:14;5938:4;5930:25;;;5913:42;;5984:53;6008:4;6024;6015:6;:13;;;;:::i;:::-;6030:6;5984:15;:53::i;:::-;5973:94;;;;;;;;;;;;:::i;:::-;5966:101;;;;;;;5804:271;;;:::o;1041:429:11:-;1147:4;1189:1;1167:6;:18;;;:23;1163:301;;1207:17;1226:22;1254:33;1271:4;1277:9;1254:16;:33::i;:::-;1206:81;;;;;1315:26;1308:33;;;;;;;;:::i;:::-;;:3;:33;;;;;;;;:::i;:::-;;;:56;;;;;1358:6;1345:19;;:9;:19;;;1308:56;1301:63;;;;;;1163:301;1402:51;1429:6;1437:4;1443:9;1402:26;:51::i;:::-;1395:58;;1041:429;;;;;;:::o;2575:307:9:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;2888:208::-;1857:1;3068:7;:21;;;;2888:208::o;1794:946:14:-;1878:18;1904:13;1920:15;1929:5;1920:8;:15::i;:::-;1904:31;;1954:1;1945:5;:10;1941:32;;1964:9;;;;;;;;;;;;1957:16;;;;;1941:32;1993:5;1984:6;:14;1980:36;;;2007:9;;;;;;;;;;;;2000:16;;;;;1980:36;2033:6;2026:4;:13;2022:65;;;2067:5;2074:6;2082:4;2048:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;2022:65;2113:15;2138:6;2131:4;:13;2113:31;;2152:15;2178:6;2170:5;:14;2152:32;;2193:12;2218:7;2208;:17;:37;;2238:7;2208:37;;;2228:7;2208:37;2193:52;;2414:4;2408:11;2399:20;;2534:4;2530:9;2523:4;2516;2510;2506:15;2502:26;2498:42;2491:5;2487:54;2481:4;2474:68;2599:4;2592:5;2585:19;2717:4;2709:6;2702:4;2695:5;2691:16;2684:5;2672:50;2263:467;;;1898:842;1794:946;;;;;;:::o;2129:778:10:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;1877:458:11:-;2020:4;2037:12;2051:19;2074:6;:17;;2148:4;2154:9;2105:60;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:139;;;;2193:7;:42;;;;;2233:2;2216:6;:13;:19;;2193:42;:134;;;;;2292:34;;;2284:43;;;2262:6;2251:29;;;;;;;;;;;;:::i;:::-;:76;2193:134;2185:143;;;;1877:458;;;;;:::o;1262:119:14:-;1318:12;1369:5;1357:18;1349:26;;1262:119;;;:::o;5203:1551:10:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:117::-;1983:1;1980;1973:12;1997:117;2106:1;2103;2096:12;2120:102;2161:6;2212:2;2208:7;2203:2;2196:5;2192:14;2188:28;2178:38;;2120:102;;;:::o;2228:180::-;2276:77;2273:1;2266:88;2373:4;2370:1;2363:15;2397:4;2394:1;2387:15;2414:281;2497:27;2519:4;2497:27;:::i;:::-;2489:6;2485:40;2627:6;2615:10;2612:22;2591:18;2579:10;2576:34;2573:62;2570:88;;;2638:18;;:::i;:::-;2570:88;2678:10;2674:2;2667:22;2457:238;2414:281;;:::o;2701:129::-;2735:6;2762:20;;:::i;:::-;2752:30;;2791:33;2819:4;2811:6;2791:33;:::i;:::-;2701:129;;;:::o;2836:307::-;2897:4;2987:18;2979:6;2976:30;2973:56;;;3009:18;;:::i;:::-;2973:56;3047:29;3069:6;3047:29;:::i;:::-;3039:37;;3131:4;3125;3121:15;3113:23;;2836:307;;;:::o;3149:146::-;3246:6;3241:3;3236;3223:30;3287:1;3278:6;3273:3;3269:16;3262:27;3149:146;;;:::o;3301:423::-;3378:5;3403:65;3419:48;3460:6;3419:48;:::i;:::-;3403:65;:::i;:::-;3394:74;;3491:6;3484:5;3477:21;3529:4;3522:5;3518:16;3567:3;3558:6;3553:3;3549:16;3546:25;3543:112;;;3574:79;;:::i;:::-;3543:112;3664:54;3711:6;3706:3;3701;3664:54;:::i;:::-;3384:340;3301:423;;;;;:::o;3743:338::-;3798:5;3847:3;3840:4;3832:6;3828:17;3824:27;3814:122;;3855:79;;:::i;:::-;3814:122;3972:6;3959:20;3997:78;4071:3;4063:6;4056:4;4048:6;4044:17;3997:78;:::i;:::-;3988:87;;3804:277;3743:338;;;;:::o;4087:652::-;4164:6;4172;4221:2;4209:9;4200:7;4196:23;4192:32;4189:119;;;4227:79;;:::i;:::-;4189:119;4347:1;4372:53;4417:7;4408:6;4397:9;4393:22;4372:53;:::i;:::-;4362:63;;4318:117;4502:2;4491:9;4487:18;4474:32;4533:18;4525:6;4522:30;4519:117;;;4555:79;;:::i;:::-;4519:117;4660:62;4714:7;4705:6;4694:9;4690:22;4660:62;:::i;:::-;4650:72;;4445:287;4087:652;;;;;:::o;4745:115::-;4830:23;4847:5;4830:23;:::i;:::-;4825:3;4818:36;4745:115;;:::o;4866:218::-;4957:4;4995:2;4984:9;4980:18;4972:26;;5008:69;5074:1;5063:9;5059:17;5050:6;5008:69;:::i;:::-;4866:218;;;;:::o;5090:126::-;5127:7;5167:42;5160:5;5156:54;5145:65;;5090:126;;;:::o;5222:104::-;5267:7;5296:24;5314:5;5296:24;:::i;:::-;5285:35;;5222:104;;;:::o;5332:138::-;5413:32;5439:5;5413:32;:::i;:::-;5406:5;5403:43;5393:71;;5460:1;5457;5450:12;5393:71;5332:138;:::o;5476:155::-;5530:5;5568:6;5555:20;5546:29;;5584:41;5619:5;5584:41;:::i;:::-;5476:155;;;;:::o;5637:77::-;5674:7;5703:5;5692:16;;5637:77;;;:::o;5720:122::-;5793:24;5811:5;5793:24;:::i;:::-;5786:5;5783:35;5773:63;;5832:1;5829;5822:12;5773:63;5720:122;:::o;5848:139::-;5894:5;5932:6;5919:20;5910:29;;5948:33;5975:5;5948:33;:::i;:::-;5848:139;;;;:::o;5993:490::-;6069:6;6077;6126:2;6114:9;6105:7;6101:23;6097:32;6094:119;;;6132:79;;:::i;:::-;6094:119;6252:1;6277:61;6330:7;6321:6;6310:9;6306:22;6277:61;:::i;:::-;6267:71;;6223:125;6387:2;6413:53;6458:7;6449:6;6438:9;6434:22;6413:53;:::i;:::-;6403:63;;6358:118;5993:490;;;;;:::o;6489:96::-;6526:7;6555:24;6573:5;6555:24;:::i;:::-;6544:35;;6489:96;;;:::o;6591:122::-;6664:24;6682:5;6664:24;:::i;:::-;6657:5;6654:35;6644:63;;6703:1;6700;6693:12;6644:63;6591:122;:::o;6719:139::-;6765:5;6803:6;6790:20;6781:29;;6819:33;6846:5;6819:33;:::i;:::-;6719:139;;;;:::o;6864:110::-;6915:7;6944:24;6962:5;6944:24;:::i;:::-;6933:35;;6864:110;;;:::o;6980:150::-;7067:38;7099:5;7067:38;:::i;:::-;7060:5;7057:49;7047:77;;7120:1;7117;7110:12;7047:77;6980:150;:::o;7136:167::-;7196:5;7234:6;7221:20;7212:29;;7250:47;7291:5;7250:47;:::i;:::-;7136:167;;;;:::o;7309:647::-;7400:6;7408;7416;7465:2;7453:9;7444:7;7440:23;7436:32;7433:119;;;7471:79;;:::i;:::-;7433:119;7591:1;7616:53;7661:7;7652:6;7641:9;7637:22;7616:53;:::i;:::-;7606:63;;7562:117;7718:2;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7689:118;7846:2;7872:67;7931:7;7922:6;7911:9;7907:22;7872:67;:::i;:::-;7862:77;;7817:132;7309:647;;;;;:::o;7962:117::-;8071:1;8068;8061:12;8085:117;8194:1;8191;8184:12;8225:568;8298:8;8308:6;8358:3;8351:4;8343:6;8339:17;8335:27;8325:122;;8366:79;;:::i;:::-;8325:122;8479:6;8466:20;8456:30;;8509:18;8501:6;8498:30;8495:117;;;8531:79;;:::i;:::-;8495:117;8645:4;8637:6;8633:17;8621:29;;8699:3;8691:4;8683:6;8679:17;8669:8;8665:32;8662:41;8659:128;;;8706:79;;:::i;:::-;8659:128;8225:568;;;;;:::o;8816:::-;8889:8;8899:6;8949:3;8942:4;8934:6;8930:17;8926:27;8916:122;;8957:79;;:::i;:::-;8916:122;9070:6;9057:20;9047:30;;9100:18;9092:6;9089:30;9086:117;;;9122:79;;:::i;:::-;9086:117;9236:4;9228:6;9224:17;9212:29;;9290:3;9282:4;9274:6;9270:17;9260:8;9256:32;9253:41;9250:128;;;9297:79;;:::i;:::-;9250:128;8816:568;;;;;:::o;9390:934::-;9512:6;9520;9528;9536;9585:2;9573:9;9564:7;9560:23;9556:32;9553:119;;;9591:79;;:::i;:::-;9553:119;9739:1;9728:9;9724:17;9711:31;9769:18;9761:6;9758:30;9755:117;;;9791:79;;:::i;:::-;9755:117;9904:80;9976:7;9967:6;9956:9;9952:22;9904:80;:::i;:::-;9886:98;;;;9682:312;10061:2;10050:9;10046:18;10033:32;10092:18;10084:6;10081:30;10078:117;;;10114:79;;:::i;:::-;10078:117;10227:80;10299:7;10290:6;10279:9;10275:22;10227:80;:::i;:::-;10209:98;;;;10004:313;9390:934;;;;;;;:::o;10330:118::-;10417:24;10435:5;10417:24;:::i;:::-;10412:3;10405:37;10330:118;;:::o;10454:222::-;10547:4;10585:2;10574:9;10570:18;10562:26;;10598:71;10666:1;10655:9;10651:17;10642:6;10598:71;:::i;:::-;10454:222;;;;:::o;10695:552::-;10752:8;10762:6;10812:3;10805:4;10797:6;10793:17;10789:27;10779:122;;10820:79;;:::i;:::-;10779:122;10933:6;10920:20;10910:30;;10963:18;10955:6;10952:30;10949:117;;;10985:79;;:::i;:::-;10949:117;11099:4;11091:6;11087:17;11075:29;;11153:3;11145:4;11137:6;11133:17;11123:8;11119:32;11116:41;11113:128;;;11160:79;;:::i;:::-;11113:128;10695:552;;;;;:::o;11253:817::-;11341:6;11349;11357;11365;11414:2;11402:9;11393:7;11389:23;11385:32;11382:119;;;11420:79;;:::i;:::-;11382:119;11540:1;11565:53;11610:7;11601:6;11590:9;11586:22;11565:53;:::i;:::-;11555:63;;11511:117;11667:2;11693:53;11738:7;11729:6;11718:9;11714:22;11693:53;:::i;:::-;11683:63;;11638:118;11823:2;11812:9;11808:18;11795:32;11854:18;11846:6;11843:30;11840:117;;;11876:79;;:::i;:::-;11840:117;11989:64;12045:7;12036:6;12025:9;12021:22;11989:64;:::i;:::-;11971:82;;;;11766:297;11253:817;;;;;;;:::o;12076:98::-;12127:6;12161:5;12155:12;12145:22;;12076:98;;;:::o;12180:168::-;12263:11;12297:6;12292:3;12285:19;12337:4;12332:3;12328:14;12313:29;;12180:168;;;;:::o;12354:246::-;12435:1;12445:113;12459:6;12456:1;12453:13;12445:113;;;12544:1;12539:3;12535:11;12529:18;12525:1;12520:3;12516:11;12509:39;12481:2;12478:1;12474:10;12469:15;;12445:113;;;12592:1;12583:6;12578:3;12574:16;12567:27;12416:184;12354:246;;;:::o;12606:373::-;12692:3;12720:38;12752:5;12720:38;:::i;:::-;12774:70;12837:6;12832:3;12774:70;:::i;:::-;12767:77;;12853:65;12911:6;12906:3;12899:4;12892:5;12888:16;12853:65;:::i;:::-;12943:29;12965:6;12943:29;:::i;:::-;12938:3;12934:39;12927:46;;12696:283;12606:373;;;;:::o;12985:309::-;13096:4;13134:2;13123:9;13119:18;13111:26;;13183:9;13177:4;13173:20;13169:1;13158:9;13154:17;13147:47;13211:76;13282:4;13273:6;13211:76;:::i;:::-;13203:84;;12985:309;;;;:::o;13300:118::-;13387:24;13405:5;13387:24;:::i;:::-;13382:3;13375:37;13300:118;;:::o;13424:222::-;13517:4;13555:2;13544:9;13540:18;13532:26;;13568:71;13636:1;13625:9;13621:17;13612:6;13568:71;:::i;:::-;13424:222;;;;:::o;13652:442::-;13801:4;13839:2;13828:9;13824:18;13816:26;;13852:71;13920:1;13909:9;13905:17;13896:6;13852:71;:::i;:::-;13933:72;14001:2;13990:9;13986:18;13977:6;13933:72;:::i;:::-;14015;14083:2;14072:9;14068:18;14059:6;14015:72;:::i;:::-;13652:442;;;;;;:::o;14100:147::-;14201:11;14238:3;14223:18;;14100:147;;;;:::o;14253:114::-;;:::o;14373:398::-;14532:3;14553:83;14634:1;14629:3;14553:83;:::i;:::-;14546:90;;14645:93;14734:3;14645:93;:::i;:::-;14763:1;14758:3;14754:11;14747:18;;14373:398;;;:::o;14777:379::-;14961:3;14983:147;15126:3;14983:147;:::i;:::-;14976:154;;15147:3;15140:10;;14777:379;;;:::o;15162:143::-;15219:5;15250:6;15244:13;15235:22;;15266:33;15293:5;15266:33;:::i;:::-;15162:143;;;;:::o;15311:351::-;15381:6;15430:2;15418:9;15409:7;15405:23;15401:32;15398:119;;;15436:79;;:::i;:::-;15398:119;15556:1;15581:64;15637:7;15628:6;15617:9;15613:22;15581:64;:::i;:::-;15571:74;;15527:128;15311:351;;;;:::o;15668:332::-;15789:4;15827:2;15816:9;15812:18;15804:26;;15840:71;15908:1;15897:9;15893:17;15884:6;15840:71;:::i;:::-;15921:72;15989:2;15978:9;15974:18;15965:6;15921:72;:::i;:::-;15668:332;;;;;:::o;16006:116::-;16076:21;16091:5;16076:21;:::i;:::-;16069:5;16066:32;16056:60;;16112:1;16109;16102:12;16056:60;16006:116;:::o;16128:137::-;16182:5;16213:6;16207:13;16198:22;;16229:30;16253:5;16229:30;:::i;:::-;16128:137;;;;:::o;16271:345::-;16338:6;16387:2;16375:9;16366:7;16362:23;16358:32;16355:119;;;16393:79;;:::i;:::-;16355:119;16513:1;16538:61;16591:7;16582:6;16571:9;16567:22;16538:61;:::i;:::-;16528:71;;16484:125;16271:345;;;;:::o;16622:180::-;16670:77;16667:1;16660:88;16767:4;16764:1;16757:15;16791:4;16788:1;16781:15;16808:329;16867:6;16916:2;16904:9;16895:7;16891:23;16887:32;16884:119;;;16922:79;;:::i;:::-;16884:119;17042:1;17067:53;17112:7;17103:6;17092:9;17088:22;17067:53;:::i;:::-;17057:63;;17013:117;16808:329;;;;:::o;17143:143::-;17200:5;17231:6;17225:13;17216:22;;17247:33;17274:5;17247:33;:::i;:::-;17143:143;;;;:::o;17292:663::-;17380:6;17388;17396;17445:2;17433:9;17424:7;17420:23;17416:32;17413:119;;;17451:79;;:::i;:::-;17413:119;17571:1;17596:64;17652:7;17643:6;17632:9;17628:22;17596:64;:::i;:::-;17586:74;;17542:128;17709:2;17735:64;17791:7;17782:6;17771:9;17767:22;17735:64;:::i;:::-;17725:74;;17680:129;17848:2;17874:64;17930:7;17921:6;17910:9;17906:22;17874:64;:::i;:::-;17864:74;;17819:129;17292:663;;;;;:::o;17961:351::-;18031:6;18080:2;18068:9;18059:7;18055:23;18051:32;18048:119;;;18086:79;;:::i;:::-;18048:119;18206:1;18231:64;18287:7;18278:6;18267:9;18263:22;18231:64;:::i;:::-;18221:74;;18177:128;17961:351;;;;:::o;18340:327::-;18454:3;18475:88;18556:6;18551:3;18475:88;:::i;:::-;18468:95;;18573:56;18622:6;18617:3;18610:5;18573:56;:::i;:::-;18654:6;18649:3;18645:16;18638:23;;18340:327;;;;;:::o;18673:291::-;18813:3;18835:103;18934:3;18925:6;18917;18835:103;:::i;:::-;18828:110;;18955:3;18948:10;;18673:291;;;;;:::o;18970:180::-;19018:77;19015:1;19008:88;19115:4;19112:1;19105:15;19139:4;19136:1;19129:15;19156:194;19196:4;19216:20;19234:1;19216:20;:::i;:::-;19211:25;;19250:20;19268:1;19250:20;:::i;:::-;19245:25;;19294:1;19291;19287:9;19279:17;;19318:1;19312:4;19309:11;19306:37;;;19323:18;;:::i;:::-;19306:37;19156:194;;;;:::o;19356:159::-;19421:5;19452:6;19446:13;19437:22;;19468:41;19503:5;19468:41;:::i;:::-;19356:159;;;;:::o;19521:679::-;19617:6;19625;19633;19682:2;19670:9;19661:7;19657:23;19653:32;19650:119;;;19688:79;;:::i;:::-;19650:119;19808:1;19833:64;19889:7;19880:6;19869:9;19865:22;19833:64;:::i;:::-;19823:74;;19779:128;19946:2;19972:72;20036:7;20027:6;20016:9;20012:22;19972:72;:::i;:::-;19962:82;;19917:137;20093:2;20119:64;20175:7;20166:6;20155:9;20151:22;20119:64;:::i;:::-;20109:74;;20064:129;19521:679;;;;;:::o;20206:180::-;20254:77;20251:1;20244:88;20351:4;20348:1;20341:15;20375:4;20372:1;20365:15;20392:442;20541:4;20579:2;20568:9;20564:18;20556:26;;20592:71;20660:1;20649:9;20645:17;20636:6;20592:71;:::i;:::-;20673:72;20741:2;20730:9;20726:18;20717:6;20673:72;:::i;:::-;20755;20823:2;20812:9;20808:18;20799:6;20755:72;:::i;:::-;20392:442;;;;;;:::o;20840:118::-;20927:24;20945:5;20927:24;:::i;:::-;20922:3;20915:37;20840:118;;:::o;20964:419::-;21103:4;21141:2;21130:9;21126:18;21118:26;;21154:71;21222:1;21211:9;21207:17;21198:6;21154:71;:::i;:::-;21272:9;21266:4;21262:20;21257:2;21246:9;21242:18;21235:48;21300:76;21371:4;21362:6;21300:76;:::i;:::-;21292:84;;20964:419;;;;;:::o;21389:386::-;21493:3;21521:38;21553:5;21521:38;:::i;:::-;21575:88;21656:6;21651:3;21575:88;:::i;:::-;21568:95;;21672:65;21730:6;21725:3;21718:4;21711:5;21707:16;21672:65;:::i;:::-;21762:6;21757:3;21753:16;21746:23;;21497:278;21389:386;;;;:::o;21781:271::-;21911:3;21933:93;22022:3;22013:6;21933:93;:::i;:::-;21926:100;;22043:3;22036:10;;21781:271;;;;:::o;22058:143::-;22115:5;22146:6;22140:13;22131:22;;22162:33;22189:5;22162:33;:::i;:::-;22058:143;;;;:::o;22207:351::-;22277:6;22326:2;22314:9;22305:7;22301:23;22297:32;22294:119;;;22332:79;;:::i;:::-;22294:119;22452:1;22477:64;22533:7;22524:6;22513:9;22509:22;22477:64;:::i;:::-;22467:74;;22423:128;22207:351;;;;:::o;22564:86::-;22599:7;22639:4;22632:5;22628:16;22617:27;;22564:86;;;:::o;22656:112::-;22739:22;22755:5;22739:22;:::i;:::-;22734:3;22727:35;22656:112;;:::o;22774:545::-;22947:4;22985:3;22974:9;22970:19;22962:27;;22999:71;23067:1;23056:9;23052:17;23043:6;22999:71;:::i;:::-;23080:68;23144:2;23133:9;23129:18;23120:6;23080:68;:::i;:::-;23158:72;23226:2;23215:9;23211:18;23202:6;23158:72;:::i;:::-;23240;23308:2;23297:9;23293:18;23284:6;23240:72;:::i;:::-;22774:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1522200","executionCost":"23703","totalCost":"1545903"},"external":{"":"174","batchTransferEth(address[],uint256[])":"infinite","executeCall(address,uint256,bytes)":"infinite","isValidSignature(bytes32,bytes)":"infinite","nftInfo()":"infinite","nonce()":"395","owner()":"infinite","sendCustomErcTransfer(address,uint256,address)":"infinite","simpleEthTransferAccount(address,uint256)":"infinite","supportsInterface(bytes4)":"685"}},"methodIdentifiers":{"batchTransferEth(address[],uint256[])":"3b3b687c","executeCall(address,uint256,bytes)":"9e5d4c49","isValidSignature(bytes32,bytes)":"1626ba7e","nftInfo()":"b553fe1e","nonce()":"affed0e0","owner()":"8da5cb5b","sendCustomErcTransfer(address,uint256,address)":"24bd11e2","simpleEthTransferAccount(address,uint256)":"18a70da9","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC6551Account__ExternalCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6551Account__FailedDueToZeroAddressTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6551Account__IncorrectArraySize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6551Account__LowBalanceToTransferFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6551Account__LowERC20TokenBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6551Account__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"signValues\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"erc20contract\",\"type\":\"address\"}],\"name\":\"sendCustomErcTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"simpleEthTransferAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/N2D-ERC6551-Account.sol\":\"ERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/N2D-ERC6551-Account.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/*\\r\\nFollow/Subscribe Youtube, Github, IM, Tiktok\\r\\nfor more amazing content!!\\r\\n@Net2Dev\\r\\n\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2554\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u255a\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2554\\u255d\\r\\n\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591\\r\\n\\u2588\\u2588\\u2551\\u2591\\u255a\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\r\\nTHIS CONTRACT IS AVAILABLE FOR EDUCATIONAL \\r\\nPURPOSES ONLY. YOU ARE SOLELY REPONSIBLE \\r\\nFOR ITS USE. I AM NOT RESPONSIBLE FOR ANY\\r\\nOTHER USE. THIS IS TRAINING/EDUCATIONAL\\r\\nMATERIAL. ONLY USE IT IF YOU AGREE TO THE\\r\\nTERMS SPECIFIED ABOVE.\\r\\n*/\\r\\n\\r\\npragma solidity ^0.8.23;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC1271.sol\\\"; // signature validation standard\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\\\";\\r\\n// import \\\"https://github.com/net2devcrypto/ERC-6551-NFT-Wallets-Web3-Front-End-NextJS/blob/main/imports/IERC6551.sol\\\"; \\r\\n// import \\\"https://github.com/net2devcrypto/ERC-6551-NFT-Wallets-Web3-Front-End-NextJS/blob/main/imports/ERC6551Bytecode.sol\\\";\\r\\nimport \\\"../imports/IERC6551.sol\\\";\\r\\nimport \\\"../imports/ERC6551Bytecode.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\"; // reentrancy protection when external calls are made\\r\\n\\r\\ncontract ERC6551Account is IERC165, IERC1271, IERC6551Account, ReentrancyGuard {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    //////////////////////////////////////////\\r\\n    //////////////// ERRORS //////////////////\\r\\n    //////////////////////////////////////////\\r\\n    error ERC6551Account__NotOwner();\\r\\n    error ERC6551Account__ExternalCallFailed();\\r\\n    error ERC6551Account__LowBalanceToTransferFunds();\\r\\n    error ERC6551Account__LowERC20TokenBalance();\\r\\n    error ERC6551Account__FailedDueToZeroAddressTransfer();\\r\\n    error ERC6551Account__IncorrectArraySize();\\r\\n\\r\\n\\r\\n    function executeCall(address to,uint256 value, bytes calldata data) external payable nonReentrant returns (bytes memory result)  {\\r\\n        if (to == address(0)) {\\r\\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\\r\\n        }\\r\\n        \\r\\n        if (msg.sender != owner()) {\\r\\n            revert ERC6551Account__NotOwner();\\r\\n        }\\r\\n\\r\\n        if (address(this).balance < value) {\\r\\n            revert ERC6551Account__LowBalanceToTransferFunds();\\r\\n        }\\r\\n\\r\\n        bool success;\\r\\n        (success, result) = to.call{value: value}(data);\\r\\n\\r\\n        if (!success) {\\r\\n            assembly {\\r\\n                revert(add(result, 32), mload(result))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function batchTransferEth(address[] calldata to, uint256[] calldata amounts) external payable nonReentrant {\\r\\n        if (msg.sender != owner()) {\\r\\n            revert ERC6551Account__NotOwner();\\r\\n        }\\r\\n\\r\\n        uint256 toArraySize = to.length;\\r\\n        uint256 amountsArraySize = amounts.length;\\r\\n\\r\\n        if (toArraySize != amountsArraySize) {\\r\\n            revert ERC6551Account__IncorrectArraySize();\\r\\n        }\\r\\n\\r\\n        for (uint256 i = 0; i < toArraySize; i++) {\\r\\n            if (address(this).balance < amounts[i]) {\\r\\n            revert ERC6551Account__LowBalanceToTransferFunds();\\r\\n            }\\r\\n\\r\\n            if (to[i] == address(0)) {\\r\\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\\r\\n            }\\r\\n\\r\\n            (bool success, ) = to[i].call{value: amounts[i]}(\\\"\\\");\\r\\n            if (!success) {\\r\\n                revert ERC6551Account__ExternalCallFailed();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function simpleEthTransferAccount(address payable to, uint256 amount) external payable nonReentrant {\\r\\n        if (to == address(0)) {\\r\\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\\r\\n        }\\r\\n        \\r\\n        if (msg.sender != owner()) {\\r\\n            revert ERC6551Account__NotOwner();\\r\\n        }\\r\\n\\r\\n        if (address(this).balance < amount) {\\r\\n            revert ERC6551Account__LowBalanceToTransferFunds();\\r\\n        }\\r\\n\\r\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            revert ERC6551Account__ExternalCallFailed();\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    // added non renetrancy in case dealing with erc 1155 token standard \\r\\n    function sendCustomErcTransfer(address to, uint256 amount, IERC20 erc20contract) external nonReentrant {\\r\\n        if (to == address(0)) {\\r\\n            revert ERC6551Account__FailedDueToZeroAddressTransfer();\\r\\n        }\\r\\n        \\r\\n        if (msg.sender != owner()) {\\r\\n            revert ERC6551Account__NotOwner();\\r\\n        }\\r\\n\\r\\n        uint256 balance = erc20contract.balanceOf(address(this));\\r\\n\\r\\n        if (balance < amount) {\\r\\n            revert ERC6551Account__LowERC20TokenBalance();\\r\\n        }\\r\\n\\r\\n        erc20contract.transfer(to, amount);\\r\\n    }\\r\\n\\r\\n    function nftInfo()external view returns (uint256 chainId, address tokenContract, uint256 tokenId) {\\r\\n        uint256 length = address(this).code.length;\\r\\n        return abi.decode(Bytecode.codeAt(address(this), length - 0x60, length), (uint256, address, uint256));\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this.nftInfo();\\r\\n        if (chainId != block.chainid) return address(0);\\r\\n        return IERC721(tokenContract).ownerOf(tokenId);\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\\r\\n        return (interfaceId == type(IERC165).interfaceId ||\\r\\n            interfaceId == type(IERC6551Account).interfaceId);\\r\\n    }\\r\\n\\r\\n    function isValidSignature( bytes32 hash, bytes memory signature) external view returns (bytes4 signValues) {\\r\\n        bool isValid = SignatureChecker.isValidSignatureNow( owner(), hash, signature);\\r\\n        if (isValid) {\\r\\n            return IERC1271.isValidSignature.selector;\\r\\n        }\\r\\n        return \\\"end\\\";\\r\\n    }\\r\\n\\r\\n    function nonce() external view override returns (uint256) {}\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {}\\r\\n}\",\"keccak256\":\"0x48e6188e2a556d51dafaa3e2381b7c37a13a9c228006a695df4c297554c482e1\",\"license\":\"MIT\"},\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x0c749563652bb4a93d052282bbc7bc734aaaa623fa414e219d02b3a53e7f7218\",\"license\":\"MIT\"},\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0ba9df39409c4f11f77c81625e7b88b62c2b2dbeb60bd39e00535d2ad4ba117c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1001,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/ERC6551Bytecode.sol":{"Bytecode":{"abi":[{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001728f3ed9b1819c5e4271d9be742616985f4e49cbfb7cbb4c146b197c9455cd64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH19 0x8F3ED9B1819C5E4271D9BE742616985F4E49CB 0xFB PUSH29 0xBB4C146B197C9455CD64736F6C63430008180033000000000000000000 ","sourceMap":"59:2683:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001728f3ed9b1819c5e4271d9be742616985f4e49cbfb7cbb4c146b197c9455cd64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH19 0x8F3ED9B1819C5E4271D9BE742616985F4E49CB 0xFB PUSH29 0xBB4C146B197C9455CD64736F6C63430008180033000000000000000000 ","sourceMap":"59:2683:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"codeAt(address,uint256,uint256)":"infinite","codeSize(address)":"infinite","creationCodeFor(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/ERC6551Bytecode.sol\":\"Bytecode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x0c749563652bb4a93d052282bbc7bc734aaaa623fa414e219d02b3a53e7f7218\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/IERC6551.sol":{"IERC6551Account":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","nftInfo()":"b553fe1e","nonce()":"affed0e0","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0ba9df39409c4f11f77c81625e7b88b62c2b2dbeb60bd39e00535d2ad4ba117c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551AccountProxy":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0ba9df39409c4f11f77c81625e7b88b62c2b2dbeb60bd39e00535d2ad4ba117c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551Registry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"salt","type":"uint256"}],"name":"AccountCreated","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"seed","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"account(address,uint256,address,uint256,uint256)":"5e9bc536","createAccount(address,uint256,address,uint256,uint256)":"c1340f69"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0ba9df39409c4f11f77c81625e7b88b62c2b2dbeb60bd39e00535d2ad4ba117c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}