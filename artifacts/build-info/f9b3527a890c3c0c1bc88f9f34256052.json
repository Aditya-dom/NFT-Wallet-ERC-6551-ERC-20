{"id":"f9b3527a890c3c0c1bc88f9f34256052","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        if (signer.code.length == 0) {\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\n        } else {\n            return isValidERC1271SignatureNow(signer, hash, signature);\n        }\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC-1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/N2D-ERC6551-Account.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\nimport \"../imports/IERC6551.sol\";\r\nimport \"../imports/ERC6551Bytecode.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\ncontract ERC6551Account is IERC165, IERC1271, IERC6551Account, IERC721Receiver {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Add state variables\r\n    uint256 private _nonce;\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor() {\r\n        _supportedInterfaces[type(IERC165).interfaceId] = true;\r\n        _supportedInterfaces[type(IERC6551Account).interfaceId] = true;\r\n    }\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory result) {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n\r\n        _nonce++;\r\n\r\n        bool success;\r\n        (success, result) = to.call{value: value, gas: gasleft() - 2000}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function send(address payable to, uint256 amount) external payable {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n        require(address(this).balance >= amount, \"Insufficient funds\");\r\n\r\n        _nonce++;\r\n        to.transfer(amount);\r\n    }\r\n\r\n    function sendCustom(\r\n        address to,\r\n        uint256 amount,\r\n        IERC20 erc20contract\r\n    ) external {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n        require(to != address(0), \"Invalid target address\");\r\n\r\n        uint256 balance = erc20contract.balanceOf(address(this));\r\n        require(balance >= amount, \"Insufficient funds\");\r\n\r\n        _nonce++;\r\n        erc20contract.transfer(to, amount);\r\n    }\r\n\r\n    function nftInfo()\r\n        external\r\n        view\r\n        returns (uint256 chainId, address tokenContract, uint256 tokenId)\r\n    {\r\n        uint256 length = address(this).code.length;\r\n        return\r\n            abi.decode(\r\n                Bytecode.codeAt(address(this), length - 0x60, length),\r\n                (uint256, address, uint256)\r\n            );\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\r\n            .nftInfo();\r\n        if (chainId != block.chainid) return address(0);\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata\r\n    ) external pure override returns (bytes4) {\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n\r\n    function isValidSignature(\r\n        bytes32 hash,\r\n        bytes memory signature\r\n    ) external view returns (bytes4 magicValue) {\r\n        bool isValid = SignatureChecker.isValidSignatureNow(\r\n            owner(),\r\n            hash,\r\n            signature\r\n        );\r\n\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n\r\n        return bytes4(0);\r\n    }\r\n\r\n    function nonce() external view override returns (uint256) {\r\n        return _nonce;\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"},"imports/ERC6551Bytecode.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\nlibrary Bytecode {\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\n\n  /**\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\n    @param _code The returning value of the resulting `creationCode`\n    @return creationCode (constructor) for new contract\n  */\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\n    /*\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\n      0x01    0x80         0x80        DUP1                size size\n      0x02    0x60         0x600e      PUSH1 14            14 size size\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\n      0x04    0x39         0x39        CODECOPY            size\n      0x05    0x60         0x6000      PUSH1 00            0 size\n      0x06    0xf3         0xf3        RETURN\n      <CODE>\n    */\n\n    return abi.encodePacked(\n      hex\"63\",\n      uint32(_code.length),\n      hex\"80_60_0E_60_00_39_60_00_F3\",\n      _code\n    );\n  }\n\n  /**\n    @notice Returns the size of the code on a given address\n    @param _addr Address that may or may not contain code\n    @return size of the code on the given `_addr`\n  */\n  function codeSize(address _addr) internal view returns (uint256 size) {\n    assembly { size := extcodesize(_addr) }\n  }\n\n  /**\n    @notice Returns the code of a given address\n    @dev It will fail if `_end < _start`\n    @param _addr Address that may or may not contain code\n    @param _start number of bytes of code to skip on read\n    @param _end index before which to end extraction\n    @return oCode read from `_addr` deployed bytecode\n\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\n  */\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\n    uint256 csize = codeSize(_addr);\n    if (csize == 0) return bytes(\"\");\n\n    if (_start > csize) return bytes(\"\");\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \n\n    unchecked {\n      uint256 reqSize = _end - _start;\n      uint256 maxSize = csize - _start;\n\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\n\n      assembly {\n        // allocate output byte array - this could also be done without assembly\n        // by using o_code = new bytes(size)\n        oCode := mload(0x40)\n        // new \"memory end\" including padding\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n        // store length in memory\n        mstore(oCode, size)\n        // actually retrieve the code, this needs assembly\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\n      }\n    }\n  }\n}"},"imports/IERC6551.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IERC6551Registry {\n\n    event AccountCreated(\n        address account,\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    );\n\n    function createAccount(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 seed\n    ) external returns (address);\n\n    function account(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    ) external view returns (address);\n}\n\ninterface IERC6551AccountProxy {\n    function implementation() external view returns (address);\n}\n\ninterface IERC6551Account {\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\n\n    receive() external payable;\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    function nftInfo()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    function owner() external view returns (address);\n\n    function nonce() external view returns (uint256);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[13]},"id":14,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"133:160:0","text":" @dev Interface of the ERC-1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IERC1271","nameLocation":"304:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"319:220:0","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"553:16:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"hash","nameLocation":"578:4:0","nodeType":"VariableDeclaration","scope":12,"src":"570:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"570:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"signature","nameLocation":"597:9:0","nodeType":"VariableDeclaration","scope":12,"src":"584:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"584:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"569:38:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"magicValue","nameLocation":"638:10:0","nodeType":"VariableDeclaration","scope":12,"src":"631:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9,"name":"bytes4","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"630:19:0"},"scope":13,"src":"544:106:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":14,"src":"294:358:0","usedErrors":[],"usedEvents":[]}],"src":"107:546:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[95],"IERC165":[1476],"IERC20":[181]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":17,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":104,"src":"133:36:1","symbolAliases":[{"foreign":{"id":16,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":19,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":96,"sourceUnit":100,"src":"170:38:1","symbolAliases":[{"foreign":{"id":18,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":21,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"590:6:1"},"id":22,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":23,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"598:7:1"},"id":24,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":95,"linearizedBaseContracts":[95,1476,181],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":34,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":34,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":95,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":46,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":46,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":46,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":95,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":58,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":58,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":58,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":95,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":72,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":72,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":72,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":72,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":95,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":82,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":82,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":82,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":95,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":94,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":94,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":94,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":95,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":96,"src":"568:3885:1","usedErrors":[],"usedEvents":[115,124]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1476]},"id":100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":99,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":100,"sourceUnit":1477,"src":"132:59:2","symbolAliases":[{"foreign":{"id":98,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[181]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":101,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":182,"src":"131:49:3","symbolAliases":[{"foreign":{"id":102,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[181]},"id":182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":181,"linearizedBaseContracts":[181],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":115,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":115,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":115,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":115,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":124,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":124,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":124,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":124,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":130,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":181,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":138,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":138,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":181,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":148,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":148,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":148,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":148,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":145,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":181,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":158,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":158,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":181,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":168,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":168,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":181,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":180,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":180,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":180,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":181,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":182,"src":"204:2575:4","usedErrors":[],"usedEvents":[115,124]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[986],"IERC1363":[95],"IERC20":[181],"SafeERC20":[592]},"id":593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":182,"src":"141:37:5","symbolAliases":[{"foreign":{"id":184,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":96,"src":"179:58:5","symbolAliases":[{"foreign":{"id":186,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":987,"src":"238:51:5","symbolAliases":[{"foreign":{"id":188,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"246:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"291:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":592,"linearizedBaseContracts":[592],"name":"SafeERC20","nameLocation":"758:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"774:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":195,"name":"SafeERC20FailedOperation","nameLocation":"850:24:5","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"token","nameLocation":"883:5:5","nodeType":"VariableDeclaration","scope":195,"src":"875:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:5"},"src":"844:46:5"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"896:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":204,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:5","nodeType":"ErrorDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"spender","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":204,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:5","nodeType":"VariableDeclaration","scope":204,"src":"1028:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:5","nodeType":"VariableDeclaration","scope":204,"src":"1054:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:5"},"src":"972:109:5"},{"body":{"id":227,"nodeType":"Block","src":"1343:88:5","statements":[{"expression":{"arguments":[{"id":216,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1373:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":219,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1395:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"1395:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":221,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1412:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1416:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":217,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":215,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1353:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"1353:71:5"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1087:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:5","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"token","nameLocation":"1300:5:5","nodeType":"VariableDeclaration","scope":228,"src":"1293:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"IERC20","nameLocations":["1293:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"1293:6:5"},"referencedDeclaration":181,"src":"1293:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"to","nameLocation":"1315:2:5","nodeType":"VariableDeclaration","scope":228,"src":"1307:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"value","nameLocation":"1327:5:5","nodeType":"VariableDeclaration","scope":228,"src":"1319:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:5"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1343:0:5"},"scope":592,"src":"1271:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"1760:98:5","statements":[{"expression":{"arguments":[{"id":242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1790:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":245,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1812:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":180,"src":"1812:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":247,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1833:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1839:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1843:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":243,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":241,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1770:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"ExpressionStatement","src":"1770:81:5"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"1437:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:5","nodeType":"FunctionDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"token","nameLocation":"1703:5:5","nodeType":"VariableDeclaration","scope":255,"src":"1696:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":231,"nodeType":"UserDefinedTypeName","pathNode":{"id":230,"name":"IERC20","nameLocations":["1696:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"1696:6:5"},"referencedDeclaration":181,"src":"1696:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"from","nameLocation":"1718:4:5","nodeType":"VariableDeclaration","scope":255,"src":"1710:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"to","nameLocation":"1732:2:5","nodeType":"VariableDeclaration","scope":255,"src":"1724:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"value","nameLocation":"1744:5:5","nodeType":"VariableDeclaration","scope":255,"src":"1736:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:5"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"1760:0:5"},"scope":592,"src":"1670:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"2600:139:5","statements":[{"assignments":[267],"declarations":[{"constant":false,"id":267,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:5","nodeType":"VariableDeclaration","scope":285,"src":"2610:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[{"arguments":[{"id":272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}],"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:5","typeDescriptions":{}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2664:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":268,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2633:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":158,"src":"2633:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:5"},{"expression":{"arguments":[{"id":278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2695:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2711:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2726:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2682:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"2682:50:5"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1864:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:5","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"token","nameLocation":"2552:5:5","nodeType":"VariableDeclaration","scope":286,"src":"2545:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":258,"nodeType":"UserDefinedTypeName","pathNode":{"id":257,"name":"IERC20","nameLocations":["2545:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2545:6:5"},"referencedDeclaration":181,"src":"2545:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"spender","nameLocation":"2567:7:5","nodeType":"VariableDeclaration","scope":286,"src":"2559:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"value","nameLocation":"2584:5:5","nodeType":"VariableDeclaration","scope":286,"src":"2576:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:5"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":592,"src":"2514:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"3505:370:5","statements":[{"id":327,"nodeType":"UncheckedBlock","src":"3515:354:5","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:5","nodeType":"VariableDeclaration","scope":327,"src":"3539:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":307,"initialValue":{"arguments":[{"arguments":[{"id":303,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$592","typeString":"library SafeERC20"}],"id":302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:5","typeDescriptions":{}}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3566:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":158,"src":"3566:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3623:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":309,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3642:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"IfStatement","src":"3619:160:5","trueBody":{"id":317,"nodeType":"Block","src":"3661:118:5","statements":[{"errorCall":{"arguments":[{"id":312,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":313,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3728:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":314,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3746:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3686:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":316,"nodeType":"RevertStatement","src":"3679:85:5"}]}},{"expression":{"arguments":[{"id":320,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3805:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3812:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3821:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":323,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3840:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3792:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"ExpressionStatement","src":"3792:66:5"}]}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2745:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:5","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"token","nameLocation":"3445:5:5","nodeType":"VariableDeclaration","scope":329,"src":"3438:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"IERC20","nameLocations":["3438:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"3438:6:5"},"referencedDeclaration":181,"src":"3438:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"spender","nameLocation":"3460:7:5","nodeType":"VariableDeclaration","scope":329,"src":"3452:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:5","nodeType":"VariableDeclaration","scope":329,"src":"3469:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:5"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"3505:0:5"},"scope":592,"src":"3407:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":375,"nodeType":"Block","src":"4529:303:5","statements":[{"assignments":[341],"declarations":[{"constant":false,"id":341,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:5","nodeType":"VariableDeclaration","scope":375,"src":"4539:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":340,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":350,"initialValue":{"arguments":[{"expression":{"id":344,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4582:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4582:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4598:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4607:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:5"},{"condition":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:5","subExpression":{"arguments":[{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":353,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4661:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4630:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":374,"nodeType":"IfStatement","src":"4625:201:5","trueBody":{"id":373,"nodeType":"Block","src":"4676:150:5","statements":[{"expression":{"arguments":[{"id":357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4710:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4732:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4732:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4748:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4690:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"4690:71:5"},{"expression":{"arguments":[{"id":369,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4795:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},{"id":370,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4802:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":368,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4775:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"4775:40:5"}]}}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3881:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":376,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:5","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"token","nameLocation":"4481:5:5","nodeType":"VariableDeclaration","scope":376,"src":"4474:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"IERC20","nameLocations":["4474:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"4474:6:5"},"referencedDeclaration":181,"src":"4474:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"spender","nameLocation":"4496:7:5","nodeType":"VariableDeclaration","scope":376,"src":"4488:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"value","nameLocation":"4513:5:5","nodeType":"VariableDeclaration","scope":376,"src":"4505:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:5"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"4529:0:5"},"scope":592,"src":"4452:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"5279:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":389,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5293:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:5","memberName":"code","nodeType":"MemberAccess","src":"5293:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:5","memberName":"length","nodeType":"MemberAccess","src":"5293:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:5","subExpression":{"arguments":[{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5402:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5413:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5380:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":46,"src":"5380:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"nodeType":"IfStatement","src":"5375:117:5","trueBody":{"id":415,"nodeType":"Block","src":"5420:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5474:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:5","typeDescriptions":{}}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":408,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5441:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":414,"nodeType":"RevertStatement","src":"5434:47:5"}]}},"id":417,"nodeType":"IfStatement","src":"5289:203:5","trueBody":{"id":400,"nodeType":"Block","src":"5314:55:5","statements":[{"expression":{"arguments":[{"id":395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5341:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5348:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"5328:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"5328:30:5"}]}}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"4838:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:5","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"token","nameLocation":"5217:5:5","nodeType":"VariableDeclaration","scope":419,"src":"5208:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":379,"nodeType":"UserDefinedTypeName","pathNode":{"id":378,"name":"IERC1363","nameLocations":["5208:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5208:8:5"},"referencedDeclaration":95,"src":"5208:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"to","nameLocation":"5232:2:5","nodeType":"VariableDeclaration","scope":419,"src":"5224:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"value","nameLocation":"5244:5:5","nodeType":"VariableDeclaration","scope":419,"src":"5236:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"data","nameLocation":"5264:4:5","nodeType":"VariableDeclaration","scope":419,"src":"5251:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"5279:0:5"},"scope":592,"src":"5176:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"6017:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:5","memberName":"code","nodeType":"MemberAccess","src":"6031:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:5","memberName":"length","nodeType":"MemberAccess","src":"6031:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:5","subExpression":{"arguments":[{"id":449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6154:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6160:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6171:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":447,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6128:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":72,"src":"6128:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"6123:127:5","trueBody":{"id":462,"nodeType":"Block","src":"6178:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6232:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:5","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6199:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":461,"nodeType":"RevertStatement","src":"6192:47:5"}]}},"id":464,"nodeType":"IfStatement","src":"6027:223:5","trueBody":{"id":446,"nodeType":"Block","src":"6052:65:5","statements":[{"expression":{"arguments":[{"id":440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6083:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6090:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6096:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6100:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":439,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"6066:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6066:40:5"}]}}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"5504:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:5","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"token","nameLocation":"5904:5:5","nodeType":"VariableDeclaration","scope":466,"src":"5895:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":422,"nodeType":"UserDefinedTypeName","pathNode":{"id":421,"name":"IERC1363","nameLocations":["5895:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"5895:8:5"},"referencedDeclaration":95,"src":"5895:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"from","nameLocation":"5927:4:5","nodeType":"VariableDeclaration","scope":466,"src":"5919:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"to","nameLocation":"5949:2:5","nodeType":"VariableDeclaration","scope":466,"src":"5941:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"value","nameLocation":"5969:5:5","nodeType":"VariableDeclaration","scope":466,"src":"5961:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"data","nameLocation":"5997:4:5","nodeType":"VariableDeclaration","scope":466,"src":"5984:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":430,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:5"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"6017:0:5"},"scope":592,"src":"5850:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":508,"nodeType":"Block","src":"7023:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7037:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:5","memberName":"code","nodeType":"MemberAccess","src":"7037:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:5","memberName":"length","nodeType":"MemberAccess","src":"7037:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:5","subExpression":{"arguments":[{"id":493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7145:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7149:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":495,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7156:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7124:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":94,"src":"7124:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"7119:116:5","trueBody":{"id":505,"nodeType":"Block","src":"7163:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7217:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:5","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"7184:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":504,"nodeType":"RevertStatement","src":"7177:47:5"}]}},"id":507,"nodeType":"IfStatement","src":"7033:202:5","trueBody":{"id":490,"nodeType":"Block","src":"7058:55:5","statements":[{"expression":{"arguments":[{"id":485,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7085:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},{"id":486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7092:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7096:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7072:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7072:30:5"}]}}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"6262:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:5","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"token","nameLocation":"6961:5:5","nodeType":"VariableDeclaration","scope":509,"src":"6952:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"IERC1363","nameLocations":["6952:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"6952:8:5"},"referencedDeclaration":95,"src":"6952:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$95","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"to","nameLocation":"6976:2:5","nodeType":"VariableDeclaration","scope":509,"src":"6968:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"value","nameLocation":"6988:5:5","nodeType":"VariableDeclaration","scope":509,"src":"6980:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"data","nameLocation":"7008:4:5","nodeType":"VariableDeclaration","scope":509,"src":"6995:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":475,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:5"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"7023:0:5"},"scope":592,"src":"6921:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"7808:650:5","statements":[{"assignments":[519],"declarations":[{"constant":false,"id":519,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:5","nodeType":"VariableDeclaration","scope":549,"src":"7818:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"nodeType":"VariableDeclarationStatement","src":"7818:18:5"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:5","nodeType":"VariableDeclaration","scope":549,"src":"7846:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":523,"nodeType":"VariableDeclarationStatement","src":"7846:19:5"},{"AST":{"nativeSrc":"7900:396:5","nodeType":"YulBlock","src":"7900:396:5","statements":[{"nativeSrc":"7914:75:5","nodeType":"YulVariableDeclaration","src":"7914:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:5","nodeType":"YulIdentifier","src":"7934:3:5"},"nativeSrc":"7934:5:5","nodeType":"YulFunctionCall","src":"7934:5:5"},{"name":"token","nativeSrc":"7941:5:5","nodeType":"YulIdentifier","src":"7941:5:5"},{"kind":"number","nativeSrc":"7948:1:5","nodeType":"YulLiteral","src":"7948:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:5","nodeType":"YulIdentifier","src":"7955:4:5"},{"kind":"number","nativeSrc":"7961:4:5","nodeType":"YulLiteral","src":"7961:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:5","nodeType":"YulIdentifier","src":"7951:3:5"},"nativeSrc":"7951:15:5","nodeType":"YulFunctionCall","src":"7951:15:5"},{"arguments":[{"name":"data","nativeSrc":"7974:4:5","nodeType":"YulIdentifier","src":"7974:4:5"}],"functionName":{"name":"mload","nativeSrc":"7968:5:5","nodeType":"YulIdentifier","src":"7968:5:5"},"nativeSrc":"7968:11:5","nodeType":"YulFunctionCall","src":"7968:11:5"},{"kind":"number","nativeSrc":"7981:1:5","nodeType":"YulLiteral","src":"7981:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:5","nodeType":"YulLiteral","src":"7984:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:5","nodeType":"YulIdentifier","src":"7929:4:5"},"nativeSrc":"7929:60:5","nodeType":"YulFunctionCall","src":"7929:60:5"},"variables":[{"name":"success","nativeSrc":"7918:7:5","nodeType":"YulTypedName","src":"7918:7:5","type":""}]},{"body":{"nativeSrc":"8050:157:5","nodeType":"YulBlock","src":"8050:157:5","statements":[{"nativeSrc":"8068:22:5","nodeType":"YulVariableDeclaration","src":"8068:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:5","nodeType":"YulLiteral","src":"8085:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:5","nodeType":"YulIdentifier","src":"8079:5:5"},"nativeSrc":"8079:11:5","nodeType":"YulFunctionCall","src":"8079:11:5"},"variables":[{"name":"ptr","nativeSrc":"8072:3:5","nodeType":"YulTypedName","src":"8072:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:5","nodeType":"YulIdentifier","src":"8122:3:5"},{"kind":"number","nativeSrc":"8127:1:5","nodeType":"YulLiteral","src":"8127:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:5","nodeType":"YulIdentifier","src":"8130:14:5"},"nativeSrc":"8130:16:5","nodeType":"YulFunctionCall","src":"8130:16:5"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:5","nodeType":"YulIdentifier","src":"8107:14:5"},"nativeSrc":"8107:40:5","nodeType":"YulFunctionCall","src":"8107:40:5"},"nativeSrc":"8107:40:5","nodeType":"YulExpressionStatement","src":"8107:40:5"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:5","nodeType":"YulIdentifier","src":"8171:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:5","nodeType":"YulIdentifier","src":"8176:14:5"},"nativeSrc":"8176:16:5","nodeType":"YulFunctionCall","src":"8176:16:5"}],"functionName":{"name":"revert","nativeSrc":"8164:6:5","nodeType":"YulIdentifier","src":"8164:6:5"},"nativeSrc":"8164:29:5","nodeType":"YulFunctionCall","src":"8164:29:5"},"nativeSrc":"8164:29:5","nodeType":"YulExpressionStatement","src":"8164:29:5"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:5","nodeType":"YulIdentifier","src":"8041:7:5"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:5","nodeType":"YulIdentifier","src":"8034:6:5"},"nativeSrc":"8034:15:5","nodeType":"YulFunctionCall","src":"8034:15:5"},"nativeSrc":"8031:176:5","nodeType":"YulIf","src":"8031:176:5"},{"nativeSrc":"8220:30:5","nodeType":"YulAssignment","src":"8220:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:5","nodeType":"YulIdentifier","src":"8234:14:5"},"nativeSrc":"8234:16:5","nodeType":"YulFunctionCall","src":"8234:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:5","nodeType":"YulIdentifier","src":"8220:10:5"}]},{"nativeSrc":"8263:23:5","nodeType":"YulAssignment","src":"8263:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:5","nodeType":"YulLiteral","src":"8284:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:5","nodeType":"YulIdentifier","src":"8278:5:5"},"nativeSrc":"8278:8:5","nodeType":"YulFunctionCall","src":"8278:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:5","nodeType":"YulIdentifier","src":"8263:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":515,"isOffset":false,"isSlot":false,"src":"7955:4:5","valueSize":1},{"declaration":515,"isOffset":false,"isSlot":false,"src":"7974:4:5","valueSize":1},{"declaration":519,"isOffset":false,"isSlot":false,"src":"8220:10:5","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"8263:11:5","valueSize":1},{"declaration":513,"isOffset":false,"isSlot":false,"src":"7941:5:5","valueSize":1}],"flags":["memory-safe"],"id":524,"nodeType":"InlineAssembly","src":"7875:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8310:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8362:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":530,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8336:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:5","typeDescriptions":{}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:5","memberName":"code","nodeType":"MemberAccess","src":"8328:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:5","memberName":"length","nodeType":"MemberAccess","src":"8328:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"IfStatement","src":"8306:146:5","trueBody":{"id":547,"nodeType":"Block","src":"8380:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":543,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8434:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:5","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":540,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"8401:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":546,"nodeType":"RevertStatement","src":"8394:47:5"}]}}]},"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"7247:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":550,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:5","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"token","nameLocation":"7774:5:5","nodeType":"VariableDeclaration","scope":550,"src":"7767:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":512,"nodeType":"UserDefinedTypeName","pathNode":{"id":511,"name":"IERC20","nameLocations":["7767:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"7767:6:5"},"referencedDeclaration":181,"src":"7767:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"data","nameLocation":"7794:4:5","nodeType":"VariableDeclaration","scope":550,"src":"7781:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"7808:0:5"},"scope":592,"src":"7738:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":590,"nodeType":"Block","src":"9049:391:5","statements":[{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"success","nameLocation":"9064:7:5","nodeType":"VariableDeclaration","scope":590,"src":"9059:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":561,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":563,"nodeType":"VariableDeclarationStatement","src":"9059:12:5"},{"assignments":[565],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:5","nodeType":"VariableDeclaration","scope":590,"src":"9081:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":566,"nodeType":"VariableDeclarationStatement","src":"9081:18:5"},{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:5","nodeType":"VariableDeclaration","scope":590,"src":"9109:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":569,"nodeType":"VariableDeclarationStatement","src":"9109:19:5"},{"AST":{"nativeSrc":"9163:174:5","nodeType":"YulBlock","src":"9163:174:5","statements":[{"nativeSrc":"9177:71:5","nodeType":"YulAssignment","src":"9177:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:5","nodeType":"YulIdentifier","src":"9193:3:5"},"nativeSrc":"9193:5:5","nodeType":"YulFunctionCall","src":"9193:5:5"},{"name":"token","nativeSrc":"9200:5:5","nodeType":"YulIdentifier","src":"9200:5:5"},{"kind":"number","nativeSrc":"9207:1:5","nodeType":"YulLiteral","src":"9207:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:5","nodeType":"YulIdentifier","src":"9214:4:5"},{"kind":"number","nativeSrc":"9220:4:5","nodeType":"YulLiteral","src":"9220:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:5","nodeType":"YulIdentifier","src":"9210:3:5"},"nativeSrc":"9210:15:5","nodeType":"YulFunctionCall","src":"9210:15:5"},{"arguments":[{"name":"data","nativeSrc":"9233:4:5","nodeType":"YulIdentifier","src":"9233:4:5"}],"functionName":{"name":"mload","nativeSrc":"9227:5:5","nodeType":"YulIdentifier","src":"9227:5:5"},"nativeSrc":"9227:11:5","nodeType":"YulFunctionCall","src":"9227:11:5"},{"kind":"number","nativeSrc":"9240:1:5","nodeType":"YulLiteral","src":"9240:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:5","nodeType":"YulLiteral","src":"9243:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:5","nodeType":"YulIdentifier","src":"9188:4:5"},"nativeSrc":"9188:60:5","nodeType":"YulFunctionCall","src":"9188:60:5"},"variableNames":[{"name":"success","nativeSrc":"9177:7:5","nodeType":"YulIdentifier","src":"9177:7:5"}]},{"nativeSrc":"9261:30:5","nodeType":"YulAssignment","src":"9261:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:5","nodeType":"YulIdentifier","src":"9275:14:5"},"nativeSrc":"9275:16:5","nodeType":"YulFunctionCall","src":"9275:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:5","nodeType":"YulIdentifier","src":"9261:10:5"}]},{"nativeSrc":"9304:23:5","nodeType":"YulAssignment","src":"9304:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:5","nodeType":"YulLiteral","src":"9325:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:5","nodeType":"YulIdentifier","src":"9319:5:5"},"nativeSrc":"9319:8:5","nodeType":"YulFunctionCall","src":"9319:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:5","nodeType":"YulIdentifier","src":"9304:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":556,"isOffset":false,"isSlot":false,"src":"9214:4:5","valueSize":1},{"declaration":556,"isOffset":false,"isSlot":false,"src":"9233:4:5","valueSize":1},{"declaration":565,"isOffset":false,"isSlot":false,"src":"9261:10:5","valueSize":1},{"declaration":568,"isOffset":false,"isSlot":false,"src":"9304:11:5","valueSize":1},{"declaration":562,"isOffset":false,"isSlot":false,"src":"9177:7:5","valueSize":1},{"declaration":554,"isOffset":false,"isSlot":false,"src":"9200:5:5","valueSize":1}],"flags":["memory-safe"],"id":570,"nodeType":"InlineAssembly","src":"9138:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9353:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"9365:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"9416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":577,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9391:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:5","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:5","memberName":"code","nodeType":"MemberAccess","src":"9383:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:5","memberName":"length","nodeType":"MemberAccess","src":"9383:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":560,"id":589,"nodeType":"Return","src":"9346:87:5"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"8464:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":591,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:5","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"token","nameLocation":"9000:5:5","nodeType":"VariableDeclaration","scope":591,"src":"8993:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"IERC20","nameLocations":["8993:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"8993:6:5"},"referencedDeclaration":181,"src":"8993:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"data","nameLocation":"9020:4:5","nodeType":"VariableDeclaration","scope":591,"src":"9007:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":555,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:5"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":591,"src":"9043:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":558,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:5"},"scope":592,"src":"8960:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":593,"src":"750:8692:5","usedErrors":[195,204],"usedEvents":[]}],"src":"115:9328:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1476],"IERC721":[709]},"id":710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":710,"sourceUnit":1477,"src":"134:62:6","symbolAliases":[{"foreign":{"id":595,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":598,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"288:7:6"},"id":599,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":709,"linearizedBaseContracts":[709,1476],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":608,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":608,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":608,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":608,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":617,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":617,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":613,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":617,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":615,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":617,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":626,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":626,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":626,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":626,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":634,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":634,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":634,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":709,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":642,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":642,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":642,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":709,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":654,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":654,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":654,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":654,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":654,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":709,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":664,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":664,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":664,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":709,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":674,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":674,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":674,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":709,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":682,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":682,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":709,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":690,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":690,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":709,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":698,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":698,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":698,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":709,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":708,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":708,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":708,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":705,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":709,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":710,"src":"267:4661:6","usedErrors":[],"usedEvents":[608,617,626]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[727]},"id":728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":711,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"142:154:7","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":727,"linearizedBaseContracts":[727],"name":"IERC721Receiver","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"329:500:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:7","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"operator","nameLocation":"877:8:7","nodeType":"VariableDeclaration","scope":726,"src":"869:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"from","nameLocation":"903:4:7","nodeType":"VariableDeclaration","scope":726,"src":"895:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:7","nodeType":"VariableDeclaration","scope":726,"src":"917:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"data","nameLocation":"957:4:7","nodeType":"VariableDeclaration","scope":726,"src":"942:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:7"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"986:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":723,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:7"},"scope":727,"src":"834:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":728,"src":"297:699:7","usedErrors":[],"usedEvents":[]}],"src":"116:881:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[986],"Errors":[1008]},"id":987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":729,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":987,"sourceUnit":1009,"src":"127:36:8","symbolAliases":[{"foreign":{"id":730,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"135:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"165:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":986,"linearizedBaseContracts":[986],"name":"Address","nameLocation":"241:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"255:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":737,"name":"AddressEmptyCode","nameLocation":"341:16:8","nodeType":"ErrorDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"target","nameLocation":"366:6:8","nodeType":"VariableDeclaration","scope":737,"src":"358:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:8"},"src":"335:39:8"},{"body":{"id":783,"nodeType":"Block","src":"1361:278:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":747,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:8","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":750,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1399:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"1371:125:8","trueBody":{"id":763,"nodeType":"Block","src":"1407:89:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":757,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:8","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1478:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":752,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1428:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1008_$","typeString":"type(library Errors)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":996,"src":"1428:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":762,"nodeType":"RevertStatement","src":"1421:64:8"}]}},{"assignments":[766,null],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"success","nameLocation":"1512:7:8","nodeType":"VariableDeclaration","scope":783,"src":"1507:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":773,"initialValue":{"arguments":[{"hexValue":"","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":767,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"1525:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:8","memberName":"call","nodeType":"MemberAccess","src":"1525:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1547:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:8"},{"condition":{"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:8","subExpression":{"id":774,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1573:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":782,"nodeType":"IfStatement","src":"1568:65:8","trueBody":{"id":781,"nodeType":"Block","src":"1582:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":776,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1603:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1008_$","typeString":"type(library Errors)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":999,"src":"1603:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":780,"nodeType":"RevertStatement","src":"1596:26:8"}]}}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"380:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:8","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:8","nodeType":"VariableDeclaration","scope":784,"src":"1309:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"amount","nameLocation":"1344:6:8","nodeType":"VariableDeclaration","scope":784,"src":"1336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:8"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"1361:0:8"},"scope":986,"src":"1290:349:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"2573:62:8","statements":[{"expression":{"arguments":[{"id":795,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2612:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"2620:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2590:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":793,"id":799,"nodeType":"Return","src":"2583:45:8"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"1645:834:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:8","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"target","nameLocation":"2514:6:8","nodeType":"VariableDeclaration","scope":801,"src":"2506:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"data","nameLocation":"2535:4:8","nodeType":"VariableDeclaration","scope":801,"src":"2522:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:8"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"2559:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:8"},"scope":986,"src":"2484:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"3072:294:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":815,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:8","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3110:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":832,"nodeType":"IfStatement","src":"3082:123:8","trueBody":{"id":831,"nodeType":"Block","src":"3117:88:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$986","typeString":"library Address"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:8","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3188:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":820,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3138:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1008_$","typeString":"type(library Errors)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":996,"src":"3138:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":830,"nodeType":"RevertStatement","src":"3131:63:8"}]}},{"assignments":[834,836],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"success","nameLocation":"3220:7:8","nodeType":"VariableDeclaration","scope":850,"src":"3215:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:8","nodeType":"VariableDeclaration","scope":850,"src":"3229:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":843,"initialValue":{"arguments":[{"id":841,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3282:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":837,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"3256:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:8","memberName":"call","nodeType":"MemberAccess","src":"3256:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3275:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:8"},{"expression":{"arguments":[{"id":845,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"3331:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3339:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":847,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3348:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":844,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3304:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":812,"id":849,"nodeType":"Return","src":"3297:62:8"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"2641:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:8","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"target","nameLocation":"2998:6:8","nodeType":"VariableDeclaration","scope":851,"src":"2990:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"data","nameLocation":"3019:4:8","nodeType":"VariableDeclaration","scope":851,"src":"3006:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"3033:5:8","nodeType":"VariableDeclaration","scope":851,"src":"3025:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:8"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"3058:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:8"},"scope":986,"src":"2959:407:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":876,"nodeType":"Block","src":"3605:154:8","statements":[{"assignments":[862,864],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"success","nameLocation":"3621:7:8","nodeType":"VariableDeclaration","scope":876,"src":"3616:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:8","nodeType":"VariableDeclaration","scope":876,"src":"3630:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":869,"initialValue":{"arguments":[{"id":867,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"3675:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":865,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"3657:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:8"},{"expression":{"arguments":[{"id":871,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"3724:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"3732:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":873,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"3741:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":870,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3697:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":860,"id":875,"nodeType":"Return","src":"3690:62:8"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"3372:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:8","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"target","nameLocation":"3541:6:8","nodeType":"VariableDeclaration","scope":877,"src":"3533:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"data","nameLocation":"3562:4:8","nodeType":"VariableDeclaration","scope":877,"src":"3549:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:8"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"3591:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":858,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:8"},"scope":986,"src":"3505:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"3997:156:8","statements":[{"assignments":[888,890],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"success","nameLocation":"4013:7:8","nodeType":"VariableDeclaration","scope":902,"src":"4008:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":887,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:8","nodeType":"VariableDeclaration","scope":902,"src":"4022:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":889,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":895,"initialValue":{"arguments":[{"id":893,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4069:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":891,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4049:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:8"},{"expression":{"arguments":[{"id":897,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4118:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4126:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":899,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4135:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":896,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4091:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":886,"id":901,"nodeType":"Return","src":"4084:62:8"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"3765:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:8","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"target","nameLocation":"3938:6:8","nodeType":"VariableDeclaration","scope":903,"src":"3930:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"data","nameLocation":"3959:4:8","nodeType":"VariableDeclaration","scope":903,"src":"3946:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":881,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:8"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"3983:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":884,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:8"},"scope":986,"src":"3900:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"4579:424:8","statements":[{"condition":{"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:8","subExpression":{"id":915,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4594:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":940,"nodeType":"Block","src":"4653:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"4841:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:8","memberName":"length","nodeType":"MemberAccess","src":"4841:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":926,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4867:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:8","memberName":"code","nodeType":"MemberAccess","src":"4867:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:8","memberName":"length","nodeType":"MemberAccess","src":"4867:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":937,"nodeType":"IfStatement","src":"4837:119:8","trueBody":{"id":936,"nodeType":"Block","src":"4892:64:8","statements":[{"errorCall":{"arguments":[{"id":933,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4934:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":932,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"4917:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":935,"nodeType":"RevertStatement","src":"4910:31:8"}]}},{"expression":{"id":938,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"4976:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":914,"id":939,"nodeType":"Return","src":"4969:17:8"}]},"id":941,"nodeType":"IfStatement","src":"4589:408:8","trueBody":{"id":921,"nodeType":"Block","src":"4603:44:8","statements":[{"expression":{"arguments":[{"id":918,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"4625:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":917,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4617:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"4617:19:8"}]}}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"4159:257:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:8","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"target","nameLocation":"4474:6:8","nodeType":"VariableDeclaration","scope":943,"src":"4466:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"success","nameLocation":"4495:7:8","nodeType":"VariableDeclaration","scope":943,"src":"4490:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":907,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:8","nodeType":"VariableDeclaration","scope":943,"src":"4512:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":909,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:8"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"4565:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:8"},"scope":986,"src":"4421:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"5307:122:8","statements":[{"condition":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:8","subExpression":{"id":953,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5322:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":962,"nodeType":"Block","src":"5381:42:8","statements":[{"expression":{"id":960,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5402:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":952,"id":961,"nodeType":"Return","src":"5395:17:8"}]},"id":963,"nodeType":"IfStatement","src":"5317:106:8","trueBody":{"id":959,"nodeType":"Block","src":"5331:44:8","statements":[{"expression":{"arguments":[{"id":956,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5353:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":955,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5345:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"5345:19:8"}]}}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"5009:191:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":965,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:8","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"success","nameLocation":"5236:7:8","nodeType":"VariableDeclaration","scope":965,"src":"5231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":945,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:8","nodeType":"VariableDeclaration","scope":965,"src":"5245:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":947,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:8"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"5293:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":950,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:8"},"scope":986,"src":"5205:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"5598:432:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":971,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"5674:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:8","memberName":"length","nodeType":"MemberAccess","src":"5674:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":982,"nodeType":"Block","src":"5973:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":977,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"5994:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1008_$","typeString":"type(library Errors)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":999,"src":"5994:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":981,"nodeType":"RevertStatement","src":"5987:26:8"}]},"id":983,"nodeType":"IfStatement","src":"5670:354:8","trueBody":{"id":976,"nodeType":"Block","src":"5697:270:8","statements":[{"AST":{"nativeSrc":"5824:133:8","nodeType":"YulBlock","src":"5824:133:8","statements":[{"nativeSrc":"5842:40:8","nodeType":"YulVariableDeclaration","src":"5842:40:8","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:8","nodeType":"YulIdentifier","src":"5871:10:8"}],"functionName":{"name":"mload","nativeSrc":"5865:5:8","nodeType":"YulIdentifier","src":"5865:5:8"},"nativeSrc":"5865:17:8","nodeType":"YulFunctionCall","src":"5865:17:8"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:8","nodeType":"YulTypedName","src":"5846:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:8","nodeType":"YulLiteral","src":"5910:2:8","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:8","nodeType":"YulIdentifier","src":"5914:10:8"}],"functionName":{"name":"add","nativeSrc":"5906:3:8","nodeType":"YulIdentifier","src":"5906:3:8"},"nativeSrc":"5906:19:8","nodeType":"YulFunctionCall","src":"5906:19:8"},{"name":"returndata_size","nativeSrc":"5927:15:8","nodeType":"YulIdentifier","src":"5927:15:8"}],"functionName":{"name":"revert","nativeSrc":"5899:6:8","nodeType":"YulIdentifier","src":"5899:6:8"},"nativeSrc":"5899:44:8","nodeType":"YulFunctionCall","src":"5899:44:8"},"nativeSrc":"5899:44:8","nodeType":"YulExpressionStatement","src":"5899:44:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":968,"isOffset":false,"isSlot":false,"src":"5871:10:8","valueSize":1},{"declaration":968,"isOffset":false,"isSlot":false,"src":"5914:10:8","valueSize":1}],"flags":["memory-safe"],"id":975,"nodeType":"InlineAssembly","src":"5799:158:8"}]}}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"5435:103:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:8","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:8","nodeType":"VariableDeclaration","scope":985,"src":"5560:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:8"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"5598:0:8"},"scope":986,"src":"5543:487:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":987,"src":"233:5799:8","usedErrors":[737],"usedEvents":[]}],"src":"101:5932:8"},"id":8},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1008]},"id":1009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":988,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"126:284:9","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1008,"linearizedBaseContracts":[1008],"name":"Errors","nameLocation":"419:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"432:94:9","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":996,"name":"InsufficientBalance","nameLocation":"537:19:9","nodeType":"ErrorDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"balance","nameLocation":"565:7:9","nodeType":"VariableDeclaration","scope":996,"src":"557:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"needed","nameLocation":"582:6:9","nodeType":"VariableDeclaration","scope":996,"src":"574:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:9"},"src":"531:59:9"},{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"596:89:9","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":999,"name":"FailedCall","nameLocation":"696:10:9","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"706:2:9"},"src":"690:19:9"},{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"715:46:9","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1002,"name":"FailedDeployment","nameLocation":"772:16:9","nodeType":"ErrorDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"788:2:9"},"src":"766:25:9"},{"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"797:58:9","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1007,"name":"MissingPrecompile","nameLocation":"866:17:9","nodeType":"ErrorDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"884:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:9"},"src":"860:33:9"}],"scope":1009,"src":"411:484:9","usedErrors":[996,999,1002,1007],"usedEvents":[]}],"src":"100:796:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1356]},"id":1357,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"138:205:10","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1356,"linearizedBaseContracts":[1356],"name":"ECDSA","nameLocation":"352:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1016,"members":[{"id":1012,"name":"NoError","nameLocation":"392:7:10","nodeType":"EnumValue","src":"392:7:10"},{"id":1013,"name":"InvalidSignature","nameLocation":"409:16:10","nodeType":"EnumValue","src":"409:16:10"},{"id":1014,"name":"InvalidSignatureLength","nameLocation":"435:22:10","nodeType":"EnumValue","src":"435:22:10"},{"id":1015,"name":"InvalidSignatureS","nameLocation":"467:17:10","nodeType":"EnumValue","src":"467:17:10"}],"name":"RecoverError","nameLocation":"369:12:10","nodeType":"EnumDefinition","src":"364:126:10"},{"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"496:63:10","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1019,"name":"ECDSAInvalidSignature","nameLocation":"570:21:10","nodeType":"ErrorDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"591:2:10"},"src":"564:30:10"},{"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"600:60:10","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1024,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:10","nodeType":"ErrorDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"length","nameLocation":"707:6:10","nodeType":"VariableDeclaration","scope":1024,"src":"699:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:10"},"src":"665:50:10"},{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"721:85:10","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1029,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:10","nodeType":"ErrorDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"s","nameLocation":"848:1:10","nodeType":"VariableDeclaration","scope":1029,"src":"840:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:10"},"src":"811:40:10"},{"body":{"id":1081,"nodeType":"Block","src":"2285:622:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1044,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2299:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:10","memberName":"length","nodeType":"MemberAccess","src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1079,"nodeType":"Block","src":"2793:108:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1070,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2827:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"2827:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1074,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2872:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2872:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:10","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1043,"id":1078,"nodeType":"Return","src":"2807:83:10"}]},"id":1080,"nodeType":"IfStatement","src":"2295:606:10","trueBody":{"id":1065,"nodeType":"Block","src":"2323:464:10","statements":[{"assignments":[1049],"declarations":[{"constant":false,"id":1049,"mutability":"mutable","name":"r","nameLocation":"2345:1:10","nodeType":"VariableDeclaration","scope":1065,"src":"2337:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1050,"nodeType":"VariableDeclarationStatement","src":"2337:9:10"},{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"s","nameLocation":"2368:1:10","nodeType":"VariableDeclaration","scope":1065,"src":"2360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1053,"nodeType":"VariableDeclarationStatement","src":"2360:9:10"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"v","nameLocation":"2389:1:10","nodeType":"VariableDeclaration","scope":1065,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1054,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1056,"nodeType":"VariableDeclarationStatement","src":"2383:7:10"},{"AST":{"nativeSrc":"2560:171:10","nodeType":"YulBlock","src":"2560:171:10","statements":[{"nativeSrc":"2578:32:10","nodeType":"YulAssignment","src":"2578:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:10","nodeType":"YulIdentifier","src":"2593:9:10"},{"kind":"number","nativeSrc":"2604:4:10","nodeType":"YulLiteral","src":"2604:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:10","nodeType":"YulIdentifier","src":"2589:3:10"},"nativeSrc":"2589:20:10","nodeType":"YulFunctionCall","src":"2589:20:10"}],"functionName":{"name":"mload","nativeSrc":"2583:5:10","nodeType":"YulIdentifier","src":"2583:5:10"},"nativeSrc":"2583:27:10","nodeType":"YulFunctionCall","src":"2583:27:10"},"variableNames":[{"name":"r","nativeSrc":"2578:1:10","nodeType":"YulIdentifier","src":"2578:1:10"}]},{"nativeSrc":"2627:32:10","nodeType":"YulAssignment","src":"2627:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:10","nodeType":"YulIdentifier","src":"2642:9:10"},{"kind":"number","nativeSrc":"2653:4:10","nodeType":"YulLiteral","src":"2653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:10","nodeType":"YulIdentifier","src":"2638:3:10"},"nativeSrc":"2638:20:10","nodeType":"YulFunctionCall","src":"2638:20:10"}],"functionName":{"name":"mload","nativeSrc":"2632:5:10","nodeType":"YulIdentifier","src":"2632:5:10"},"nativeSrc":"2632:27:10","nodeType":"YulFunctionCall","src":"2632:27:10"},"variableNames":[{"name":"s","nativeSrc":"2627:1:10","nodeType":"YulIdentifier","src":"2627:1:10"}]},{"nativeSrc":"2676:41:10","nodeType":"YulAssignment","src":"2676:41:10","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:10","nodeType":"YulLiteral","src":"2686:1:10","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:10","nodeType":"YulIdentifier","src":"2699:9:10"},{"kind":"number","nativeSrc":"2710:4:10","nodeType":"YulLiteral","src":"2710:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:10","nodeType":"YulIdentifier","src":"2695:3:10"},"nativeSrc":"2695:20:10","nodeType":"YulFunctionCall","src":"2695:20:10"}],"functionName":{"name":"mload","nativeSrc":"2689:5:10","nodeType":"YulIdentifier","src":"2689:5:10"},"nativeSrc":"2689:27:10","nodeType":"YulFunctionCall","src":"2689:27:10"}],"functionName":{"name":"byte","nativeSrc":"2681:4:10","nodeType":"YulIdentifier","src":"2681:4:10"},"nativeSrc":"2681:36:10","nodeType":"YulFunctionCall","src":"2681:36:10"},"variableNames":[{"name":"v","nativeSrc":"2676:1:10","nodeType":"YulIdentifier","src":"2676:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1049,"isOffset":false,"isSlot":false,"src":"2578:1:10","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2627:1:10","valueSize":1},{"declaration":1034,"isOffset":false,"isSlot":false,"src":"2593:9:10","valueSize":1},{"declaration":1034,"isOffset":false,"isSlot":false,"src":"2642:9:10","valueSize":1},{"declaration":1034,"isOffset":false,"isSlot":false,"src":"2699:9:10","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2676:1:10","valueSize":1}],"flags":["memory-safe"],"id":1057,"nodeType":"InlineAssembly","src":"2535:196:10"},{"expression":{"arguments":[{"id":1059,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2762:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1060,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2768:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1061,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2771:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1062,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2774:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1058,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1082,1162,1270],"referencedDeclaration":1270,"src":"2751:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1043,"id":1064,"nodeType":"Return","src":"2744:32:10"}]}}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"857:1267:10","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:10","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"hash","nameLocation":"2166:4:10","nodeType":"VariableDeclaration","scope":1082,"src":"2158:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"signature","nameLocation":"2193:9:10","nodeType":"VariableDeclaration","scope":1082,"src":"2180:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:10"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:10","nodeType":"VariableDeclaration","scope":1082,"src":"2232:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"err","nameLocation":"2264:3:10","nodeType":"VariableDeclaration","scope":1082,"src":"2251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1039,"nodeType":"UserDefinedTypeName","pathNode":{"id":1038,"name":"RecoverError","nameLocations":["2251:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2251:12:10"},"referencedDeclaration":1016,"src":"2251:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:10","nodeType":"VariableDeclaration","scope":1082,"src":"2269:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:10"},"scope":1356,"src":"2129:778:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"3801:168:10","statements":[{"assignments":[1093,1096,1098],"declarations":[{"constant":false,"id":1093,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:10","nodeType":"VariableDeclaration","scope":1111,"src":"3812:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"error","nameLocation":"3844:5:10","nodeType":"VariableDeclaration","scope":1111,"src":"3831:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1095,"nodeType":"UserDefinedTypeName","pathNode":{"id":1094,"name":"RecoverError","nameLocations":["3831:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"3831:12:10"},"referencedDeclaration":1016,"src":"3831:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:10","nodeType":"VariableDeclaration","scope":1111,"src":"3851:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1103,"initialValue":{"arguments":[{"id":1100,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"3882:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1101,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"3888:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1099,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1082,1162,1270],"referencedDeclaration":1082,"src":"3871:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:10"},{"expression":{"arguments":[{"id":1105,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"id":1106,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3927:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1104,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1016_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"3908:28:10"},{"expression":{"id":1109,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3953:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1091,"id":1110,"nodeType":"Return","src":"3946:16:10"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"2913:796:10","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:10","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"hash","nameLocation":"3739:4:10","nodeType":"VariableDeclaration","scope":1112,"src":"3731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"signature","nameLocation":"3758:9:10","nodeType":"VariableDeclaration","scope":1112,"src":"3745:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:10"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"3792:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:10"},"scope":1356,"src":"3714:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"4348:342:10","statements":[{"id":1160,"nodeType":"UncheckedBlock","src":"4358:326:10","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"s","nameLocation":"4390:1:10","nodeType":"VariableDeclaration","scope":1160,"src":"4382:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1137,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1131,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4394:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:10","typeDescriptions":{}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:10"},{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"v","nameLocation":"4591:1:10","nodeType":"VariableDeclaration","scope":1160,"src":"4585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1138,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1152,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1144,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4610:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:10","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1140,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:10","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:10"},{"expression":{"arguments":[{"id":1154,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"4659:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1155,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"4665:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1156,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"4668:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1157,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4671:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1153,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1082,1162,1270],"referencedDeclaration":1270,"src":"4648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1128,"id":1159,"nodeType":"Return","src":"4641:32:10"}]}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"3975:205:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:10","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"hash","nameLocation":"4222:4:10","nodeType":"VariableDeclaration","scope":1162,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"r","nameLocation":"4244:1:10","nodeType":"VariableDeclaration","scope":1162,"src":"4236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"vs","nameLocation":"4263:2:10","nodeType":"VariableDeclaration","scope":1162,"src":"4255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:10"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:10","nodeType":"VariableDeclaration","scope":1162,"src":"4295:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"err","nameLocation":"4327:3:10","nodeType":"VariableDeclaration","scope":1162,"src":"4314:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1124,"nodeType":"UserDefinedTypeName","pathNode":{"id":1123,"name":"RecoverError","nameLocations":["4314:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"4314:12:10"},"referencedDeclaration":1016,"src":"4314:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:10","nodeType":"VariableDeclaration","scope":1162,"src":"4332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:10"},"scope":1356,"src":"4185:505:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"4903:164:10","statements":[{"assignments":[1175,1178,1180],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:10","nodeType":"VariableDeclaration","scope":1194,"src":"4914:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"error","nameLocation":"4946:5:10","nodeType":"VariableDeclaration","scope":1194,"src":"4933:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1177,"nodeType":"UserDefinedTypeName","pathNode":{"id":1176,"name":"RecoverError","nameLocations":["4933:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"4933:12:10"},"referencedDeclaration":1016,"src":"4933:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:10","nodeType":"VariableDeclaration","scope":1194,"src":"4953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1186,"initialValue":{"arguments":[{"id":1182,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1183,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4990:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1184,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4993:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1181,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1082,1162,1270],"referencedDeclaration":1162,"src":"4973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:10"},{"expression":{"arguments":[{"id":1188,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5018:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"id":1189,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5025:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1187,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"5006:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1016_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"5006:28:10"},{"expression":{"id":1192,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"5051:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1173,"id":1193,"nodeType":"Return","src":"5044:16:10"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"4696:116:10","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:10","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"hash","nameLocation":"4842:4:10","nodeType":"VariableDeclaration","scope":1195,"src":"4834:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"r","nameLocation":"4856:1:10","nodeType":"VariableDeclaration","scope":1195,"src":"4848:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"vs","nameLocation":"4867:2:10","nodeType":"VariableDeclaration","scope":1195,"src":"4859:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:10"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"4894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:10"},"scope":1356,"src":"4817:250:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"5382:1372:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1216,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6278:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:10","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"6266:164:10","trueBody":{"id":1229,"nodeType":"Block","src":"6351:79:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:10","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1224,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6385:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"6385:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"id":1226,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6417:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1213,"id":1228,"nodeType":"Return","src":"6365:54:10"}]}},{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"signer","nameLocation":"6532:6:10","nodeType":"VariableDeclaration","scope":1269,"src":"6524:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1239,"initialValue":{"arguments":[{"id":1234,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"6551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1235,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6557:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1236,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1237,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6563:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1233,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6579:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:10","typeDescriptions":{}}},"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"IfStatement","src":"6575:113:10","trueBody":{"id":1258,"nodeType":"Block","src":"6601:87:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:10","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1250,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6635:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"6635:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:10","typeDescriptions":{}}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1213,"id":1257,"nodeType":"Return","src":"6615:62:10"}]}},{"expression":{"components":[{"id":1260,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6706:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1261,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1012,"src":"6714:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:10","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1213,"id":1268,"nodeType":"Return","src":"6698:49:10"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"5073:125:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:10","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"hash","nameLocation":"5240:4:10","nodeType":"VariableDeclaration","scope":1270,"src":"5232:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"v","nameLocation":"5260:1:10","nodeType":"VariableDeclaration","scope":1270,"src":"5254:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1199,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"r","nameLocation":"5279:1:10","nodeType":"VariableDeclaration","scope":1270,"src":"5271:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"s","nameLocation":"5298:1:10","nodeType":"VariableDeclaration","scope":1270,"src":"5290:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:10"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:10","nodeType":"VariableDeclaration","scope":1270,"src":"5329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"err","nameLocation":"5361:3:10","nodeType":"VariableDeclaration","scope":1270,"src":"5348:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"RecoverError","nameLocations":["5348:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"5348:12:10"},"referencedDeclaration":1016,"src":"5348:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:10","nodeType":"VariableDeclaration","scope":1270,"src":"5366:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:10"},"scope":1356,"src":"5203:1551:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"6981:166:10","statements":[{"assignments":[1285,1288,1290],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:10","nodeType":"VariableDeclaration","scope":1305,"src":"6992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"error","nameLocation":"7024:5:10","nodeType":"VariableDeclaration","scope":1305,"src":"7011:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"RecoverError","nameLocations":["7011:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"7011:12:10"},"referencedDeclaration":1016,"src":"7011:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:10","nodeType":"VariableDeclaration","scope":1305,"src":"7031:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1297,"initialValue":{"arguments":[{"id":1292,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7062:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1293,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7068:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1294,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7071:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1295,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"7074:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1291,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1082,1162,1270],"referencedDeclaration":1270,"src":"7051:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:10"},{"expression":{"arguments":[{"id":1299,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"7098:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},{"id":1300,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"7105:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1298,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"7086:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1016_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"7086:28:10"},{"expression":{"id":1303,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"7131:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1283,"id":1304,"nodeType":"Return","src":"7124:16:10"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"6760:122:10","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:10","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"hash","nameLocation":"6912:4:10","nodeType":"VariableDeclaration","scope":1306,"src":"6904:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"v","nameLocation":"6924:1:10","nodeType":"VariableDeclaration","scope":1306,"src":"6918:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1274,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"r","nameLocation":"6935:1:10","nodeType":"VariableDeclaration","scope":1306,"src":"6927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"s","nameLocation":"6946:1:10","nodeType":"VariableDeclaration","scope":1306,"src":"6938:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:10"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"6972:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:10"},"scope":1356,"src":"6887:260:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"7352:460:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7366:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1316,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7375:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1012,"src":"7375:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1321,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1322,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7471:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"7471:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1329,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7567:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1330,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7576:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"7576:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7701:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1342,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7710:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"7710:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"7697:109:10","trueBody":{"id":1349,"nodeType":"Block","src":"7742:64:10","statements":[{"errorCall":{"arguments":[{"id":1346,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1345,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7763:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1348,"nodeType":"RevertStatement","src":"7756:39:10"}]}},"id":1351,"nodeType":"IfStatement","src":"7563:243:10","trueBody":{"id":1340,"nodeType":"Block","src":"7613:78:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1336,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7670:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:10","typeDescriptions":{}}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1333,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"7634:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1339,"nodeType":"RevertStatement","src":"7627:53:10"}]}},"id":1352,"nodeType":"IfStatement","src":"7458:348:10","trueBody":{"id":1328,"nodeType":"Block","src":"7502:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1325,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7523:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1327,"nodeType":"RevertStatement","src":"7516:30:10"}]}},"id":1353,"nodeType":"IfStatement","src":"7362:444:10","trueBody":{"id":1320,"nodeType":"Block","src":"7397:55:10","statements":[{"functionReturnParameters":1314,"id":1319,"nodeType":"Return","src":"7411:7:10"}]}}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"7153:122:10","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:10","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"error","nameLocation":"7314:5:10","nodeType":"VariableDeclaration","scope":1355,"src":"7301:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"RecoverError","nameLocations":["7301:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"7301:12:10"},"referencedDeclaration":1016,"src":"7301:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:10","nodeType":"VariableDeclaration","scope":1355,"src":"7321:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:10"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"7352:0:10"},"scope":1356,"src":"7280:532:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1357,"src":"344:7470:10","usedErrors":[1019,1024,1029],"usedEvents":[]}],"src":"112:7703:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"ECDSA":[1356],"IERC1271":[13],"SignatureChecker":[1464]},"id":1465,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1358,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":1360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":1357,"src":"149:34:11","symbolAliases":[{"foreign":{"id":1359,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"157:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":1362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":14,"src":"184:55:11","symbolAliases":[{"foreign":{"id":1361,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"192:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"241:290:11","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"id":1464,"linearizedBaseContracts":[1464],"name":"SignatureChecker","nameLocation":"540:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1410,"nodeType":"Block","src":"1153:317:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1375,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1167:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1174:4:11","memberName":"code","nodeType":"MemberAccess","src":"1167:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:11","memberName":"length","nodeType":"MemberAccess","src":"1167:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1167:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1408,"nodeType":"Block","src":"1381:83:11","statements":[{"expression":{"arguments":[{"id":1403,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1429:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1404,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1437:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1405,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"1443:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1402,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1402:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1374,"id":1407,"nodeType":"Return","src":"1395:58:11"}]},"id":1409,"nodeType":"IfStatement","src":"1163:301:11","trueBody":{"id":1401,"nodeType":"Block","src":"1192:183:11","statements":[{"assignments":[1381,1384,null],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"recovered","nameLocation":"1215:9:11","nodeType":"VariableDeclaration","scope":1401,"src":"1207:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"err","nameLocation":"1245:3:11","nodeType":"VariableDeclaration","scope":1401,"src":"1226:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1383,"nodeType":"UserDefinedTypeName","pathNode":{"id":1382,"name":"ECDSA.RecoverError","nameLocations":["1226:5:11","1232:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"1226:18:11"},"referencedDeclaration":1016,"src":"1226:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":1390,"initialValue":{"arguments":[{"id":1387,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1271:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1388,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"1277:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1385,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1254:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1356_$","typeString":"type(library ECDSA)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1260:10:11","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1254:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1016_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1206:81:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"1308:3:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1392,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1315:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1356_$","typeString":"type(library ECDSA)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1321:12:11","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":1016,"src":"1315:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1016_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1334:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1012,"src":"1315:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1016","typeString":"enum ECDSA.RecoverError"}},"src":"1308:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"1345:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1397,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1358:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1345:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1308:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1374,"id":1400,"nodeType":"Return","src":"1301:63:11"}]}}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"563:473:11","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1050:19:11","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"signer","nameLocation":"1078:6:11","nodeType":"VariableDeclaration","scope":1411,"src":"1070:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"hash","nameLocation":"1094:4:11","nodeType":"VariableDeclaration","scope":1411,"src":"1086:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1086:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"signature","nameLocation":"1113:9:11","nodeType":"VariableDeclaration","scope":1411,"src":"1100:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"1100:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:54:11"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"1147:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1372,"name":"bool","nodeType":"ElementaryTypeName","src":"1147:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1146:6:11"},"scope":1464,"src":"1041:429:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1462,"nodeType":"Block","src":"2026:309:11","statements":[{"assignments":[1424,1426],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"success","nameLocation":"2042:7:11","nodeType":"VariableDeclaration","scope":1462,"src":"2037:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"2037:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"result","nameLocation":"2064:6:11","nodeType":"VariableDeclaration","scope":1462,"src":"2051:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1425,"name":"bytes","nodeType":"ElementaryTypeName","src":"2051:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1438,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1431,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2120:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2129:16:11","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2120:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":1433,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2148:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1434,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"2154:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2147:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":1429,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2105:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2109:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"2105:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1427,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"2074:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2081:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"2074:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2036:139:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2193:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2216:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2223:6:11","memberName":"length","nodeType":"MemberAccess","src":"2216:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2233:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2216:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2262:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2271:7:11","typeDescriptions":{}}}],"id":1450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2270:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":1445,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2251:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2255:6:11","memberName":"decode","nodeType":"MemberAccess","src":"2251:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1454,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2292:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2301:16:11","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2292:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2318:8:11","memberName":"selector","nodeType":"MemberAccess","src":"2292:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2251:76:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2193:134:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2192:136:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1422,"id":1461,"nodeType":"Return","src":"2185:143:11"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"1476:396:11","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC-1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1886:26:11","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"signer","nameLocation":"1930:6:11","nodeType":"VariableDeclaration","scope":1463,"src":"1922:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"hash","nameLocation":"1954:4:11","nodeType":"VariableDeclaration","scope":1463,"src":"1946:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1946:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"signature","nameLocation":"1981:9:11","nodeType":"VariableDeclaration","scope":1463,"src":"1968:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"1968:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1912:84:11"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"2020:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"2020:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2019:6:11"},"scope":1464,"src":"1877:458:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1465,"src":"532:1805:11","usedErrors":[],"usedEvents":[]}],"src":"123:2215:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1476]},"id":1477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1466,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1476,"linearizedBaseContracts":[1476],"name":"IERC165","nameLocation":"432:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1475,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":1475,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1469,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1472,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":1476,"src":"791:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1477,"src":"422:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:755:12"},"id":12},"contracts/N2D-ERC6551-Account.sol":{"ast":{"absolutePath":"contracts/N2D-ERC6551-Account.sol","exportedSymbols":{"Address":[986],"Bytecode":[1952],"ECDSA":[1356],"ERC6551Account":[1840],"IERC1271":[13],"IERC1363":[95],"IERC165":[1476],"IERC20":[181],"IERC6551Account":[2047],"IERC6551AccountProxy":[2005],"IERC6551Registry":[1999],"IERC721":[709],"IERC721Receiver":[727],"SafeERC20":[592],"SignatureChecker":[1464]},"id":1841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1478,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":1477,"src":"61:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":182,"src":"128:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1481,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":593,"src":"186:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":1482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":14,"src":"253:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":710,"src":"312:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":1484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":1465,"src":"372:73:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/IERC6551.sol","file":"../imports/IERC6551.sol","id":1485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":2048,"src":"447:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"imports/ERC6551Bytecode.sol","file":"../imports/ERC6551Bytecode.sol","id":1486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":1953,"src":"482:40:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":710,"src":"524:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":1488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":728,"src":"584:66:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1489,"name":"IERC165","nameLocations":["681:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"681:7:13"},"id":1490,"nodeType":"InheritanceSpecifier","src":"681:7:13"},{"baseName":{"id":1491,"name":"IERC1271","nameLocations":["690:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"690:8:13"},"id":1492,"nodeType":"InheritanceSpecifier","src":"690:8:13"},{"baseName":{"id":1493,"name":"IERC6551Account","nameLocations":["700:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"700:15:13"},"id":1494,"nodeType":"InheritanceSpecifier","src":"700:15:13"},{"baseName":{"id":1495,"name":"IERC721Receiver","nameLocations":["717:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"717:15:13"},"id":1496,"nodeType":"InheritanceSpecifier","src":"717:15:13"}],"canonicalName":"ERC6551Account","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1840,"linearizedBaseContracts":[1840,727,2047,13,1476],"name":"ERC6551Account","nameLocation":"663:14:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1500,"libraryName":{"id":1497,"name":"SafeERC20","nameLocations":["746:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"746:9:13"},"nodeType":"UsingForDirective","src":"740:27:13","typeName":{"id":1499,"nodeType":"UserDefinedTypeName","pathNode":{"id":1498,"name":"IERC20","nameLocations":["760:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"760:6:13"},"referencedDeclaration":181,"src":"760:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}}},{"constant":false,"id":1502,"mutability":"mutable","name":"_nonce","nameLocation":"819:6:13","nodeType":"VariableDeclaration","scope":1840,"src":"803:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1506,"mutability":"mutable","name":"_supportedInterfaces","nameLocation":"864:20:13","nodeType":"VariableDeclaration","scope":1840,"src":"832:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":1505,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1503,"name":"bytes4","nodeType":"ElementaryTypeName","src":"840:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"832:23:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"850:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1527,"nodeType":"Block","src":"907:146:13","statements":[{"expression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1509,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"918:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1514,"indexExpression":{"expression":{"arguments":[{"id":1511,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"944:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1476_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1476_$","typeString":"type(contract IERC165)"}],"id":1510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"939:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1476","typeString":"type(contract IERC165)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"953:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"939:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"918:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"968:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"918:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1517,"nodeType":"ExpressionStatement","src":"918:54:13"},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1518,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"983:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1523,"indexExpression":{"expression":{"arguments":[{"id":1520,"name":"IERC6551Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1009:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2047_$","typeString":"type(contract IERC6551Account)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$2047_$","typeString":"type(contract IERC6551Account)"}],"id":1519,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1004:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6551Account_$2047","typeString":"type(contract IERC6551Account)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1026:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"1004:33:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"983:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1041:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"983:62:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"ExpressionStatement","src":"983:62:13"}]},"id":1528,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"904:2:13"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[],"src":"907:0:13"},"scope":1840,"src":"893:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2027],"body":{"id":1584,"nodeType":"Block","src":"1211:390:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1230:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1234:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1230:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1542,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1244:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1244:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1253:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1222:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1222:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"1222:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1290:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1304:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1296:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:13","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1290:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1308:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1282:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1557,"nodeType":"ExpressionStatement","src":"1282:51:13"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1346:8:13","subExpression":{"id":1558,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1346:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ExpressionStatement","src":"1346:8:13"},{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"success","nameLocation":"1372:7:13","nodeType":"VariableDeclaration","scope":1584,"src":"1367:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1561,"name":"bool","nodeType":"ElementaryTypeName","src":"1367:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1563,"nodeType":"VariableDeclarationStatement","src":"1367:12:13"},{"expression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1564,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"1391:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"1400:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1566,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1390:17:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1575,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"1455:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1567,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1410:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1413:4:13","memberName":"call","nodeType":"MemberAccess","src":"1410:7:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":1569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"1425:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1570,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1437:7:13","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32303030","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:4:13","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"1437:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1410:44:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1410:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"1390:70:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"1390:70:13"},{"condition":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1477:8:13","subExpression":{"id":1579,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"1478:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"1473:121:13","trueBody":{"id":1582,"nodeType":"Block","src":"1487:107:13","statements":[{"AST":{"nativeSrc":"1511:72:13","nodeType":"YulBlock","src":"1511:72:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"1541:6:13","nodeType":"YulIdentifier","src":"1541:6:13"},{"kind":"number","nativeSrc":"1549:2:13","nodeType":"YulLiteral","src":"1549:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1537:3:13","nodeType":"YulIdentifier","src":"1537:3:13"},"nativeSrc":"1537:15:13","nodeType":"YulFunctionCall","src":"1537:15:13"},{"arguments":[{"name":"result","nativeSrc":"1560:6:13","nodeType":"YulIdentifier","src":"1560:6:13"}],"functionName":{"name":"mload","nativeSrc":"1554:5:13","nodeType":"YulIdentifier","src":"1554:5:13"},"nativeSrc":"1554:13:13","nodeType":"YulFunctionCall","src":"1554:13:13"}],"functionName":{"name":"revert","nativeSrc":"1530:6:13","nodeType":"YulIdentifier","src":"1530:6:13"},"nativeSrc":"1530:38:13","nodeType":"YulFunctionCall","src":"1530:38:13"},"nativeSrc":"1530:38:13","nodeType":"YulExpressionStatement","src":"1530:38:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1537,"isOffset":false,"isSlot":false,"src":"1541:6:13","valueSize":1},{"declaration":1537,"isOffset":false,"isSlot":false,"src":"1560:6:13","valueSize":1}],"id":1581,"nodeType":"InlineAssembly","src":"1502:81:13"}]}}]},"functionSelector":"9e5d4c49","id":1585,"implemented":true,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"1070:11:13","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"to","nameLocation":"1100:2:13","nodeType":"VariableDeclaration","scope":1585,"src":"1092:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"value","nameLocation":"1121:5:13","nodeType":"VariableDeclaration","scope":1585,"src":"1113:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"data","nameLocation":"1152:4:13","nodeType":"VariableDeclaration","scope":1585,"src":"1137:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1533,"name":"bytes","nodeType":"ElementaryTypeName","src":"1137:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1081:82:13"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"result","nameLocation":"1203:6:13","nodeType":"VariableDeclaration","scope":1585,"src":"1190:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"1190:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1189:21:13"},"scope":1840,"src":"1061:540:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1631,"nodeType":"Block","src":"1676:254:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1695:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1699:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1695:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1709:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1695:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1718:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1687:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"1687:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1755:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1761:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"1761:7:13","typeDescriptions":{}}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1761:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1755:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1773:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1747:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"1747:51:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1614,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1825:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1817:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"1817:7:13","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1831:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1817:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1842:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1850:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":1611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1809:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1809:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"ExpressionStatement","src":"1809:62:13"},{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1884:8:13","subExpression":{"id":1622,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1884:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ExpressionStatement","src":"1884:8:13"},{"expression":{"arguments":[{"id":1628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1915:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1903:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"1903:11:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1903:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1630,"nodeType":"ExpressionStatement","src":"1903:19:13"}]},"functionSelector":"d0679d34","id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"1618:4:13","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"to","nameLocation":"1639:2:13","nodeType":"VariableDeclaration","scope":1632,"src":"1623:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"1623:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"amount","nameLocation":"1651:6:13","nodeType":"VariableDeclaration","scope":1632,"src":"1643:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:36:13"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"1676:0:13"},"scope":1840,"src":"1609:321:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1688,"nodeType":"Block","src":"2051:324:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2070:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2074:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2070:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1645,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"2084:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2070:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2093:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":1642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2062:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"2062:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2130:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2144:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2136:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:13","typeDescriptions":{}}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2136:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2130:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461726765742061646472657373","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2148:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""},"value":"Invalid target address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","typeString":"literal_string \"Invalid target address\""}],"id":1651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2122:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"2122:51:13"},{"assignments":[1662],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"balance","nameLocation":"2194:7:13","nodeType":"VariableDeclaration","scope":1688,"src":"2186:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2186:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"arguments":[{"arguments":[{"id":1667,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2236:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2228:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"2228:7:13","typeDescriptions":{}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1663,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"2204:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2218:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":138,"src":"2204:23:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2186:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2261:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2272:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2261:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2280:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":1671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2253:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2253:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"2253:48:13"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2314:8:13","subExpression":{"id":1678,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2314:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"2314:8:13"},{"expression":{"arguments":[{"id":1684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2356:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2360:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1681,"name":"erc20contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"2333:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"2333:22:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2333:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"ExpressionStatement","src":"2333:34:13"}]},"functionSelector":"8447305a","id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"sendCustom","nameLocation":"1947:10:13","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"to","nameLocation":"1976:2:13","nodeType":"VariableDeclaration","scope":1689,"src":"1968:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"amount","nameLocation":"1997:6:13","nodeType":"VariableDeclaration","scope":1689,"src":"1989:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1989:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"erc20contract","nameLocation":"2021:13:13","nodeType":"VariableDeclaration","scope":1689,"src":"2014:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"},"typeName":{"id":1638,"nodeType":"UserDefinedTypeName","pathNode":{"id":1637,"name":"IERC20","nameLocations":["2014:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2014:6:13"},"referencedDeclaration":181,"src":"2014:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$181","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1957:84:13"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"2051:0:13"},"scope":1840,"src":"1938:437:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2036],"body":{"id":1729,"nodeType":"Block","src":"2514:235:13","statements":[{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"length","nameLocation":"2533:6:13","nodeType":"VariableDeclaration","scope":1729,"src":"2525:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1706,"initialValue":{"expression":{"expression":{"arguments":[{"id":1702,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2550:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2542:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:13","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:4:13","memberName":"code","nodeType":"MemberAccess","src":"2542:18:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2561:6:13","memberName":"length","nodeType":"MemberAccess","src":"2542:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2525:42:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1713,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2651:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2643:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"2643:7:13","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2643:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2658:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783630","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2667:4:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"src":"2658:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1718,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2673:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1709,"name":"Bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2627:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Bytecode_$1952_$","typeString":"type(library Bytecode)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2636:6:13","memberName":"codeAt","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"2627:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,uint256) view returns (bytes memory)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2700:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:13","typeDescriptions":{}}},{"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2709:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"2709:7:13","typeDescriptions":{}}},{"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2718:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2718:7:13","typeDescriptions":{}}}],"id":1726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2699:27:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}],"expression":{"id":1707,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2598:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2602:6:13","memberName":"decode","nodeType":"MemberAccess","src":"2598:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:143:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$","typeString":"tuple(uint256,address payable,uint256)"}},"functionReturnParameters":1697,"id":1728,"nodeType":"Return","src":"2578:163:13"}]},"functionSelector":"b553fe1e","id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"2392:7:13","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"2399:2:13"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"chainId","nameLocation":"2460:7:13","nodeType":"VariableDeclaration","scope":1730,"src":"2452:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"tokenContract","nameLocation":"2477:13:13","nodeType":"VariableDeclaration","scope":1730,"src":"2469:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"tokenId","nameLocation":"2500:7:13","nodeType":"VariableDeclaration","scope":1730,"src":"2492:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2451:57:13"},"scope":1840,"src":"2383:366:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2041],"body":{"id":1762,"nodeType":"Block","src":"2804:222:13","statements":[{"assignments":[1736,1738,1740],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"chainId","nameLocation":"2824:7:13","nodeType":"VariableDeclaration","scope":1762,"src":"2816:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2816:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"tokenContract","nameLocation":"2841:13:13","nodeType":"VariableDeclaration","scope":1762,"src":"2833:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"2833:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"tokenId","nameLocation":"2864:7:13","nodeType":"VariableDeclaration","scope":1762,"src":"2856:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1744,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1741,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2875:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_ERC6551Account_$1840","typeString":"contract ERC6551Account"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2894:7:13","memberName":"nftInfo","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"2875:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$","typeString":"function () view external returns (uint256,address,uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2875:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_uint256_$","typeString":"tuple(uint256,address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2815:88:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2918:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1746,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2929:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2935:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"2929:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"nodeType":"IfStatement","src":"2914:47:13","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2959:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2951:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"2951:7:13","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1734,"id":1753,"nodeType":"Return","src":"2944:17:13"}},{"expression":{"arguments":[{"id":1759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"3010:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1756,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2987:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1755,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2979:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$709_$","typeString":"type(contract IERC721)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2979:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$709","typeString":"contract IERC721"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3002:7:13","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":642,"src":"2979:30:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2979:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1734,"id":1761,"nodeType":"Return","src":"2972:46:13"}]},"functionSelector":"8da5cb5b","id":1763,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2766:5:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1763,"src":"2795:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2794:9:13"},"scope":1840,"src":"2757:269:13","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1475],"body":{"id":1774,"nodeType":"Block","src":"3108:59:13","statements":[{"expression":{"baseExpression":{"id":1770,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"3126:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1772,"indexExpression":{"id":1771,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3147:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3126:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1769,"id":1773,"nodeType":"Return","src":"3119:40:13"}]},"functionSelector":"01ffc9a7","id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3043:17:13","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"interfaceId","nameLocation":"3068:11:13","nodeType":"VariableDeclaration","scope":1775,"src":"3061:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1764,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3061:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3060:20:13"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"3102:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"3102:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3101:6:13"},"scope":1840,"src":"3034:133:13","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[726],"body":{"id":1793,"nodeType":"Block","src":"3327:67:13","statements":[{"expression":{"expression":{"expression":{"id":1789,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3345:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$727_$","typeString":"type(contract IERC721Receiver)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3361:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":726,"src":"3345:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3378:8:13","memberName":"selector","nodeType":"MemberAccess","src":"3345:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1788,"id":1792,"nodeType":"Return","src":"3338:48:13"}]},"functionSelector":"150b7a02","id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"3184:16:13","nodeType":"FunctionDefinition","overrides":{"id":1785,"nodeType":"OverrideSpecifier","overrides":[],"src":"3301:8:13"},"parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3211:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3229:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"3229:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3247:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3265:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"3265:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3200:86:13"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3319:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1786,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3319:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3318:8:13"},"scope":1840,"src":"3175:219:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[12],"body":{"id":1825,"nodeType":"Block","src":"3533:268:13","statements":[{"assignments":[1804],"declarations":[{"constant":false,"id":1804,"mutability":"mutable","name":"isValid","nameLocation":"3549:7:13","nodeType":"VariableDeclaration","scope":1825,"src":"3544:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1803,"name":"bool","nodeType":"ElementaryTypeName","src":"3544:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1812,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1807,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3610:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3632:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1810,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3651:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1805,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"3559:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$1464_$","typeString":"type(library SignatureChecker)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3576:19:13","memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"3559:36:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:112:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3544:127:13"},{"condition":{"id":1813,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"3688:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1819,"nodeType":"IfStatement","src":"3684:81:13","trueBody":{"id":1818,"nodeType":"Block","src":"3697:68:13","statements":[{"expression":{"expression":{"expression":{"id":1814,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"3719:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3728:16:13","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"3719:25:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3745:8:13","memberName":"selector","nodeType":"MemberAccess","src":"3719:34:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1802,"id":1817,"nodeType":"Return","src":"3712:41:13"}]}},{"expression":{"arguments":[{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3791:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1820,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3784:6:13","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3784:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1802,"id":1824,"nodeType":"Return","src":"3777:16:13"}]},"functionSelector":"1626ba7e","id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"3411:16:13","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"hash","nameLocation":"3446:4:13","nodeType":"VariableDeclaration","scope":1826,"src":"3438:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3438:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"signature","nameLocation":"3474:9:13","nodeType":"VariableDeclaration","scope":1826,"src":"3461:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"3461:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3427:63:13"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"magicValue","nameLocation":"3521:10:13","nodeType":"VariableDeclaration","scope":1826,"src":"3514:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1800,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3514:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3513:19:13"},"scope":1840,"src":"3402:399:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2046],"body":{"id":1834,"nodeType":"Block","src":"3867:32:13","statements":[{"expression":{"id":1832,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3885:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1831,"id":1833,"nodeType":"Return","src":"3878:13:13"}]},"functionSelector":"affed0e0","id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"3818:5:13","nodeType":"FunctionDefinition","overrides":{"id":1828,"nodeType":"OverrideSpecifier","overrides":[],"src":"3840:8:13"},"parameters":{"id":1827,"nodeType":"ParameterList","parameters":[],"src":"3823:2:13"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"3858:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3857:9:13"},"scope":1840,"src":"3809:90:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2016],"body":{"id":1838,"nodeType":"Block","src":"3934:2:13","statements":[]},"id":1839,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"3914:2:13"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[],"src":"3934:0:13"},"scope":1840,"src":"3907:29:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1841,"src":"654:3285:13","usedErrors":[1850],"usedEvents":[2013]}],"src":"33:3908:13"},"id":13},"imports/ERC6551Bytecode.sol":{"ast":{"absolutePath":"imports/ERC6551Bytecode.sol","exportedSymbols":{"Bytecode":[1952]},"id":1953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1842,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Bytecode","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1952,"linearizedBaseContracts":[1952],"name":"Bytecode","nameLocation":"67:8:14","nodeType":"ContractDefinition","nodes":[{"errorSelector":"2c4a89fa","id":1850,"name":"InvalidCodeAtRange","nameLocation":"86:18:14","nodeType":"ErrorDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"_size","nameLocation":"113:5:14","nodeType":"VariableDeclaration","scope":1850,"src":"105:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"_start","nameLocation":"128:6:14","nodeType":"VariableDeclaration","scope":1850,"src":"120:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"_end","nameLocation":"144:4:14","nodeType":"VariableDeclaration","scope":1850,"src":"136:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:45:14"},"src":"80:70:14"},{"body":{"id":1870,"nodeType":"Block","src":"461:618:14","statements":[{"expression":{"arguments":[{"hexValue":"63","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"981:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},"value":"c"},{"arguments":[{"expression":{"id":1863,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1003:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1009:6:14","memberName":"length","nodeType":"MemberAccess","src":"1003:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1861,"name":"uint32","nodeType":"ElementaryTypeName","src":"996:6:14","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"80600e6000396000f3","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1024:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""}},{"id":1867,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1063:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2","typeString":"literal_string \"c\""},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e","typeString":"literal_string hex\"80600e6000396000f3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1858,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"957:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"961:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"957:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:117:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1857,"id":1869,"nodeType":"Return","src":"950:124:14"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"154:222:14","text":"@notice Generate a creation code that results on a contract with `_code` as bytecode\n@param _code The returning value of the resulting `creationCode`\n@return creationCode (constructor) for new contract"},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"creationCodeFor","nameLocation":"388:15:14","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"_code","nameLocation":"417:5:14","nodeType":"VariableDeclaration","scope":1871,"src":"404:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1852,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"403:20:14"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"447:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"447:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"446:14:14"},"scope":1952,"src":"379:700:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1880,"nodeType":"Block","src":"1332:49:14","statements":[{"AST":{"nativeSrc":"1347:30:14","nodeType":"YulBlock","src":"1347:30:14","statements":[{"nativeSrc":"1349:26:14","nodeType":"YulAssignment","src":"1349:26:14","value":{"arguments":[{"name":"_addr","nativeSrc":"1369:5:14","nodeType":"YulIdentifier","src":"1369:5:14"}],"functionName":{"name":"extcodesize","nativeSrc":"1357:11:14","nodeType":"YulIdentifier","src":"1357:11:14"},"nativeSrc":"1357:18:14","nodeType":"YulFunctionCall","src":"1357:18:14"},"variableNames":[{"name":"size","nativeSrc":"1349:4:14","nodeType":"YulIdentifier","src":"1349:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1874,"isOffset":false,"isSlot":false,"src":"1369:5:14","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":false,"src":"1349:4:14","valueSize":1}],"id":1879,"nodeType":"InlineAssembly","src":"1338:39:14"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"1083:176:14","text":"@notice Returns the size of the code on a given address\n@param _addr Address that may or may not contain code\n@return size of the code on the given `_addr`"},"id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"codeSize","nameLocation":"1271:8:14","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"_addr","nameLocation":"1288:5:14","nodeType":"VariableDeclaration","scope":1881,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1279:15:14"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"size","nameLocation":"1326:4:14","nodeType":"VariableDeclaration","scope":1881,"src":"1318:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:14:14"},"scope":1952,"src":"1262:119:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1950,"nodeType":"Block","src":"1898:842:14","statements":[{"assignments":[1894],"declarations":[{"constant":false,"id":1894,"mutability":"mutable","name":"csize","nameLocation":"1912:5:14","nodeType":"VariableDeclaration","scope":1950,"src":"1904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1898,"initialValue":{"arguments":[{"id":1896,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1929:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1895,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"1920:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1904:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"1945:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1954:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1945:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1907,"nodeType":"IfStatement","src":"1941:32:14","trueBody":{"expression":{"arguments":[{"hexValue":"","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1970:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1964:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1902,"name":"bytes","nodeType":"ElementaryTypeName","src":"1964:5:14","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1892,"id":1906,"nodeType":"Return","src":"1957:16:14"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1908,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1984:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1909,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"1993:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1984:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"1980:36:14","trueBody":{"expression":{"arguments":[{"hexValue":"","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2013:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2007:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"2007:5:14","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1892,"id":1915,"nodeType":"Return","src":"2000:16:14"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2026:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1918,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2033:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2026:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1926,"nodeType":"IfStatement","src":"2022:65:14","trueBody":{"errorCall":{"arguments":[{"id":1921,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"2067:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1922,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2074:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1923,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2082:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"InvalidCodeAtRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"2048:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1925,"nodeType":"RevertStatement","src":"2041:46:14"}},{"id":1949,"nodeType":"UncheckedBlock","src":"2095:641:14","statements":[{"assignments":[1928],"declarations":[{"constant":false,"id":1928,"mutability":"mutable","name":"reqSize","nameLocation":"2121:7:14","nodeType":"VariableDeclaration","scope":1949,"src":"2113:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2131:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1930,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2138:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:31:14"},{"assignments":[1934],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"maxSize","nameLocation":"2160:7:14","nodeType":"VariableDeclaration","scope":1949,"src":"2152:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1938,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"csize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"2170:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1936,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2178:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2170:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2152:32:14"},{"assignments":[1940],"declarations":[{"constant":false,"id":1940,"mutability":"mutable","name":"size","nameLocation":"2201:4:14","nodeType":"VariableDeclaration","scope":1949,"src":"2193:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1947,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1942,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2218:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1945,"name":"reqSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2238:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2208:37:14","trueExpression":{"id":1944,"name":"maxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2228:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2193:52:14"},{"AST":{"nativeSrc":"2263:467:14","nodeType":"YulBlock","src":"2263:467:14","statements":[{"nativeSrc":"2399:20:14","nodeType":"YulAssignment","src":"2399:20:14","value":{"arguments":[{"kind":"number","nativeSrc":"2414:4:14","nodeType":"YulLiteral","src":"2414:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2408:5:14","nodeType":"YulIdentifier","src":"2408:5:14"},"nativeSrc":"2408:11:14","nodeType":"YulFunctionCall","src":"2408:11:14"},"variableNames":[{"name":"oCode","nativeSrc":"2399:5:14","nodeType":"YulIdentifier","src":"2399:5:14"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2481:4:14","nodeType":"YulLiteral","src":"2481:4:14","type":"","value":"0x40"},{"arguments":[{"name":"oCode","nativeSrc":"2491:5:14","nodeType":"YulIdentifier","src":"2491:5:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2510:4:14","nodeType":"YulIdentifier","src":"2510:4:14"},{"kind":"number","nativeSrc":"2516:4:14","nodeType":"YulLiteral","src":"2516:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2506:3:14","nodeType":"YulIdentifier","src":"2506:3:14"},"nativeSrc":"2506:15:14","nodeType":"YulFunctionCall","src":"2506:15:14"},{"kind":"number","nativeSrc":"2523:4:14","nodeType":"YulLiteral","src":"2523:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2502:3:14","nodeType":"YulIdentifier","src":"2502:3:14"},"nativeSrc":"2502:26:14","nodeType":"YulFunctionCall","src":"2502:26:14"},{"arguments":[{"kind":"number","nativeSrc":"2534:4:14","nodeType":"YulLiteral","src":"2534:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"2530:3:14","nodeType":"YulIdentifier","src":"2530:3:14"},"nativeSrc":"2530:9:14","nodeType":"YulFunctionCall","src":"2530:9:14"}],"functionName":{"name":"and","nativeSrc":"2498:3:14","nodeType":"YulIdentifier","src":"2498:3:14"},"nativeSrc":"2498:42:14","nodeType":"YulFunctionCall","src":"2498:42:14"}],"functionName":{"name":"add","nativeSrc":"2487:3:14","nodeType":"YulIdentifier","src":"2487:3:14"},"nativeSrc":"2487:54:14","nodeType":"YulFunctionCall","src":"2487:54:14"}],"functionName":{"name":"mstore","nativeSrc":"2474:6:14","nodeType":"YulIdentifier","src":"2474:6:14"},"nativeSrc":"2474:68:14","nodeType":"YulFunctionCall","src":"2474:68:14"},"nativeSrc":"2474:68:14","nodeType":"YulExpressionStatement","src":"2474:68:14"},{"expression":{"arguments":[{"name":"oCode","nativeSrc":"2592:5:14","nodeType":"YulIdentifier","src":"2592:5:14"},{"name":"size","nativeSrc":"2599:4:14","nodeType":"YulIdentifier","src":"2599:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2585:6:14","nodeType":"YulIdentifier","src":"2585:6:14"},"nativeSrc":"2585:19:14","nodeType":"YulFunctionCall","src":"2585:19:14"},"nativeSrc":"2585:19:14","nodeType":"YulExpressionStatement","src":"2585:19:14"},{"expression":{"arguments":[{"name":"_addr","nativeSrc":"2684:5:14","nodeType":"YulIdentifier","src":"2684:5:14"},{"arguments":[{"name":"oCode","nativeSrc":"2695:5:14","nodeType":"YulIdentifier","src":"2695:5:14"},{"kind":"number","nativeSrc":"2702:4:14","nodeType":"YulLiteral","src":"2702:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2691:3:14","nodeType":"YulIdentifier","src":"2691:3:14"},"nativeSrc":"2691:16:14","nodeType":"YulFunctionCall","src":"2691:16:14"},{"name":"_start","nativeSrc":"2709:6:14","nodeType":"YulIdentifier","src":"2709:6:14"},{"name":"size","nativeSrc":"2717:4:14","nodeType":"YulIdentifier","src":"2717:4:14"}],"functionName":{"name":"extcodecopy","nativeSrc":"2672:11:14","nodeType":"YulIdentifier","src":"2672:11:14"},"nativeSrc":"2672:50:14","nodeType":"YulFunctionCall","src":"2672:50:14"},"nativeSrc":"2672:50:14","nodeType":"YulExpressionStatement","src":"2672:50:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1884,"isOffset":false,"isSlot":false,"src":"2684:5:14","valueSize":1},{"declaration":1886,"isOffset":false,"isSlot":false,"src":"2709:6:14","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"2399:5:14","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"2491:5:14","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"2592:5:14","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"2695:5:14","valueSize":1},{"declaration":1940,"isOffset":false,"isSlot":false,"src":"2510:4:14","valueSize":1},{"declaration":1940,"isOffset":false,"isSlot":false,"src":"2599:4:14","valueSize":1},{"declaration":1940,"isOffset":false,"isSlot":false,"src":"2717:4:14","valueSize":1}],"id":1948,"nodeType":"InlineAssembly","src":"2254:476:14"}]}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"1385:406:14","text":"@notice Returns the code of a given address\n@dev It will fail if `_end < _start`\n@param _addr Address that may or may not contain code\n@param _start number of bytes of code to skip on read\n@param _end index before which to end extraction\n@return oCode read from `_addr` deployed bytecode\nForked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd"},"id":1951,"implemented":true,"kind":"function","modifiers":[],"name":"codeAt","nameLocation":"1803:6:14","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"_addr","nameLocation":"1818:5:14","nodeType":"VariableDeclaration","scope":1951,"src":"1810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"1810:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"_start","nameLocation":"1833:6:14","nodeType":"VariableDeclaration","scope":1951,"src":"1825:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"_end","nameLocation":"1849:4:14","nodeType":"VariableDeclaration","scope":1951,"src":"1841:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1809:45:14"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"oCode","nameLocation":"1891:5:14","nodeType":"VariableDeclaration","scope":1951,"src":"1878:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1890,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1877:20:14"},"scope":1952,"src":"1794:946:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1953,"src":"59:2683:14","usedErrors":[1850],"usedEvents":[]}],"src":"32:2710:14"},"id":14},"imports/IERC6551.sol":{"ast":{"absolutePath":"imports/IERC6551.sol","exportedSymbols":{"IERC6551Account":[2047],"IERC6551AccountProxy":[2005],"IERC6551Registry":[1999]},"id":2048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1954,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Registry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1999,"linearizedBaseContracts":[1999],"name":"IERC6551Registry","nameLocation":"68:16:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f","id":1968,"name":"AccountCreated","nameLocation":"98:14:15","nodeType":"EventDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"130:7:15","nodeType":"VariableDeclaration","scope":1968,"src":"122:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"indexed":false,"mutability":"mutable","name":"implementation","nameLocation":"155:14:15","nodeType":"VariableDeclaration","scope":1968,"src":"147:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"187:7:15","nodeType":"VariableDeclaration","scope":1968,"src":"179:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"indexed":false,"mutability":"mutable","name":"tokenContract","nameLocation":"212:13:15","nodeType":"VariableDeclaration","scope":1968,"src":"204:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"243:7:15","nodeType":"VariableDeclaration","scope":1968,"src":"235:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1966,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"268:4:15","nodeType":"VariableDeclaration","scope":1968,"src":"260:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112:166:15"},"src":"92:187:15"},{"functionSelector":"c1340f69","id":1983,"implemented":false,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"294:13:15","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"implementation","nameLocation":"325:14:15","nodeType":"VariableDeclaration","scope":1983,"src":"317:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"chainId","nameLocation":"357:7:15","nodeType":"VariableDeclaration","scope":1983,"src":"349:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"tokenContract","nameLocation":"382:13:15","nodeType":"VariableDeclaration","scope":1983,"src":"374:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"tokenId","nameLocation":"413:7:15","nodeType":"VariableDeclaration","scope":1983,"src":"405:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"seed","nameLocation":"438:4:15","nodeType":"VariableDeclaration","scope":1983,"src":"430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"307:141:15"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"467:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"466:9:15"},"scope":1999,"src":"285:191:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5e9bc536","id":1998,"implemented":false,"kind":"function","modifiers":[],"name":"account","nameLocation":"491:7:15","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"implementation","nameLocation":"516:14:15","nodeType":"VariableDeclaration","scope":1998,"src":"508:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"chainId","nameLocation":"548:7:15","nodeType":"VariableDeclaration","scope":1998,"src":"540:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"tokenContract","nameLocation":"573:13:15","nodeType":"VariableDeclaration","scope":1998,"src":"565:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"tokenId","nameLocation":"604:7:15","nodeType":"VariableDeclaration","scope":1998,"src":"596:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"salt","nameLocation":"629:4:15","nodeType":"VariableDeclaration","scope":1998,"src":"621:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:141:15"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"663:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"662:9:15"},"scope":1999,"src":"482:190:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2048,"src":"58:616:15","usedErrors":[],"usedEvents":[1968]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551AccountProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2005,"linearizedBaseContracts":[2005],"name":"IERC6551AccountProxy","nameLocation":"686:20:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5c60da1b","id":2004,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"722:14:15","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"736:2:15"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"762:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"761:9:15"},"scope":2005,"src":"713:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2048,"src":"676:97:15","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2047,"linearizedBaseContracts":[2047],"name":"IERC6551Account","nameLocation":"785:15:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2","id":2013,"name":"TransactionExecuted","nameLocation":"813:19:15","nodeType":"EventDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"849:6:15","nodeType":"VariableDeclaration","scope":2013,"src":"833:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"873:5:15","nodeType":"VariableDeclaration","scope":2013,"src":"857:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2011,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"886:4:15","nodeType":"VariableDeclaration","scope":2013,"src":"880:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2010,"name":"bytes","nodeType":"ElementaryTypeName","src":"880:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"832:59:15"},"src":"807:85:15"},{"id":2016,"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"905:2:15"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"924:0:15"},"scope":2047,"src":"898:27:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":2027,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"940:11:15","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"to","nameLocation":"969:2:15","nodeType":"VariableDeclaration","scope":2027,"src":"961:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"value","nameLocation":"989:5:15","nodeType":"VariableDeclaration","scope":2027,"src":"981:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"data","nameLocation":"1019:4:15","nodeType":"VariableDeclaration","scope":2027,"src":"1004:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"951:78:15"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"1056:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"1056:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1055:14:15"},"scope":2047,"src":"931:139:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"b553fe1e","id":2036,"implemented":false,"kind":"function","modifiers":[],"name":"nftInfo","nameLocation":"1085:7:15","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"1092:2:15"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"chainId","nameLocation":"1163:7:15","nodeType":"VariableDeclaration","scope":2036,"src":"1155:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"tokenContract","nameLocation":"1192:13:15","nodeType":"VariableDeclaration","scope":2036,"src":"1184:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"1184:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"tokenId","nameLocation":"1227:7:15","nodeType":"VariableDeclaration","scope":2036,"src":"1219:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:103:15"},"scope":2047,"src":"1076:169:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":2041,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1260:5:15","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"1265:2:15"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"1291:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1290:9:15"},"scope":2047,"src":"1251:49:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"affed0e0","id":2046,"implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1315:5:15","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"1320:2:15"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"1346:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1345:9:15"},"scope":2047,"src":"1306:49:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2048,"src":"775:582:15","usedErrors":[],"usedEvents":[2013]}],"src":"32:1325:15"},"id":15}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].","kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c749a36dc3611dd113e8d02c444c1350764832d827301c78ca10dc6ac88cc1064736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x749A36DC3611DD113E8D02C444 0xC1 CALLDATALOAD SMOD PUSH5 0x832D827301 0xC7 DUP13 LOG1 0xD 0xC6 0xAC DUP9 0xCC LT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c749a36dc3611dd113e8d02c444c1350764832d827301c78ca10dc6ac88cc1064736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x749A36DC3611DD113E8D02C444 0xC1 CALLDATALOAD SMOD PUSH5 0x832D827301 0xC7 DUP13 LOG1 0xD 0xC6 0xAC DUP9 0xCC LT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC-721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9f75679a86f0c4bd53a4d9c017886deba973920fb3df1c373742079bd28c4e464736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF7 JUMP PUSH26 0xA86F0C4BD53A4D9C017886DEBA973920FB3DF1C373742079BD28 0xC4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9f75679a86f0c4bd53a4d9c017886deba973920fb3df1c373742079bd28c4e464736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xF7 JUMP PUSH26 0xA86F0C4BD53A4D9C017886DEBA973920FB3DF1C373742079BD28 0xC4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"233:5799:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8182c77a58fe5e1f4fdd427e1da4f71eada3813f0667b7ddd97210c0c2966264736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP2 DUP3 0xC7 PUSH27 0x58FE5E1F4FDD427E1DA4F71EADA3813F0667B7DDD97210C0C29662 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8182c77a58fe5e1f4fdd427e1da4f71eada3813f0667b7ddd97210c0c2966264736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP2 DUP3 0xC7 PUSH27 0x58FE5E1F4FDD427E1DA4F71EADA3813F0667B7DDD97210C0C29662 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042234d9ecaa3d8234b3c5bbeabc6a1d969c44f8abc8114bf5f55dfb0c8e44b4164736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x23 0x4D SWAP15 0xCA LOG3 0xD8 0x23 0x4B EXTCODECOPY JUMPDEST 0xBE 0xAB 0xC6 LOG1 0xD9 PUSH10 0xC44F8ABC8114BF5F55DF 0xB0 0xC8 0xE4 0x4B COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042234d9ecaa3d8234b3c5bbeabc6a1d969c44f8abc8114bf5f55dfb0c8e44b4164736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x23 0x4D SWAP15 0xCA LOG3 0xD8 0x23 0x4B EXTCODECOPY JUMPDEST 0xBE 0xAB 0xC6 LOG1 0xD9 PUSH10 0xC44F8ABC8114BF5F55DF 0xB0 0xC8 0xE4 0x4B COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_throwError(enum ECDSA.RecoverError,bytes32)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"devdoc":{"details":"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220064528cdbc51add5e1d291c086658ecf02d5ad0087007d444b6e9892e59e91d464736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD GASLIMIT 0x28 0xCD 0xBC MLOAD 0xAD 0xD5 0xE1 0xD2 SWAP2 0xC0 DUP7 PUSH6 0x8ECF02D5AD00 DUP8 STOP PUSH30 0x444B6E9892E59E91D464736F6C634300081B003300000000000000000000 ","sourceMap":"532:1805:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220064528cdbc51add5e1d291c086658ecf02d5ad0087007d444b6e9892e59e91d464736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD GASLIMIT 0x28 0xCD 0xBC MLOAD 0xAD 0xD5 0xE1 0xD2 SWAP2 0xC0 DUP7 PUSH6 0x8ECF02D5AD00 DUP8 STOP PUSH30 0x444B6E9892E59E91D464736F6C634300081B003300000000000000000000 ","sourceMap":"532:1805:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isValidERC1271SignatureNow(address,bytes32,bytes memory)":"infinite","isValidSignatureNow(address,bytes32,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/N2D-ERC6551-Account.sol":{"ERC6551Account":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"contract IERC20","name":"erc20contract","type":"address"}],"name":"sendCustom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"details":"Should return whether the signature provided is valid for the provided data","params":{"hash":"Hash of the data to be signed","signature":"Signature byte array associated with _data"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1528":{"entryPoint":null,"id":1528,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH32 0x955A9EC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1AAF DUP1 PUSH2 0x132 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x229 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x8447305A EQ PUSH2 0x14D JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D7 PUSH2 0x2D0 PUSH2 0x53F JUMP JUMPDEST DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 SHL SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x306 PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4B5 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP3 SWAP2 SWAP1 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x5CD JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x64D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x65A PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x748 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x7D0 GAS PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST SWAP1 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x7DF JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x828 ADDRESS PUSH1 0x60 DUP4 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x84F PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 PUSH2 0x9FD DUP6 DUP6 PUSH2 0xB64 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA16 JUMPI PUSH2 0xA15 PUSH2 0x18E9 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x18E9 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xA61 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA8C DUP6 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB5D JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB5D JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB17 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xB34 JUMPI DUP3 PUSH2 0xB36 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xB9B DUP9 DUP3 DUP6 DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBEF SWAP3 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC95 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCD9 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD54 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCA JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xDD9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE49 DUP2 PUSH2 0xE23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP5 DUP3 DUP6 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP3 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEED DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0A DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF23 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF40 DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF6B JUMPI PUSH2 0xF6A PUSH2 0xF46 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD5 DUP9 DUP3 DUP10 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xFE6 DUP9 DUP3 DUP10 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xFF7 DUP9 DUP3 DUP10 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1024 DUP9 DUP3 DUP10 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x103C DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1033 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1070 DUP2 PUSH2 0x105D JUMP JUMPDEST DUP2 EQ PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108D DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10E1 DUP3 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1113 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x111F DUP3 DUP3 PUSH2 0x10D8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST PUSH2 0x1148 DUP3 PUSH2 0x1098 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 PUSH2 0x1172 DUP5 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1093 JUMP JUMPDEST JUMPDEST PUSH2 0x119E DUP5 DUP3 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BB JUMPI PUSH2 0x11BA PUSH2 0xF46 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP6 DUP3 DUP7 ADD PUSH2 0x107E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1226 DUP6 DUP3 DUP7 ADD PUSH2 0x11A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123B DUP3 PUSH2 0xED2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124B DUP2 PUSH2 0x1230 JUMP JUMPDEST DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1268 DUP2 PUSH2 0x1242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP7 DUP3 DUP8 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A6 DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1259 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x12CA DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP8 DUP3 DUP9 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1324 DUP8 DUP3 DUP9 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1351 DUP8 DUP3 DUP9 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1399 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x136A JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1098 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F8 DUP2 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x144C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146C DUP3 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x1461 JUMP JUMPDEST DUP2 EQ PUSH2 0x1487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1499 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP6 DUP3 DUP7 ADD PUSH2 0x148A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D5 DUP6 DUP3 DUP7 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 PUSH1 0xF DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1531 DUP3 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1555 DUP2 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1592 PUSH1 0x16 DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x159D DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C1 DUP2 PUSH2 0x1585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D7 DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1601 DUP5 DUP3 DUP6 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1640 PUSH1 0x12 DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x164B DUP3 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166F DUP2 PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP3 PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x1676 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1702 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x170F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP2 EQ PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x173C DUP2 PUSH2 0x1716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1766 DUP5 DUP3 DUP6 ADD PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x177E DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17BC DUP7 DUP3 DUP8 ADD PUSH2 0x176F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17CD DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17EC PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FB DUP5 DUP3 DUP6 ADD PUSH2 0x176F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP3 PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP PUSH2 0x181A DUP4 PUSH2 0xF10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x1676 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP4 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x185C DUP4 DUP6 DUP5 PUSH2 0x1155 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1875 DUP3 DUP5 DUP7 PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1890 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18AF JUMPI PUSH2 0x18AE PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18CE DUP7 DUP3 DUP8 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x192D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x193A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1947 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x105D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1973 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x194F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1985 DUP2 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x19A3 DUP2 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x19B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A01 JUMPI PUSH2 0x1A00 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0F DUP5 DUP3 DUP6 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1A18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x1A56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A25 JUMP JUMPDEST PUSH2 0x1A63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x1A70 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x194F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xC 0xB4 0xD0 0x4B LOG1 MUL 0xDB BLOCKHASH MSTORE8 PUSH7 0x856BFA31C69ED2 CODECOPY 0xF6 0xF8 SWAP9 0xCD 0x4D BLOBHASH REVERT PUSH32 0x95213658364736F6C634300081B003300000000000000000000000000000000 ","sourceMap":"654:3285:13:-:0;;;893:160;;;;;;;;;;968:4;918:20;:47;939:25;918:47;;;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;1041:4;983:20;:55;1004:33;983:55;;;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;654:3285;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1839":{"entryPoint":null,"id":1839,"parameterSlots":0,"returnSlots":0},"@codeAt_1951":{"entryPoint":2687,"id":1951,"parameterSlots":3,"returnSlots":1},"@codeSize_1881":{"entryPoint":3300,"id":1881,"parameterSlots":1,"returnSlots":1},"@executeCall_1585":{"entryPoint":1616,"id":1585,"parameterSlots":4,"returnSlots":1},"@isValidERC1271SignatureNow_1463":{"entryPoint":3008,"id":1463,"parameterSlots":3,"returnSlots":1},"@isValidSignatureNow_1411":{"entryPoint":2512,"id":1411,"parameterSlots":3,"returnSlots":1},"@isValidSignature_1826":{"entryPoint":706,"id":1826,"parameterSlots":2,"returnSlots":1},"@nftInfo_1730":{"entryPoint":2033,"id":1730,"parameterSlots":0,"returnSlots":3},"@nonce_1835":{"entryPoint":2024,"id":1835,"parameterSlots":0,"returnSlots":1},"@onERC721Received_1794":{"entryPoint":685,"id":1794,"parameterSlots":5,"returnSlots":1},"@owner_1763":{"entryPoint":1343,"id":1763,"parameterSlots":0,"returnSlots":1},"@sendCustom_1689":{"entryPoint":766,"id":1689,"parameterSlots":3,"returnSlots":0},"@send_1632":{"entryPoint":2119,"id":1632,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1775":{"entryPoint":581,"id":1775,"parameterSlots":1,"returnSlots":1},"@tryRecover_1082":{"entryPoint":2916,"id":1082,"parameterSlots":2,"returnSlots":3},"@tryRecover_1270":{"entryPoint":3311,"id":1270,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4452,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":6273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":6614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":3642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3925,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$181":{"entryPoint":4697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5279,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4011,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4843,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181":{"entryPoint":4718,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":4564,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory":{"entryPoint":6294,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory":{"entryPoint":6020,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4801,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3720,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6479,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":4147,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6211,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack":{"entryPoint":5509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack":{"entryPoint":5683,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack":{"entryPoint":5401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5120,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6693,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6248,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5869,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6494,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":6708,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":4162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5544,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5718,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":5162,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6424,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":4361,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3555,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4959,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4970,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6200,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6148,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3794,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5217,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":3575,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$181":{"entryPoint":4656,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3762,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3856,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6680,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4437,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4987,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4312,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":5797,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5750,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4265,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3915,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3910,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3920,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4243,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3570,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3565,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4248,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556":{"entryPoint":5468,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d":{"entryPoint":5642,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":5360,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3812,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5235,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5910,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4199,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":3619,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$181":{"entryPoint":4674,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3866,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:24071:16","nodeType":"YulBlock","src":"0:24071:16","statements":[{"body":{"nativeSrc":"47:35:16","nodeType":"YulBlock","src":"47:35:16","statements":[{"nativeSrc":"57:19:16","nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:16","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:16","nodeType":"YulIdentifier","src":"67:5:16"},"nativeSrc":"67:9:16","nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:16","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:16","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:16","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nativeSrc":"177:28:16","nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:16","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:16","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:16","nodeType":"YulIdentifier","src":"187:6:16"},"nativeSrc":"187:12:16","nodeType":"YulFunctionCall","src":"187:12:16"},"nativeSrc":"187:12:16","nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:16","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nativeSrc":"300:28:16","nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:16","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:16","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:16","nodeType":"YulIdentifier","src":"310:6:16"},"nativeSrc":"310:12:16","nodeType":"YulFunctionCall","src":"310:12:16"},"nativeSrc":"310:12:16","nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:16","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nativeSrc":"378:105:16","nodeType":"YulBlock","src":"378:105:16","statements":[{"nativeSrc":"388:89:16","nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nativeSrc":"403:5:16","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nativeSrc":"410:66:16","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:16","nodeType":"YulIdentifier","src":"399:3:16"},"nativeSrc":"399:78:16","nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:16","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:16","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:16","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nativeSrc":"531:78:16","nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nativeSrc":"587:16:16","nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:16","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:16","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:16","nodeType":"YulIdentifier","src":"589:6:16"},"nativeSrc":"589:12:16","nodeType":"YulFunctionCall","src":"589:12:16"},"nativeSrc":"589:12:16","nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:16","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nativeSrc":"578:5:16","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:16","nodeType":"YulIdentifier","src":"561:16:16"},"nativeSrc":"561:23:16","nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nativeSrc":"551:2:16","nodeType":"YulIdentifier","src":"551:2:16"},"nativeSrc":"551:34:16","nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nativeSrc":"544:6:16","nodeType":"YulIdentifier","src":"544:6:16"},"nativeSrc":"544:42:16","nodeType":"YulFunctionCall","src":"544:42:16"},"nativeSrc":"541:62:16","nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:16","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nativeSrc":"666:86:16","nodeType":"YulBlock","src":"666:86:16","statements":[{"nativeSrc":"676:29:16","nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:16","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:16","nodeType":"YulIdentifier","src":"685:12:16"},"nativeSrc":"685:20:16","nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nativeSrc":"676:5:16","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:16","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:16","nodeType":"YulIdentifier","src":"714:25:16"},"nativeSrc":"714:32:16","nodeType":"YulFunctionCall","src":"714:32:16"},"nativeSrc":"714:32:16","nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:16","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nativeSrc":"652:3:16","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:16","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nativeSrc":"823:262:16","nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nativeSrc":"869:83:16","nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:16","nodeType":"YulIdentifier","src":"871:77:16"},"nativeSrc":"871:79:16","nodeType":"YulFunctionCall","src":"871:79:16"},"nativeSrc":"871:79:16","nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:16","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nativeSrc":"853:9:16","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nativeSrc":"840:3:16","nodeType":"YulIdentifier","src":"840:3:16"},"nativeSrc":"840:23:16","nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nativeSrc":"865:2:16","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:16","nodeType":"YulIdentifier","src":"836:3:16"},"nativeSrc":"836:32:16","nodeType":"YulFunctionCall","src":"836:32:16"},"nativeSrc":"833:119:16","nodeType":"YulIf","src":"833:119:16"},{"nativeSrc":"962:116:16","nodeType":"YulBlock","src":"962:116:16","statements":[{"nativeSrc":"977:15:16","nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nativeSrc":"991:1:16","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:16","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nativeSrc":"1006:62:16","nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:16","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nativeSrc":"1051:6:16","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nativeSrc":"1036:3:16","nodeType":"YulIdentifier","src":"1036:3:16"},"nativeSrc":"1036:22:16","nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nativeSrc":"1060:7:16","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:16","nodeType":"YulIdentifier","src":"1016:19:16"},"nativeSrc":"1016:52:16","nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:16","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:16","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nativeSrc":"804:7:16","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:16","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nativeSrc":"1133:48:16","nodeType":"YulBlock","src":"1133:48:16","statements":[{"nativeSrc":"1143:32:16","nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:16","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:16","nodeType":"YulIdentifier","src":"1161:6:16"},"nativeSrc":"1161:13:16","nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:16","nodeType":"YulIdentifier","src":"1154:6:16"},"nativeSrc":"1154:21:16","nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:16","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:16","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:16","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nativeSrc":"1246:50:16","nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:16","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nativeSrc":"1283:5:16","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:16","nodeType":"YulIdentifier","src":"1268:14:16"},"nativeSrc":"1268:21:16","nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:16","nodeType":"YulIdentifier","src":"1256:6:16"},"nativeSrc":"1256:34:16","nodeType":"YulFunctionCall","src":"1256:34:16"},"nativeSrc":"1256:34:16","nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:16","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nativeSrc":"1241:3:16","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nativeSrc":"1394:118:16","nodeType":"YulBlock","src":"1394:118:16","statements":[{"nativeSrc":"1404:26:16","nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:16","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nativeSrc":"1427:2:16","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:16","nodeType":"YulIdentifier","src":"1412:3:16"},"nativeSrc":"1412:18:16","nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:16","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:16","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:16","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nativeSrc":"1502:1:16","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:16","nodeType":"YulIdentifier","src":"1487:3:16"},"nativeSrc":"1487:17:16","nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:16","nodeType":"YulIdentifier","src":"1440:37:16"},"nativeSrc":"1440:65:16","nodeType":"YulFunctionCall","src":"1440:65:16"},"nativeSrc":"1440:65:16","nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:16","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nativeSrc":"1378:6:16","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:16","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nativeSrc":"1563:81:16","nodeType":"YulBlock","src":"1563:81:16","statements":[{"nativeSrc":"1573:65:16","nodeType":"YulAssignment","src":"1573:65:16","value":{"arguments":[{"name":"value","nativeSrc":"1588:5:16","nodeType":"YulIdentifier","src":"1588:5:16"},{"kind":"number","nativeSrc":"1595:42:16","nodeType":"YulLiteral","src":"1595:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1584:3:16","nodeType":"YulIdentifier","src":"1584:3:16"},"nativeSrc":"1584:54:16","nodeType":"YulFunctionCall","src":"1584:54:16"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:16","nodeType":"YulIdentifier","src":"1573:7:16"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1518:126:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:16","nodeType":"YulTypedName","src":"1545:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:16","nodeType":"YulTypedName","src":"1555:7:16","type":""}],"src":"1518:126:16"},{"body":{"nativeSrc":"1695:51:16","nodeType":"YulBlock","src":"1695:51:16","statements":[{"nativeSrc":"1705:35:16","nodeType":"YulAssignment","src":"1705:35:16","value":{"arguments":[{"name":"value","nativeSrc":"1734:5:16","nodeType":"YulIdentifier","src":"1734:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1716:17:16","nodeType":"YulIdentifier","src":"1716:17:16"},"nativeSrc":"1716:24:16","nodeType":"YulFunctionCall","src":"1716:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"1705:7:16","nodeType":"YulIdentifier","src":"1705:7:16"}]}]},"name":"cleanup_t_address","nativeSrc":"1650:96:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1677:5:16","nodeType":"YulTypedName","src":"1677:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1687:7:16","nodeType":"YulTypedName","src":"1687:7:16","type":""}],"src":"1650:96:16"},{"body":{"nativeSrc":"1795:79:16","nodeType":"YulBlock","src":"1795:79:16","statements":[{"body":{"nativeSrc":"1852:16:16","nodeType":"YulBlock","src":"1852:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1861:1:16","nodeType":"YulLiteral","src":"1861:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"1864:1:16","nodeType":"YulLiteral","src":"1864:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1854:6:16","nodeType":"YulIdentifier","src":"1854:6:16"},"nativeSrc":"1854:12:16","nodeType":"YulFunctionCall","src":"1854:12:16"},"nativeSrc":"1854:12:16","nodeType":"YulExpressionStatement","src":"1854:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1818:5:16","nodeType":"YulIdentifier","src":"1818:5:16"},{"arguments":[{"name":"value","nativeSrc":"1843:5:16","nodeType":"YulIdentifier","src":"1843:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1825:17:16","nodeType":"YulIdentifier","src":"1825:17:16"},"nativeSrc":"1825:24:16","nodeType":"YulFunctionCall","src":"1825:24:16"}],"functionName":{"name":"eq","nativeSrc":"1815:2:16","nodeType":"YulIdentifier","src":"1815:2:16"},"nativeSrc":"1815:35:16","nodeType":"YulFunctionCall","src":"1815:35:16"}],"functionName":{"name":"iszero","nativeSrc":"1808:6:16","nodeType":"YulIdentifier","src":"1808:6:16"},"nativeSrc":"1808:43:16","nodeType":"YulFunctionCall","src":"1808:43:16"},"nativeSrc":"1805:63:16","nodeType":"YulIf","src":"1805:63:16"}]},"name":"validator_revert_t_address","nativeSrc":"1752:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1788:5:16","nodeType":"YulTypedName","src":"1788:5:16","type":""}],"src":"1752:122:16"},{"body":{"nativeSrc":"1932:87:16","nodeType":"YulBlock","src":"1932:87:16","statements":[{"nativeSrc":"1942:29:16","nodeType":"YulAssignment","src":"1942:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"1964:6:16","nodeType":"YulIdentifier","src":"1964:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"1951:12:16","nodeType":"YulIdentifier","src":"1951:12:16"},"nativeSrc":"1951:20:16","nodeType":"YulFunctionCall","src":"1951:20:16"},"variableNames":[{"name":"value","nativeSrc":"1942:5:16","nodeType":"YulIdentifier","src":"1942:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2007:5:16","nodeType":"YulIdentifier","src":"2007:5:16"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1980:26:16","nodeType":"YulIdentifier","src":"1980:26:16"},"nativeSrc":"1980:33:16","nodeType":"YulFunctionCall","src":"1980:33:16"},"nativeSrc":"1980:33:16","nodeType":"YulExpressionStatement","src":"1980:33:16"}]},"name":"abi_decode_t_address","nativeSrc":"1880:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1910:6:16","nodeType":"YulTypedName","src":"1910:6:16","type":""},{"name":"end","nativeSrc":"1918:3:16","nodeType":"YulTypedName","src":"1918:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1926:5:16","nodeType":"YulTypedName","src":"1926:5:16","type":""}],"src":"1880:139:16"},{"body":{"nativeSrc":"2070:32:16","nodeType":"YulBlock","src":"2070:32:16","statements":[{"nativeSrc":"2080:16:16","nodeType":"YulAssignment","src":"2080:16:16","value":{"name":"value","nativeSrc":"2091:5:16","nodeType":"YulIdentifier","src":"2091:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"2080:7:16","nodeType":"YulIdentifier","src":"2080:7:16"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2025:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2052:5:16","nodeType":"YulTypedName","src":"2052:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2062:7:16","nodeType":"YulTypedName","src":"2062:7:16","type":""}],"src":"2025:77:16"},{"body":{"nativeSrc":"2151:79:16","nodeType":"YulBlock","src":"2151:79:16","statements":[{"body":{"nativeSrc":"2208:16:16","nodeType":"YulBlock","src":"2208:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2217:1:16","nodeType":"YulLiteral","src":"2217:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2220:1:16","nodeType":"YulLiteral","src":"2220:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2210:6:16","nodeType":"YulIdentifier","src":"2210:6:16"},"nativeSrc":"2210:12:16","nodeType":"YulFunctionCall","src":"2210:12:16"},"nativeSrc":"2210:12:16","nodeType":"YulExpressionStatement","src":"2210:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2174:5:16","nodeType":"YulIdentifier","src":"2174:5:16"},{"arguments":[{"name":"value","nativeSrc":"2199:5:16","nodeType":"YulIdentifier","src":"2199:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2181:17:16","nodeType":"YulIdentifier","src":"2181:17:16"},"nativeSrc":"2181:24:16","nodeType":"YulFunctionCall","src":"2181:24:16"}],"functionName":{"name":"eq","nativeSrc":"2171:2:16","nodeType":"YulIdentifier","src":"2171:2:16"},"nativeSrc":"2171:35:16","nodeType":"YulFunctionCall","src":"2171:35:16"}],"functionName":{"name":"iszero","nativeSrc":"2164:6:16","nodeType":"YulIdentifier","src":"2164:6:16"},"nativeSrc":"2164:43:16","nodeType":"YulFunctionCall","src":"2164:43:16"},"nativeSrc":"2161:63:16","nodeType":"YulIf","src":"2161:63:16"}]},"name":"validator_revert_t_uint256","nativeSrc":"2108:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2144:5:16","nodeType":"YulTypedName","src":"2144:5:16","type":""}],"src":"2108:122:16"},{"body":{"nativeSrc":"2288:87:16","nodeType":"YulBlock","src":"2288:87:16","statements":[{"nativeSrc":"2298:29:16","nodeType":"YulAssignment","src":"2298:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"2320:6:16","nodeType":"YulIdentifier","src":"2320:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"2307:12:16","nodeType":"YulIdentifier","src":"2307:12:16"},"nativeSrc":"2307:20:16","nodeType":"YulFunctionCall","src":"2307:20:16"},"variableNames":[{"name":"value","nativeSrc":"2298:5:16","nodeType":"YulIdentifier","src":"2298:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2363:5:16","nodeType":"YulIdentifier","src":"2363:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2336:26:16","nodeType":"YulIdentifier","src":"2336:26:16"},"nativeSrc":"2336:33:16","nodeType":"YulFunctionCall","src":"2336:33:16"},"nativeSrc":"2336:33:16","nodeType":"YulExpressionStatement","src":"2336:33:16"}]},"name":"abi_decode_t_uint256","nativeSrc":"2236:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2266:6:16","nodeType":"YulTypedName","src":"2266:6:16","type":""},{"name":"end","nativeSrc":"2274:3:16","nodeType":"YulTypedName","src":"2274:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2282:5:16","nodeType":"YulTypedName","src":"2282:5:16","type":""}],"src":"2236:139:16"},{"body":{"nativeSrc":"2470:28:16","nodeType":"YulBlock","src":"2470:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2487:1:16","nodeType":"YulLiteral","src":"2487:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2490:1:16","nodeType":"YulLiteral","src":"2490:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2480:6:16","nodeType":"YulIdentifier","src":"2480:6:16"},"nativeSrc":"2480:12:16","nodeType":"YulFunctionCall","src":"2480:12:16"},"nativeSrc":"2480:12:16","nodeType":"YulExpressionStatement","src":"2480:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2381:117:16","nodeType":"YulFunctionDefinition","src":"2381:117:16"},{"body":{"nativeSrc":"2593:28:16","nodeType":"YulBlock","src":"2593:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2610:1:16","nodeType":"YulLiteral","src":"2610:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2613:1:16","nodeType":"YulLiteral","src":"2613:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2603:6:16","nodeType":"YulIdentifier","src":"2603:6:16"},"nativeSrc":"2603:12:16","nodeType":"YulFunctionCall","src":"2603:12:16"},"nativeSrc":"2603:12:16","nodeType":"YulExpressionStatement","src":"2603:12:16"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"2504:117:16","nodeType":"YulFunctionDefinition","src":"2504:117:16"},{"body":{"nativeSrc":"2716:28:16","nodeType":"YulBlock","src":"2716:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2733:1:16","nodeType":"YulLiteral","src":"2733:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"2736:1:16","nodeType":"YulLiteral","src":"2736:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2726:6:16","nodeType":"YulIdentifier","src":"2726:6:16"},"nativeSrc":"2726:12:16","nodeType":"YulFunctionCall","src":"2726:12:16"},"nativeSrc":"2726:12:16","nodeType":"YulExpressionStatement","src":"2726:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2627:117:16","nodeType":"YulFunctionDefinition","src":"2627:117:16"},{"body":{"nativeSrc":"2837:478:16","nodeType":"YulBlock","src":"2837:478:16","statements":[{"body":{"nativeSrc":"2886:83:16","nodeType":"YulBlock","src":"2886:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2888:77:16","nodeType":"YulIdentifier","src":"2888:77:16"},"nativeSrc":"2888:79:16","nodeType":"YulFunctionCall","src":"2888:79:16"},"nativeSrc":"2888:79:16","nodeType":"YulExpressionStatement","src":"2888:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2865:6:16","nodeType":"YulIdentifier","src":"2865:6:16"},{"kind":"number","nativeSrc":"2873:4:16","nodeType":"YulLiteral","src":"2873:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2861:3:16","nodeType":"YulIdentifier","src":"2861:3:16"},"nativeSrc":"2861:17:16","nodeType":"YulFunctionCall","src":"2861:17:16"},{"name":"end","nativeSrc":"2880:3:16","nodeType":"YulIdentifier","src":"2880:3:16"}],"functionName":{"name":"slt","nativeSrc":"2857:3:16","nodeType":"YulIdentifier","src":"2857:3:16"},"nativeSrc":"2857:27:16","nodeType":"YulFunctionCall","src":"2857:27:16"}],"functionName":{"name":"iszero","nativeSrc":"2850:6:16","nodeType":"YulIdentifier","src":"2850:6:16"},"nativeSrc":"2850:35:16","nodeType":"YulFunctionCall","src":"2850:35:16"},"nativeSrc":"2847:122:16","nodeType":"YulIf","src":"2847:122:16"},{"nativeSrc":"2978:30:16","nodeType":"YulAssignment","src":"2978:30:16","value":{"arguments":[{"name":"offset","nativeSrc":"3001:6:16","nodeType":"YulIdentifier","src":"3001:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"2988:12:16","nodeType":"YulIdentifier","src":"2988:12:16"},"nativeSrc":"2988:20:16","nodeType":"YulFunctionCall","src":"2988:20:16"},"variableNames":[{"name":"length","nativeSrc":"2978:6:16","nodeType":"YulIdentifier","src":"2978:6:16"}]},{"body":{"nativeSrc":"3051:83:16","nodeType":"YulBlock","src":"3051:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"3053:77:16","nodeType":"YulIdentifier","src":"3053:77:16"},"nativeSrc":"3053:79:16","nodeType":"YulFunctionCall","src":"3053:79:16"},"nativeSrc":"3053:79:16","nodeType":"YulExpressionStatement","src":"3053:79:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3023:6:16","nodeType":"YulIdentifier","src":"3023:6:16"},{"kind":"number","nativeSrc":"3031:18:16","nodeType":"YulLiteral","src":"3031:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3020:2:16","nodeType":"YulIdentifier","src":"3020:2:16"},"nativeSrc":"3020:30:16","nodeType":"YulFunctionCall","src":"3020:30:16"},"nativeSrc":"3017:117:16","nodeType":"YulIf","src":"3017:117:16"},{"nativeSrc":"3143:29:16","nodeType":"YulAssignment","src":"3143:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"3159:6:16","nodeType":"YulIdentifier","src":"3159:6:16"},{"kind":"number","nativeSrc":"3167:4:16","nodeType":"YulLiteral","src":"3167:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3155:3:16","nodeType":"YulIdentifier","src":"3155:3:16"},"nativeSrc":"3155:17:16","nodeType":"YulFunctionCall","src":"3155:17:16"},"variableNames":[{"name":"arrayPos","nativeSrc":"3143:8:16","nodeType":"YulIdentifier","src":"3143:8:16"}]},{"body":{"nativeSrc":"3226:83:16","nodeType":"YulBlock","src":"3226:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3228:77:16","nodeType":"YulIdentifier","src":"3228:77:16"},"nativeSrc":"3228:79:16","nodeType":"YulFunctionCall","src":"3228:79:16"},"nativeSrc":"3228:79:16","nodeType":"YulExpressionStatement","src":"3228:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"3191:8:16","nodeType":"YulIdentifier","src":"3191:8:16"},{"arguments":[{"name":"length","nativeSrc":"3205:6:16","nodeType":"YulIdentifier","src":"3205:6:16"},{"kind":"number","nativeSrc":"3213:4:16","nodeType":"YulLiteral","src":"3213:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"3201:3:16","nodeType":"YulIdentifier","src":"3201:3:16"},"nativeSrc":"3201:17:16","nodeType":"YulFunctionCall","src":"3201:17:16"}],"functionName":{"name":"add","nativeSrc":"3187:3:16","nodeType":"YulIdentifier","src":"3187:3:16"},"nativeSrc":"3187:32:16","nodeType":"YulFunctionCall","src":"3187:32:16"},{"name":"end","nativeSrc":"3221:3:16","nodeType":"YulIdentifier","src":"3221:3:16"}],"functionName":{"name":"gt","nativeSrc":"3184:2:16","nodeType":"YulIdentifier","src":"3184:2:16"},"nativeSrc":"3184:41:16","nodeType":"YulFunctionCall","src":"3184:41:16"},"nativeSrc":"3181:128:16","nodeType":"YulIf","src":"3181:128:16"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"2763:552:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2804:6:16","nodeType":"YulTypedName","src":"2804:6:16","type":""},{"name":"end","nativeSrc":"2812:3:16","nodeType":"YulTypedName","src":"2812:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2820:8:16","nodeType":"YulTypedName","src":"2820:8:16","type":""},{"name":"length","nativeSrc":"2830:6:16","nodeType":"YulTypedName","src":"2830:6:16","type":""}],"src":"2763:552:16"},{"body":{"nativeSrc":"3457:827:16","nodeType":"YulBlock","src":"3457:827:16","statements":[{"body":{"nativeSrc":"3504:83:16","nodeType":"YulBlock","src":"3504:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3506:77:16","nodeType":"YulIdentifier","src":"3506:77:16"},"nativeSrc":"3506:79:16","nodeType":"YulFunctionCall","src":"3506:79:16"},"nativeSrc":"3506:79:16","nodeType":"YulExpressionStatement","src":"3506:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3478:7:16","nodeType":"YulIdentifier","src":"3478:7:16"},{"name":"headStart","nativeSrc":"3487:9:16","nodeType":"YulIdentifier","src":"3487:9:16"}],"functionName":{"name":"sub","nativeSrc":"3474:3:16","nodeType":"YulIdentifier","src":"3474:3:16"},"nativeSrc":"3474:23:16","nodeType":"YulFunctionCall","src":"3474:23:16"},{"kind":"number","nativeSrc":"3499:3:16","nodeType":"YulLiteral","src":"3499:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"3470:3:16","nodeType":"YulIdentifier","src":"3470:3:16"},"nativeSrc":"3470:33:16","nodeType":"YulFunctionCall","src":"3470:33:16"},"nativeSrc":"3467:120:16","nodeType":"YulIf","src":"3467:120:16"},{"nativeSrc":"3597:117:16","nodeType":"YulBlock","src":"3597:117:16","statements":[{"nativeSrc":"3612:15:16","nodeType":"YulVariableDeclaration","src":"3612:15:16","value":{"kind":"number","nativeSrc":"3626:1:16","nodeType":"YulLiteral","src":"3626:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3616:6:16","nodeType":"YulTypedName","src":"3616:6:16","type":""}]},{"nativeSrc":"3641:63:16","nodeType":"YulAssignment","src":"3641:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3676:9:16","nodeType":"YulIdentifier","src":"3676:9:16"},{"name":"offset","nativeSrc":"3687:6:16","nodeType":"YulIdentifier","src":"3687:6:16"}],"functionName":{"name":"add","nativeSrc":"3672:3:16","nodeType":"YulIdentifier","src":"3672:3:16"},"nativeSrc":"3672:22:16","nodeType":"YulFunctionCall","src":"3672:22:16"},{"name":"dataEnd","nativeSrc":"3696:7:16","nodeType":"YulIdentifier","src":"3696:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3651:20:16","nodeType":"YulIdentifier","src":"3651:20:16"},"nativeSrc":"3651:53:16","nodeType":"YulFunctionCall","src":"3651:53:16"},"variableNames":[{"name":"value0","nativeSrc":"3641:6:16","nodeType":"YulIdentifier","src":"3641:6:16"}]}]},{"nativeSrc":"3724:118:16","nodeType":"YulBlock","src":"3724:118:16","statements":[{"nativeSrc":"3739:16:16","nodeType":"YulVariableDeclaration","src":"3739:16:16","value":{"kind":"number","nativeSrc":"3753:2:16","nodeType":"YulLiteral","src":"3753:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3743:6:16","nodeType":"YulTypedName","src":"3743:6:16","type":""}]},{"nativeSrc":"3769:63:16","nodeType":"YulAssignment","src":"3769:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3804:9:16","nodeType":"YulIdentifier","src":"3804:9:16"},{"name":"offset","nativeSrc":"3815:6:16","nodeType":"YulIdentifier","src":"3815:6:16"}],"functionName":{"name":"add","nativeSrc":"3800:3:16","nodeType":"YulIdentifier","src":"3800:3:16"},"nativeSrc":"3800:22:16","nodeType":"YulFunctionCall","src":"3800:22:16"},{"name":"dataEnd","nativeSrc":"3824:7:16","nodeType":"YulIdentifier","src":"3824:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3779:20:16","nodeType":"YulIdentifier","src":"3779:20:16"},"nativeSrc":"3779:53:16","nodeType":"YulFunctionCall","src":"3779:53:16"},"variableNames":[{"name":"value1","nativeSrc":"3769:6:16","nodeType":"YulIdentifier","src":"3769:6:16"}]}]},{"nativeSrc":"3852:118:16","nodeType":"YulBlock","src":"3852:118:16","statements":[{"nativeSrc":"3867:16:16","nodeType":"YulVariableDeclaration","src":"3867:16:16","value":{"kind":"number","nativeSrc":"3881:2:16","nodeType":"YulLiteral","src":"3881:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3871:6:16","nodeType":"YulTypedName","src":"3871:6:16","type":""}]},{"nativeSrc":"3897:63:16","nodeType":"YulAssignment","src":"3897:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3932:9:16","nodeType":"YulIdentifier","src":"3932:9:16"},{"name":"offset","nativeSrc":"3943:6:16","nodeType":"YulIdentifier","src":"3943:6:16"}],"functionName":{"name":"add","nativeSrc":"3928:3:16","nodeType":"YulIdentifier","src":"3928:3:16"},"nativeSrc":"3928:22:16","nodeType":"YulFunctionCall","src":"3928:22:16"},{"name":"dataEnd","nativeSrc":"3952:7:16","nodeType":"YulIdentifier","src":"3952:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3907:20:16","nodeType":"YulIdentifier","src":"3907:20:16"},"nativeSrc":"3907:53:16","nodeType":"YulFunctionCall","src":"3907:53:16"},"variableNames":[{"name":"value2","nativeSrc":"3897:6:16","nodeType":"YulIdentifier","src":"3897:6:16"}]}]},{"nativeSrc":"3980:297:16","nodeType":"YulBlock","src":"3980:297:16","statements":[{"nativeSrc":"3995:46:16","nodeType":"YulVariableDeclaration","src":"3995:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4026:9:16","nodeType":"YulIdentifier","src":"4026:9:16"},{"kind":"number","nativeSrc":"4037:2:16","nodeType":"YulLiteral","src":"4037:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4022:3:16","nodeType":"YulIdentifier","src":"4022:3:16"},"nativeSrc":"4022:18:16","nodeType":"YulFunctionCall","src":"4022:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"4009:12:16","nodeType":"YulIdentifier","src":"4009:12:16"},"nativeSrc":"4009:32:16","nodeType":"YulFunctionCall","src":"4009:32:16"},"variables":[{"name":"offset","nativeSrc":"3999:6:16","nodeType":"YulTypedName","src":"3999:6:16","type":""}]},{"body":{"nativeSrc":"4088:83:16","nodeType":"YulBlock","src":"4088:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4090:77:16","nodeType":"YulIdentifier","src":"4090:77:16"},"nativeSrc":"4090:79:16","nodeType":"YulFunctionCall","src":"4090:79:16"},"nativeSrc":"4090:79:16","nodeType":"YulExpressionStatement","src":"4090:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4060:6:16","nodeType":"YulIdentifier","src":"4060:6:16"},{"kind":"number","nativeSrc":"4068:18:16","nodeType":"YulLiteral","src":"4068:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4057:2:16","nodeType":"YulIdentifier","src":"4057:2:16"},"nativeSrc":"4057:30:16","nodeType":"YulFunctionCall","src":"4057:30:16"},"nativeSrc":"4054:117:16","nodeType":"YulIf","src":"4054:117:16"},{"nativeSrc":"4185:82:16","nodeType":"YulAssignment","src":"4185:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4239:9:16","nodeType":"YulIdentifier","src":"4239:9:16"},{"name":"offset","nativeSrc":"4250:6:16","nodeType":"YulIdentifier","src":"4250:6:16"}],"functionName":{"name":"add","nativeSrc":"4235:3:16","nodeType":"YulIdentifier","src":"4235:3:16"},"nativeSrc":"4235:22:16","nodeType":"YulFunctionCall","src":"4235:22:16"},{"name":"dataEnd","nativeSrc":"4259:7:16","nodeType":"YulIdentifier","src":"4259:7:16"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"4203:31:16","nodeType":"YulIdentifier","src":"4203:31:16"},"nativeSrc":"4203:64:16","nodeType":"YulFunctionCall","src":"4203:64:16"},"variableNames":[{"name":"value3","nativeSrc":"4185:6:16","nodeType":"YulIdentifier","src":"4185:6:16"},{"name":"value4","nativeSrc":"4193:6:16","nodeType":"YulIdentifier","src":"4193:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"3321:963:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3395:9:16","nodeType":"YulTypedName","src":"3395:9:16","type":""},{"name":"dataEnd","nativeSrc":"3406:7:16","nodeType":"YulTypedName","src":"3406:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3418:6:16","nodeType":"YulTypedName","src":"3418:6:16","type":""},{"name":"value1","nativeSrc":"3426:6:16","nodeType":"YulTypedName","src":"3426:6:16","type":""},{"name":"value2","nativeSrc":"3434:6:16","nodeType":"YulTypedName","src":"3434:6:16","type":""},{"name":"value3","nativeSrc":"3442:6:16","nodeType":"YulTypedName","src":"3442:6:16","type":""},{"name":"value4","nativeSrc":"3450:6:16","nodeType":"YulTypedName","src":"3450:6:16","type":""}],"src":"3321:963:16"},{"body":{"nativeSrc":"4353:52:16","nodeType":"YulBlock","src":"4353:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4370:3:16","nodeType":"YulIdentifier","src":"4370:3:16"},{"arguments":[{"name":"value","nativeSrc":"4392:5:16","nodeType":"YulIdentifier","src":"4392:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"4375:16:16","nodeType":"YulIdentifier","src":"4375:16:16"},"nativeSrc":"4375:23:16","nodeType":"YulFunctionCall","src":"4375:23:16"}],"functionName":{"name":"mstore","nativeSrc":"4363:6:16","nodeType":"YulIdentifier","src":"4363:6:16"},"nativeSrc":"4363:36:16","nodeType":"YulFunctionCall","src":"4363:36:16"},"nativeSrc":"4363:36:16","nodeType":"YulExpressionStatement","src":"4363:36:16"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"4290:115:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4341:5:16","nodeType":"YulTypedName","src":"4341:5:16","type":""},{"name":"pos","nativeSrc":"4348:3:16","nodeType":"YulTypedName","src":"4348:3:16","type":""}],"src":"4290:115:16"},{"body":{"nativeSrc":"4507:122:16","nodeType":"YulBlock","src":"4507:122:16","statements":[{"nativeSrc":"4517:26:16","nodeType":"YulAssignment","src":"4517:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"4529:9:16","nodeType":"YulIdentifier","src":"4529:9:16"},{"kind":"number","nativeSrc":"4540:2:16","nodeType":"YulLiteral","src":"4540:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4525:3:16","nodeType":"YulIdentifier","src":"4525:3:16"},"nativeSrc":"4525:18:16","nodeType":"YulFunctionCall","src":"4525:18:16"},"variableNames":[{"name":"tail","nativeSrc":"4517:4:16","nodeType":"YulIdentifier","src":"4517:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4595:6:16","nodeType":"YulIdentifier","src":"4595:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"4608:9:16","nodeType":"YulIdentifier","src":"4608:9:16"},{"kind":"number","nativeSrc":"4619:1:16","nodeType":"YulLiteral","src":"4619:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4604:3:16","nodeType":"YulIdentifier","src":"4604:3:16"},"nativeSrc":"4604:17:16","nodeType":"YulFunctionCall","src":"4604:17:16"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"4553:41:16","nodeType":"YulIdentifier","src":"4553:41:16"},"nativeSrc":"4553:69:16","nodeType":"YulFunctionCall","src":"4553:69:16"},"nativeSrc":"4553:69:16","nodeType":"YulExpressionStatement","src":"4553:69:16"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"4411:218:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4479:9:16","nodeType":"YulTypedName","src":"4479:9:16","type":""},{"name":"value0","nativeSrc":"4491:6:16","nodeType":"YulTypedName","src":"4491:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4502:4:16","nodeType":"YulTypedName","src":"4502:4:16","type":""}],"src":"4411:218:16"},{"body":{"nativeSrc":"4680:32:16","nodeType":"YulBlock","src":"4680:32:16","statements":[{"nativeSrc":"4690:16:16","nodeType":"YulAssignment","src":"4690:16:16","value":{"name":"value","nativeSrc":"4701:5:16","nodeType":"YulIdentifier","src":"4701:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"4690:7:16","nodeType":"YulIdentifier","src":"4690:7:16"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4635:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4662:5:16","nodeType":"YulTypedName","src":"4662:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4672:7:16","nodeType":"YulTypedName","src":"4672:7:16","type":""}],"src":"4635:77:16"},{"body":{"nativeSrc":"4761:79:16","nodeType":"YulBlock","src":"4761:79:16","statements":[{"body":{"nativeSrc":"4818:16:16","nodeType":"YulBlock","src":"4818:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4827:1:16","nodeType":"YulLiteral","src":"4827:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"4830:1:16","nodeType":"YulLiteral","src":"4830:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4820:6:16","nodeType":"YulIdentifier","src":"4820:6:16"},"nativeSrc":"4820:12:16","nodeType":"YulFunctionCall","src":"4820:12:16"},"nativeSrc":"4820:12:16","nodeType":"YulExpressionStatement","src":"4820:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4784:5:16","nodeType":"YulIdentifier","src":"4784:5:16"},{"arguments":[{"name":"value","nativeSrc":"4809:5:16","nodeType":"YulIdentifier","src":"4809:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4791:17:16","nodeType":"YulIdentifier","src":"4791:17:16"},"nativeSrc":"4791:24:16","nodeType":"YulFunctionCall","src":"4791:24:16"}],"functionName":{"name":"eq","nativeSrc":"4781:2:16","nodeType":"YulIdentifier","src":"4781:2:16"},"nativeSrc":"4781:35:16","nodeType":"YulFunctionCall","src":"4781:35:16"}],"functionName":{"name":"iszero","nativeSrc":"4774:6:16","nodeType":"YulIdentifier","src":"4774:6:16"},"nativeSrc":"4774:43:16","nodeType":"YulFunctionCall","src":"4774:43:16"},"nativeSrc":"4771:63:16","nodeType":"YulIf","src":"4771:63:16"}]},"name":"validator_revert_t_bytes32","nativeSrc":"4718:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4754:5:16","nodeType":"YulTypedName","src":"4754:5:16","type":""}],"src":"4718:122:16"},{"body":{"nativeSrc":"4898:87:16","nodeType":"YulBlock","src":"4898:87:16","statements":[{"nativeSrc":"4908:29:16","nodeType":"YulAssignment","src":"4908:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"4930:6:16","nodeType":"YulIdentifier","src":"4930:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"4917:12:16","nodeType":"YulIdentifier","src":"4917:12:16"},"nativeSrc":"4917:20:16","nodeType":"YulFunctionCall","src":"4917:20:16"},"variableNames":[{"name":"value","nativeSrc":"4908:5:16","nodeType":"YulIdentifier","src":"4908:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4973:5:16","nodeType":"YulIdentifier","src":"4973:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"4946:26:16","nodeType":"YulIdentifier","src":"4946:26:16"},"nativeSrc":"4946:33:16","nodeType":"YulFunctionCall","src":"4946:33:16"},"nativeSrc":"4946:33:16","nodeType":"YulExpressionStatement","src":"4946:33:16"}]},"name":"abi_decode_t_bytes32","nativeSrc":"4846:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4876:6:16","nodeType":"YulTypedName","src":"4876:6:16","type":""},{"name":"end","nativeSrc":"4884:3:16","nodeType":"YulTypedName","src":"4884:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4892:5:16","nodeType":"YulTypedName","src":"4892:5:16","type":""}],"src":"4846:139:16"},{"body":{"nativeSrc":"5080:28:16","nodeType":"YulBlock","src":"5080:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5097:1:16","nodeType":"YulLiteral","src":"5097:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5100:1:16","nodeType":"YulLiteral","src":"5100:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5090:6:16","nodeType":"YulIdentifier","src":"5090:6:16"},"nativeSrc":"5090:12:16","nodeType":"YulFunctionCall","src":"5090:12:16"},"nativeSrc":"5090:12:16","nodeType":"YulExpressionStatement","src":"5090:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4991:117:16","nodeType":"YulFunctionDefinition","src":"4991:117:16"},{"body":{"nativeSrc":"5162:54:16","nodeType":"YulBlock","src":"5162:54:16","statements":[{"nativeSrc":"5172:38:16","nodeType":"YulAssignment","src":"5172:38:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5190:5:16","nodeType":"YulIdentifier","src":"5190:5:16"},{"kind":"number","nativeSrc":"5197:2:16","nodeType":"YulLiteral","src":"5197:2:16","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5186:3:16","nodeType":"YulIdentifier","src":"5186:3:16"},"nativeSrc":"5186:14:16","nodeType":"YulFunctionCall","src":"5186:14:16"},{"arguments":[{"kind":"number","nativeSrc":"5206:2:16","nodeType":"YulLiteral","src":"5206:2:16","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5202:3:16","nodeType":"YulIdentifier","src":"5202:3:16"},"nativeSrc":"5202:7:16","nodeType":"YulFunctionCall","src":"5202:7:16"}],"functionName":{"name":"and","nativeSrc":"5182:3:16","nodeType":"YulIdentifier","src":"5182:3:16"},"nativeSrc":"5182:28:16","nodeType":"YulFunctionCall","src":"5182:28:16"},"variableNames":[{"name":"result","nativeSrc":"5172:6:16","nodeType":"YulIdentifier","src":"5172:6:16"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"5114:102:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5145:5:16","nodeType":"YulTypedName","src":"5145:5:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5155:6:16","nodeType":"YulTypedName","src":"5155:6:16","type":""}],"src":"5114:102:16"},{"body":{"nativeSrc":"5250:152:16","nodeType":"YulBlock","src":"5250:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5267:1:16","nodeType":"YulLiteral","src":"5267:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5270:77:16","nodeType":"YulLiteral","src":"5270:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5260:6:16","nodeType":"YulIdentifier","src":"5260:6:16"},"nativeSrc":"5260:88:16","nodeType":"YulFunctionCall","src":"5260:88:16"},"nativeSrc":"5260:88:16","nodeType":"YulExpressionStatement","src":"5260:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5364:1:16","nodeType":"YulLiteral","src":"5364:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"5367:4:16","nodeType":"YulLiteral","src":"5367:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5357:6:16","nodeType":"YulIdentifier","src":"5357:6:16"},"nativeSrc":"5357:15:16","nodeType":"YulFunctionCall","src":"5357:15:16"},"nativeSrc":"5357:15:16","nodeType":"YulExpressionStatement","src":"5357:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5388:1:16","nodeType":"YulLiteral","src":"5388:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5391:4:16","nodeType":"YulLiteral","src":"5391:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5381:6:16","nodeType":"YulIdentifier","src":"5381:6:16"},"nativeSrc":"5381:15:16","nodeType":"YulFunctionCall","src":"5381:15:16"},"nativeSrc":"5381:15:16","nodeType":"YulExpressionStatement","src":"5381:15:16"}]},"name":"panic_error_0x41","nativeSrc":"5222:180:16","nodeType":"YulFunctionDefinition","src":"5222:180:16"},{"body":{"nativeSrc":"5451:238:16","nodeType":"YulBlock","src":"5451:238:16","statements":[{"nativeSrc":"5461:58:16","nodeType":"YulVariableDeclaration","src":"5461:58:16","value":{"arguments":[{"name":"memPtr","nativeSrc":"5483:6:16","nodeType":"YulIdentifier","src":"5483:6:16"},{"arguments":[{"name":"size","nativeSrc":"5513:4:16","nodeType":"YulIdentifier","src":"5513:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5491:21:16","nodeType":"YulIdentifier","src":"5491:21:16"},"nativeSrc":"5491:27:16","nodeType":"YulFunctionCall","src":"5491:27:16"}],"functionName":{"name":"add","nativeSrc":"5479:3:16","nodeType":"YulIdentifier","src":"5479:3:16"},"nativeSrc":"5479:40:16","nodeType":"YulFunctionCall","src":"5479:40:16"},"variables":[{"name":"newFreePtr","nativeSrc":"5465:10:16","nodeType":"YulTypedName","src":"5465:10:16","type":""}]},{"body":{"nativeSrc":"5630:22:16","nodeType":"YulBlock","src":"5630:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5632:16:16","nodeType":"YulIdentifier","src":"5632:16:16"},"nativeSrc":"5632:18:16","nodeType":"YulFunctionCall","src":"5632:18:16"},"nativeSrc":"5632:18:16","nodeType":"YulExpressionStatement","src":"5632:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5573:10:16","nodeType":"YulIdentifier","src":"5573:10:16"},{"kind":"number","nativeSrc":"5585:18:16","nodeType":"YulLiteral","src":"5585:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5570:2:16","nodeType":"YulIdentifier","src":"5570:2:16"},"nativeSrc":"5570:34:16","nodeType":"YulFunctionCall","src":"5570:34:16"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5609:10:16","nodeType":"YulIdentifier","src":"5609:10:16"},{"name":"memPtr","nativeSrc":"5621:6:16","nodeType":"YulIdentifier","src":"5621:6:16"}],"functionName":{"name":"lt","nativeSrc":"5606:2:16","nodeType":"YulIdentifier","src":"5606:2:16"},"nativeSrc":"5606:22:16","nodeType":"YulFunctionCall","src":"5606:22:16"}],"functionName":{"name":"or","nativeSrc":"5567:2:16","nodeType":"YulIdentifier","src":"5567:2:16"},"nativeSrc":"5567:62:16","nodeType":"YulFunctionCall","src":"5567:62:16"},"nativeSrc":"5564:88:16","nodeType":"YulIf","src":"5564:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5668:2:16","nodeType":"YulLiteral","src":"5668:2:16","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5672:10:16","nodeType":"YulIdentifier","src":"5672:10:16"}],"functionName":{"name":"mstore","nativeSrc":"5661:6:16","nodeType":"YulIdentifier","src":"5661:6:16"},"nativeSrc":"5661:22:16","nodeType":"YulFunctionCall","src":"5661:22:16"},"nativeSrc":"5661:22:16","nodeType":"YulExpressionStatement","src":"5661:22:16"}]},"name":"finalize_allocation","nativeSrc":"5408:281:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5437:6:16","nodeType":"YulTypedName","src":"5437:6:16","type":""},{"name":"size","nativeSrc":"5445:4:16","nodeType":"YulTypedName","src":"5445:4:16","type":""}],"src":"5408:281:16"},{"body":{"nativeSrc":"5736:88:16","nodeType":"YulBlock","src":"5736:88:16","statements":[{"nativeSrc":"5746:30:16","nodeType":"YulAssignment","src":"5746:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"5756:18:16","nodeType":"YulIdentifier","src":"5756:18:16"},"nativeSrc":"5756:20:16","nodeType":"YulFunctionCall","src":"5756:20:16"},"variableNames":[{"name":"memPtr","nativeSrc":"5746:6:16","nodeType":"YulIdentifier","src":"5746:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5805:6:16","nodeType":"YulIdentifier","src":"5805:6:16"},{"name":"size","nativeSrc":"5813:4:16","nodeType":"YulIdentifier","src":"5813:4:16"}],"functionName":{"name":"finalize_allocation","nativeSrc":"5785:19:16","nodeType":"YulIdentifier","src":"5785:19:16"},"nativeSrc":"5785:33:16","nodeType":"YulFunctionCall","src":"5785:33:16"},"nativeSrc":"5785:33:16","nodeType":"YulExpressionStatement","src":"5785:33:16"}]},"name":"allocate_memory","nativeSrc":"5695:129:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"5720:4:16","nodeType":"YulTypedName","src":"5720:4:16","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"5729:6:16","nodeType":"YulTypedName","src":"5729:6:16","type":""}],"src":"5695:129:16"},{"body":{"nativeSrc":"5896:241:16","nodeType":"YulBlock","src":"5896:241:16","statements":[{"body":{"nativeSrc":"6001:22:16","nodeType":"YulBlock","src":"6001:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6003:16:16","nodeType":"YulIdentifier","src":"6003:16:16"},"nativeSrc":"6003:18:16","nodeType":"YulFunctionCall","src":"6003:18:16"},"nativeSrc":"6003:18:16","nodeType":"YulExpressionStatement","src":"6003:18:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5973:6:16","nodeType":"YulIdentifier","src":"5973:6:16"},{"kind":"number","nativeSrc":"5981:18:16","nodeType":"YulLiteral","src":"5981:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5970:2:16","nodeType":"YulIdentifier","src":"5970:2:16"},"nativeSrc":"5970:30:16","nodeType":"YulFunctionCall","src":"5970:30:16"},"nativeSrc":"5967:56:16","nodeType":"YulIf","src":"5967:56:16"},{"nativeSrc":"6033:37:16","nodeType":"YulAssignment","src":"6033:37:16","value":{"arguments":[{"name":"length","nativeSrc":"6063:6:16","nodeType":"YulIdentifier","src":"6063:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6041:21:16","nodeType":"YulIdentifier","src":"6041:21:16"},"nativeSrc":"6041:29:16","nodeType":"YulFunctionCall","src":"6041:29:16"},"variableNames":[{"name":"size","nativeSrc":"6033:4:16","nodeType":"YulIdentifier","src":"6033:4:16"}]},{"nativeSrc":"6107:23:16","nodeType":"YulAssignment","src":"6107:23:16","value":{"arguments":[{"name":"size","nativeSrc":"6119:4:16","nodeType":"YulIdentifier","src":"6119:4:16"},{"kind":"number","nativeSrc":"6125:4:16","nodeType":"YulLiteral","src":"6125:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6115:3:16","nodeType":"YulIdentifier","src":"6115:3:16"},"nativeSrc":"6115:15:16","nodeType":"YulFunctionCall","src":"6115:15:16"},"variableNames":[{"name":"size","nativeSrc":"6107:4:16","nodeType":"YulIdentifier","src":"6107:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"5830:307:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"5880:6:16","nodeType":"YulTypedName","src":"5880:6:16","type":""}],"returnVariables":[{"name":"size","nativeSrc":"5891:4:16","nodeType":"YulTypedName","src":"5891:4:16","type":""}],"src":"5830:307:16"},{"body":{"nativeSrc":"6207:84:16","nodeType":"YulBlock","src":"6207:84:16","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6231:3:16","nodeType":"YulIdentifier","src":"6231:3:16"},{"name":"src","nativeSrc":"6236:3:16","nodeType":"YulIdentifier","src":"6236:3:16"},{"name":"length","nativeSrc":"6241:6:16","nodeType":"YulIdentifier","src":"6241:6:16"}],"functionName":{"name":"calldatacopy","nativeSrc":"6218:12:16","nodeType":"YulIdentifier","src":"6218:12:16"},"nativeSrc":"6218:30:16","nodeType":"YulFunctionCall","src":"6218:30:16"},"nativeSrc":"6218:30:16","nodeType":"YulExpressionStatement","src":"6218:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6268:3:16","nodeType":"YulIdentifier","src":"6268:3:16"},{"name":"length","nativeSrc":"6273:6:16","nodeType":"YulIdentifier","src":"6273:6:16"}],"functionName":{"name":"add","nativeSrc":"6264:3:16","nodeType":"YulIdentifier","src":"6264:3:16"},"nativeSrc":"6264:16:16","nodeType":"YulFunctionCall","src":"6264:16:16"},{"kind":"number","nativeSrc":"6282:1:16","nodeType":"YulLiteral","src":"6282:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6257:6:16","nodeType":"YulIdentifier","src":"6257:6:16"},"nativeSrc":"6257:27:16","nodeType":"YulFunctionCall","src":"6257:27:16"},"nativeSrc":"6257:27:16","nodeType":"YulExpressionStatement","src":"6257:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6143:148:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6189:3:16","nodeType":"YulTypedName","src":"6189:3:16","type":""},{"name":"dst","nativeSrc":"6194:3:16","nodeType":"YulTypedName","src":"6194:3:16","type":""},{"name":"length","nativeSrc":"6199:6:16","nodeType":"YulTypedName","src":"6199:6:16","type":""}],"src":"6143:148:16"},{"body":{"nativeSrc":"6380:340:16","nodeType":"YulBlock","src":"6380:340:16","statements":[{"nativeSrc":"6390:74:16","nodeType":"YulAssignment","src":"6390:74:16","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6456:6:16","nodeType":"YulIdentifier","src":"6456:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6415:40:16","nodeType":"YulIdentifier","src":"6415:40:16"},"nativeSrc":"6415:48:16","nodeType":"YulFunctionCall","src":"6415:48:16"}],"functionName":{"name":"allocate_memory","nativeSrc":"6399:15:16","nodeType":"YulIdentifier","src":"6399:15:16"},"nativeSrc":"6399:65:16","nodeType":"YulFunctionCall","src":"6399:65:16"},"variableNames":[{"name":"array","nativeSrc":"6390:5:16","nodeType":"YulIdentifier","src":"6390:5:16"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6480:5:16","nodeType":"YulIdentifier","src":"6480:5:16"},{"name":"length","nativeSrc":"6487:6:16","nodeType":"YulIdentifier","src":"6487:6:16"}],"functionName":{"name":"mstore","nativeSrc":"6473:6:16","nodeType":"YulIdentifier","src":"6473:6:16"},"nativeSrc":"6473:21:16","nodeType":"YulFunctionCall","src":"6473:21:16"},"nativeSrc":"6473:21:16","nodeType":"YulExpressionStatement","src":"6473:21:16"},{"nativeSrc":"6503:27:16","nodeType":"YulVariableDeclaration","src":"6503:27:16","value":{"arguments":[{"name":"array","nativeSrc":"6518:5:16","nodeType":"YulIdentifier","src":"6518:5:16"},{"kind":"number","nativeSrc":"6525:4:16","nodeType":"YulLiteral","src":"6525:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6514:3:16","nodeType":"YulIdentifier","src":"6514:3:16"},"nativeSrc":"6514:16:16","nodeType":"YulFunctionCall","src":"6514:16:16"},"variables":[{"name":"dst","nativeSrc":"6507:3:16","nodeType":"YulTypedName","src":"6507:3:16","type":""}]},{"body":{"nativeSrc":"6568:83:16","nodeType":"YulBlock","src":"6568:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6570:77:16","nodeType":"YulIdentifier","src":"6570:77:16"},"nativeSrc":"6570:79:16","nodeType":"YulFunctionCall","src":"6570:79:16"},"nativeSrc":"6570:79:16","nodeType":"YulExpressionStatement","src":"6570:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6549:3:16","nodeType":"YulIdentifier","src":"6549:3:16"},{"name":"length","nativeSrc":"6554:6:16","nodeType":"YulIdentifier","src":"6554:6:16"}],"functionName":{"name":"add","nativeSrc":"6545:3:16","nodeType":"YulIdentifier","src":"6545:3:16"},"nativeSrc":"6545:16:16","nodeType":"YulFunctionCall","src":"6545:16:16"},{"name":"end","nativeSrc":"6563:3:16","nodeType":"YulIdentifier","src":"6563:3:16"}],"functionName":{"name":"gt","nativeSrc":"6542:2:16","nodeType":"YulIdentifier","src":"6542:2:16"},"nativeSrc":"6542:25:16","nodeType":"YulFunctionCall","src":"6542:25:16"},"nativeSrc":"6539:112:16","nodeType":"YulIf","src":"6539:112:16"},{"expression":{"arguments":[{"name":"src","nativeSrc":"6697:3:16","nodeType":"YulIdentifier","src":"6697:3:16"},{"name":"dst","nativeSrc":"6702:3:16","nodeType":"YulIdentifier","src":"6702:3:16"},{"name":"length","nativeSrc":"6707:6:16","nodeType":"YulIdentifier","src":"6707:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6660:36:16","nodeType":"YulIdentifier","src":"6660:36:16"},"nativeSrc":"6660:54:16","nodeType":"YulFunctionCall","src":"6660:54:16"},"nativeSrc":"6660:54:16","nodeType":"YulExpressionStatement","src":"6660:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6297:423:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6353:3:16","nodeType":"YulTypedName","src":"6353:3:16","type":""},{"name":"length","nativeSrc":"6358:6:16","nodeType":"YulTypedName","src":"6358:6:16","type":""},{"name":"end","nativeSrc":"6366:3:16","nodeType":"YulTypedName","src":"6366:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6374:5:16","nodeType":"YulTypedName","src":"6374:5:16","type":""}],"src":"6297:423:16"},{"body":{"nativeSrc":"6800:277:16","nodeType":"YulBlock","src":"6800:277:16","statements":[{"body":{"nativeSrc":"6849:83:16","nodeType":"YulBlock","src":"6849:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6851:77:16","nodeType":"YulIdentifier","src":"6851:77:16"},"nativeSrc":"6851:79:16","nodeType":"YulFunctionCall","src":"6851:79:16"},"nativeSrc":"6851:79:16","nodeType":"YulExpressionStatement","src":"6851:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6828:6:16","nodeType":"YulIdentifier","src":"6828:6:16"},{"kind":"number","nativeSrc":"6836:4:16","nodeType":"YulLiteral","src":"6836:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6824:3:16","nodeType":"YulIdentifier","src":"6824:3:16"},"nativeSrc":"6824:17:16","nodeType":"YulFunctionCall","src":"6824:17:16"},{"name":"end","nativeSrc":"6843:3:16","nodeType":"YulIdentifier","src":"6843:3:16"}],"functionName":{"name":"slt","nativeSrc":"6820:3:16","nodeType":"YulIdentifier","src":"6820:3:16"},"nativeSrc":"6820:27:16","nodeType":"YulFunctionCall","src":"6820:27:16"}],"functionName":{"name":"iszero","nativeSrc":"6813:6:16","nodeType":"YulIdentifier","src":"6813:6:16"},"nativeSrc":"6813:35:16","nodeType":"YulFunctionCall","src":"6813:35:16"},"nativeSrc":"6810:122:16","nodeType":"YulIf","src":"6810:122:16"},{"nativeSrc":"6941:34:16","nodeType":"YulVariableDeclaration","src":"6941:34:16","value":{"arguments":[{"name":"offset","nativeSrc":"6968:6:16","nodeType":"YulIdentifier","src":"6968:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"6955:12:16","nodeType":"YulIdentifier","src":"6955:12:16"},"nativeSrc":"6955:20:16","nodeType":"YulFunctionCall","src":"6955:20:16"},"variables":[{"name":"length","nativeSrc":"6945:6:16","nodeType":"YulTypedName","src":"6945:6:16","type":""}]},{"nativeSrc":"6984:87:16","nodeType":"YulAssignment","src":"6984:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7044:6:16","nodeType":"YulIdentifier","src":"7044:6:16"},{"kind":"number","nativeSrc":"7052:4:16","nodeType":"YulLiteral","src":"7052:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7040:3:16","nodeType":"YulIdentifier","src":"7040:3:16"},"nativeSrc":"7040:17:16","nodeType":"YulFunctionCall","src":"7040:17:16"},{"name":"length","nativeSrc":"7059:6:16","nodeType":"YulIdentifier","src":"7059:6:16"},{"name":"end","nativeSrc":"7067:3:16","nodeType":"YulIdentifier","src":"7067:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6993:46:16","nodeType":"YulIdentifier","src":"6993:46:16"},"nativeSrc":"6993:78:16","nodeType":"YulFunctionCall","src":"6993:78:16"},"variableNames":[{"name":"array","nativeSrc":"6984:5:16","nodeType":"YulIdentifier","src":"6984:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"6739:338:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6778:6:16","nodeType":"YulTypedName","src":"6778:6:16","type":""},{"name":"end","nativeSrc":"6786:3:16","nodeType":"YulTypedName","src":"6786:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6794:5:16","nodeType":"YulTypedName","src":"6794:5:16","type":""}],"src":"6739:338:16"},{"body":{"nativeSrc":"7175:560:16","nodeType":"YulBlock","src":"7175:560:16","statements":[{"body":{"nativeSrc":"7221:83:16","nodeType":"YulBlock","src":"7221:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7223:77:16","nodeType":"YulIdentifier","src":"7223:77:16"},"nativeSrc":"7223:79:16","nodeType":"YulFunctionCall","src":"7223:79:16"},"nativeSrc":"7223:79:16","nodeType":"YulExpressionStatement","src":"7223:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7196:7:16","nodeType":"YulIdentifier","src":"7196:7:16"},{"name":"headStart","nativeSrc":"7205:9:16","nodeType":"YulIdentifier","src":"7205:9:16"}],"functionName":{"name":"sub","nativeSrc":"7192:3:16","nodeType":"YulIdentifier","src":"7192:3:16"},"nativeSrc":"7192:23:16","nodeType":"YulFunctionCall","src":"7192:23:16"},{"kind":"number","nativeSrc":"7217:2:16","nodeType":"YulLiteral","src":"7217:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7188:3:16","nodeType":"YulIdentifier","src":"7188:3:16"},"nativeSrc":"7188:32:16","nodeType":"YulFunctionCall","src":"7188:32:16"},"nativeSrc":"7185:119:16","nodeType":"YulIf","src":"7185:119:16"},{"nativeSrc":"7314:117:16","nodeType":"YulBlock","src":"7314:117:16","statements":[{"nativeSrc":"7329:15:16","nodeType":"YulVariableDeclaration","src":"7329:15:16","value":{"kind":"number","nativeSrc":"7343:1:16","nodeType":"YulLiteral","src":"7343:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7333:6:16","nodeType":"YulTypedName","src":"7333:6:16","type":""}]},{"nativeSrc":"7358:63:16","nodeType":"YulAssignment","src":"7358:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7393:9:16","nodeType":"YulIdentifier","src":"7393:9:16"},{"name":"offset","nativeSrc":"7404:6:16","nodeType":"YulIdentifier","src":"7404:6:16"}],"functionName":{"name":"add","nativeSrc":"7389:3:16","nodeType":"YulIdentifier","src":"7389:3:16"},"nativeSrc":"7389:22:16","nodeType":"YulFunctionCall","src":"7389:22:16"},{"name":"dataEnd","nativeSrc":"7413:7:16","nodeType":"YulIdentifier","src":"7413:7:16"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7368:20:16","nodeType":"YulIdentifier","src":"7368:20:16"},"nativeSrc":"7368:53:16","nodeType":"YulFunctionCall","src":"7368:53:16"},"variableNames":[{"name":"value0","nativeSrc":"7358:6:16","nodeType":"YulIdentifier","src":"7358:6:16"}]}]},{"nativeSrc":"7441:287:16","nodeType":"YulBlock","src":"7441:287:16","statements":[{"nativeSrc":"7456:46:16","nodeType":"YulVariableDeclaration","src":"7456:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7487:9:16","nodeType":"YulIdentifier","src":"7487:9:16"},{"kind":"number","nativeSrc":"7498:2:16","nodeType":"YulLiteral","src":"7498:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7483:3:16","nodeType":"YulIdentifier","src":"7483:3:16"},"nativeSrc":"7483:18:16","nodeType":"YulFunctionCall","src":"7483:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"7470:12:16","nodeType":"YulIdentifier","src":"7470:12:16"},"nativeSrc":"7470:32:16","nodeType":"YulFunctionCall","src":"7470:32:16"},"variables":[{"name":"offset","nativeSrc":"7460:6:16","nodeType":"YulTypedName","src":"7460:6:16","type":""}]},{"body":{"nativeSrc":"7549:83:16","nodeType":"YulBlock","src":"7549:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7551:77:16","nodeType":"YulIdentifier","src":"7551:77:16"},"nativeSrc":"7551:79:16","nodeType":"YulFunctionCall","src":"7551:79:16"},"nativeSrc":"7551:79:16","nodeType":"YulExpressionStatement","src":"7551:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7521:6:16","nodeType":"YulIdentifier","src":"7521:6:16"},{"kind":"number","nativeSrc":"7529:18:16","nodeType":"YulLiteral","src":"7529:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7518:2:16","nodeType":"YulIdentifier","src":"7518:2:16"},"nativeSrc":"7518:30:16","nodeType":"YulFunctionCall","src":"7518:30:16"},"nativeSrc":"7515:117:16","nodeType":"YulIf","src":"7515:117:16"},{"nativeSrc":"7646:72:16","nodeType":"YulAssignment","src":"7646:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7690:9:16","nodeType":"YulIdentifier","src":"7690:9:16"},{"name":"offset","nativeSrc":"7701:6:16","nodeType":"YulIdentifier","src":"7701:6:16"}],"functionName":{"name":"add","nativeSrc":"7686:3:16","nodeType":"YulIdentifier","src":"7686:3:16"},"nativeSrc":"7686:22:16","nodeType":"YulFunctionCall","src":"7686:22:16"},{"name":"dataEnd","nativeSrc":"7710:7:16","nodeType":"YulIdentifier","src":"7710:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7656:29:16","nodeType":"YulIdentifier","src":"7656:29:16"},"nativeSrc":"7656:62:16","nodeType":"YulFunctionCall","src":"7656:62:16"},"variableNames":[{"name":"value1","nativeSrc":"7646:6:16","nodeType":"YulIdentifier","src":"7646:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nativeSrc":"7083:652:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7137:9:16","nodeType":"YulTypedName","src":"7137:9:16","type":""},{"name":"dataEnd","nativeSrc":"7148:7:16","nodeType":"YulTypedName","src":"7148:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7160:6:16","nodeType":"YulTypedName","src":"7160:6:16","type":""},{"name":"value1","nativeSrc":"7168:6:16","nodeType":"YulTypedName","src":"7168:6:16","type":""}],"src":"7083:652:16"},{"body":{"nativeSrc":"7800:51:16","nodeType":"YulBlock","src":"7800:51:16","statements":[{"nativeSrc":"7810:35:16","nodeType":"YulAssignment","src":"7810:35:16","value":{"arguments":[{"name":"value","nativeSrc":"7839:5:16","nodeType":"YulIdentifier","src":"7839:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7821:17:16","nodeType":"YulIdentifier","src":"7821:17:16"},"nativeSrc":"7821:24:16","nodeType":"YulFunctionCall","src":"7821:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"7810:7:16","nodeType":"YulIdentifier","src":"7810:7:16"}]}]},"name":"cleanup_t_contract$_IERC20_$181","nativeSrc":"7741:110:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7782:5:16","nodeType":"YulTypedName","src":"7782:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7792:7:16","nodeType":"YulTypedName","src":"7792:7:16","type":""}],"src":"7741:110:16"},{"body":{"nativeSrc":"7914:93:16","nodeType":"YulBlock","src":"7914:93:16","statements":[{"body":{"nativeSrc":"7985:16:16","nodeType":"YulBlock","src":"7985:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7994:1:16","nodeType":"YulLiteral","src":"7994:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"7997:1:16","nodeType":"YulLiteral","src":"7997:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7987:6:16","nodeType":"YulIdentifier","src":"7987:6:16"},"nativeSrc":"7987:12:16","nodeType":"YulFunctionCall","src":"7987:12:16"},"nativeSrc":"7987:12:16","nodeType":"YulExpressionStatement","src":"7987:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7937:5:16","nodeType":"YulIdentifier","src":"7937:5:16"},{"arguments":[{"name":"value","nativeSrc":"7976:5:16","nodeType":"YulIdentifier","src":"7976:5:16"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$181","nativeSrc":"7944:31:16","nodeType":"YulIdentifier","src":"7944:31:16"},"nativeSrc":"7944:38:16","nodeType":"YulFunctionCall","src":"7944:38:16"}],"functionName":{"name":"eq","nativeSrc":"7934:2:16","nodeType":"YulIdentifier","src":"7934:2:16"},"nativeSrc":"7934:49:16","nodeType":"YulFunctionCall","src":"7934:49:16"}],"functionName":{"name":"iszero","nativeSrc":"7927:6:16","nodeType":"YulIdentifier","src":"7927:6:16"},"nativeSrc":"7927:57:16","nodeType":"YulFunctionCall","src":"7927:57:16"},"nativeSrc":"7924:77:16","nodeType":"YulIf","src":"7924:77:16"}]},"name":"validator_revert_t_contract$_IERC20_$181","nativeSrc":"7857:150:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7907:5:16","nodeType":"YulTypedName","src":"7907:5:16","type":""}],"src":"7857:150:16"},{"body":{"nativeSrc":"8079:101:16","nodeType":"YulBlock","src":"8079:101:16","statements":[{"nativeSrc":"8089:29:16","nodeType":"YulAssignment","src":"8089:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"8111:6:16","nodeType":"YulIdentifier","src":"8111:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"8098:12:16","nodeType":"YulIdentifier","src":"8098:12:16"},"nativeSrc":"8098:20:16","nodeType":"YulFunctionCall","src":"8098:20:16"},"variableNames":[{"name":"value","nativeSrc":"8089:5:16","nodeType":"YulIdentifier","src":"8089:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8168:5:16","nodeType":"YulIdentifier","src":"8168:5:16"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$181","nativeSrc":"8127:40:16","nodeType":"YulIdentifier","src":"8127:40:16"},"nativeSrc":"8127:47:16","nodeType":"YulFunctionCall","src":"8127:47:16"},"nativeSrc":"8127:47:16","nodeType":"YulExpressionStatement","src":"8127:47:16"}]},"name":"abi_decode_t_contract$_IERC20_$181","nativeSrc":"8013:167:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8057:6:16","nodeType":"YulTypedName","src":"8057:6:16","type":""},{"name":"end","nativeSrc":"8065:3:16","nodeType":"YulTypedName","src":"8065:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8073:5:16","nodeType":"YulTypedName","src":"8073:5:16","type":""}],"src":"8013:167:16"},{"body":{"nativeSrc":"8300:533:16","nodeType":"YulBlock","src":"8300:533:16","statements":[{"body":{"nativeSrc":"8346:83:16","nodeType":"YulBlock","src":"8346:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8348:77:16","nodeType":"YulIdentifier","src":"8348:77:16"},"nativeSrc":"8348:79:16","nodeType":"YulFunctionCall","src":"8348:79:16"},"nativeSrc":"8348:79:16","nodeType":"YulExpressionStatement","src":"8348:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8321:7:16","nodeType":"YulIdentifier","src":"8321:7:16"},{"name":"headStart","nativeSrc":"8330:9:16","nodeType":"YulIdentifier","src":"8330:9:16"}],"functionName":{"name":"sub","nativeSrc":"8317:3:16","nodeType":"YulIdentifier","src":"8317:3:16"},"nativeSrc":"8317:23:16","nodeType":"YulFunctionCall","src":"8317:23:16"},{"kind":"number","nativeSrc":"8342:2:16","nodeType":"YulLiteral","src":"8342:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8313:3:16","nodeType":"YulIdentifier","src":"8313:3:16"},"nativeSrc":"8313:32:16","nodeType":"YulFunctionCall","src":"8313:32:16"},"nativeSrc":"8310:119:16","nodeType":"YulIf","src":"8310:119:16"},{"nativeSrc":"8439:117:16","nodeType":"YulBlock","src":"8439:117:16","statements":[{"nativeSrc":"8454:15:16","nodeType":"YulVariableDeclaration","src":"8454:15:16","value":{"kind":"number","nativeSrc":"8468:1:16","nodeType":"YulLiteral","src":"8468:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8458:6:16","nodeType":"YulTypedName","src":"8458:6:16","type":""}]},{"nativeSrc":"8483:63:16","nodeType":"YulAssignment","src":"8483:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8518:9:16","nodeType":"YulIdentifier","src":"8518:9:16"},{"name":"offset","nativeSrc":"8529:6:16","nodeType":"YulIdentifier","src":"8529:6:16"}],"functionName":{"name":"add","nativeSrc":"8514:3:16","nodeType":"YulIdentifier","src":"8514:3:16"},"nativeSrc":"8514:22:16","nodeType":"YulFunctionCall","src":"8514:22:16"},{"name":"dataEnd","nativeSrc":"8538:7:16","nodeType":"YulIdentifier","src":"8538:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8493:20:16","nodeType":"YulIdentifier","src":"8493:20:16"},"nativeSrc":"8493:53:16","nodeType":"YulFunctionCall","src":"8493:53:16"},"variableNames":[{"name":"value0","nativeSrc":"8483:6:16","nodeType":"YulIdentifier","src":"8483:6:16"}]}]},{"nativeSrc":"8566:118:16","nodeType":"YulBlock","src":"8566:118:16","statements":[{"nativeSrc":"8581:16:16","nodeType":"YulVariableDeclaration","src":"8581:16:16","value":{"kind":"number","nativeSrc":"8595:2:16","nodeType":"YulLiteral","src":"8595:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8585:6:16","nodeType":"YulTypedName","src":"8585:6:16","type":""}]},{"nativeSrc":"8611:63:16","nodeType":"YulAssignment","src":"8611:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8646:9:16","nodeType":"YulIdentifier","src":"8646:9:16"},{"name":"offset","nativeSrc":"8657:6:16","nodeType":"YulIdentifier","src":"8657:6:16"}],"functionName":{"name":"add","nativeSrc":"8642:3:16","nodeType":"YulIdentifier","src":"8642:3:16"},"nativeSrc":"8642:22:16","nodeType":"YulFunctionCall","src":"8642:22:16"},{"name":"dataEnd","nativeSrc":"8666:7:16","nodeType":"YulIdentifier","src":"8666:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8621:20:16","nodeType":"YulIdentifier","src":"8621:20:16"},"nativeSrc":"8621:53:16","nodeType":"YulFunctionCall","src":"8621:53:16"},"variableNames":[{"name":"value1","nativeSrc":"8611:6:16","nodeType":"YulIdentifier","src":"8611:6:16"}]}]},{"nativeSrc":"8694:132:16","nodeType":"YulBlock","src":"8694:132:16","statements":[{"nativeSrc":"8709:16:16","nodeType":"YulVariableDeclaration","src":"8709:16:16","value":{"kind":"number","nativeSrc":"8723:2:16","nodeType":"YulLiteral","src":"8723:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8713:6:16","nodeType":"YulTypedName","src":"8713:6:16","type":""}]},{"nativeSrc":"8739:77:16","nodeType":"YulAssignment","src":"8739:77:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8788:9:16","nodeType":"YulIdentifier","src":"8788:9:16"},{"name":"offset","nativeSrc":"8799:6:16","nodeType":"YulIdentifier","src":"8799:6:16"}],"functionName":{"name":"add","nativeSrc":"8784:3:16","nodeType":"YulIdentifier","src":"8784:3:16"},"nativeSrc":"8784:22:16","nodeType":"YulFunctionCall","src":"8784:22:16"},{"name":"dataEnd","nativeSrc":"8808:7:16","nodeType":"YulIdentifier","src":"8808:7:16"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$181","nativeSrc":"8749:34:16","nodeType":"YulIdentifier","src":"8749:34:16"},"nativeSrc":"8749:67:16","nodeType":"YulFunctionCall","src":"8749:67:16"},"variableNames":[{"name":"value2","nativeSrc":"8739:6:16","nodeType":"YulIdentifier","src":"8739:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181","nativeSrc":"8186:647:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8254:9:16","nodeType":"YulTypedName","src":"8254:9:16","type":""},{"name":"dataEnd","nativeSrc":"8265:7:16","nodeType":"YulTypedName","src":"8265:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8277:6:16","nodeType":"YulTypedName","src":"8277:6:16","type":""},{"name":"value1","nativeSrc":"8285:6:16","nodeType":"YulTypedName","src":"8285:6:16","type":""},{"name":"value2","nativeSrc":"8293:6:16","nodeType":"YulTypedName","src":"8293:6:16","type":""}],"src":"8186:647:16"},{"body":{"nativeSrc":"8904:53:16","nodeType":"YulBlock","src":"8904:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8921:3:16","nodeType":"YulIdentifier","src":"8921:3:16"},{"arguments":[{"name":"value","nativeSrc":"8944:5:16","nodeType":"YulIdentifier","src":"8944:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8926:17:16","nodeType":"YulIdentifier","src":"8926:17:16"},"nativeSrc":"8926:24:16","nodeType":"YulFunctionCall","src":"8926:24:16"}],"functionName":{"name":"mstore","nativeSrc":"8914:6:16","nodeType":"YulIdentifier","src":"8914:6:16"},"nativeSrc":"8914:37:16","nodeType":"YulFunctionCall","src":"8914:37:16"},"nativeSrc":"8914:37:16","nodeType":"YulExpressionStatement","src":"8914:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8839:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8892:5:16","nodeType":"YulTypedName","src":"8892:5:16","type":""},{"name":"pos","nativeSrc":"8899:3:16","nodeType":"YulTypedName","src":"8899:3:16","type":""}],"src":"8839:118:16"},{"body":{"nativeSrc":"9061:124:16","nodeType":"YulBlock","src":"9061:124:16","statements":[{"nativeSrc":"9071:26:16","nodeType":"YulAssignment","src":"9071:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"9083:9:16","nodeType":"YulIdentifier","src":"9083:9:16"},{"kind":"number","nativeSrc":"9094:2:16","nodeType":"YulLiteral","src":"9094:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9079:3:16","nodeType":"YulIdentifier","src":"9079:3:16"},"nativeSrc":"9079:18:16","nodeType":"YulFunctionCall","src":"9079:18:16"},"variableNames":[{"name":"tail","nativeSrc":"9071:4:16","nodeType":"YulIdentifier","src":"9071:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9151:6:16","nodeType":"YulIdentifier","src":"9151:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"9164:9:16","nodeType":"YulIdentifier","src":"9164:9:16"},{"kind":"number","nativeSrc":"9175:1:16","nodeType":"YulLiteral","src":"9175:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9160:3:16","nodeType":"YulIdentifier","src":"9160:3:16"},"nativeSrc":"9160:17:16","nodeType":"YulFunctionCall","src":"9160:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9107:43:16","nodeType":"YulIdentifier","src":"9107:43:16"},"nativeSrc":"9107:71:16","nodeType":"YulFunctionCall","src":"9107:71:16"},"nativeSrc":"9107:71:16","nodeType":"YulExpressionStatement","src":"9107:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8963:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9033:9:16","nodeType":"YulTypedName","src":"9033:9:16","type":""},{"name":"value0","nativeSrc":"9045:6:16","nodeType":"YulTypedName","src":"9045:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9056:4:16","nodeType":"YulTypedName","src":"9056:4:16","type":""}],"src":"8963:222:16"},{"body":{"nativeSrc":"9310:698:16","nodeType":"YulBlock","src":"9310:698:16","statements":[{"body":{"nativeSrc":"9356:83:16","nodeType":"YulBlock","src":"9356:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9358:77:16","nodeType":"YulIdentifier","src":"9358:77:16"},"nativeSrc":"9358:79:16","nodeType":"YulFunctionCall","src":"9358:79:16"},"nativeSrc":"9358:79:16","nodeType":"YulExpressionStatement","src":"9358:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9331:7:16","nodeType":"YulIdentifier","src":"9331:7:16"},{"name":"headStart","nativeSrc":"9340:9:16","nodeType":"YulIdentifier","src":"9340:9:16"}],"functionName":{"name":"sub","nativeSrc":"9327:3:16","nodeType":"YulIdentifier","src":"9327:3:16"},"nativeSrc":"9327:23:16","nodeType":"YulFunctionCall","src":"9327:23:16"},{"kind":"number","nativeSrc":"9352:2:16","nodeType":"YulLiteral","src":"9352:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"9323:3:16","nodeType":"YulIdentifier","src":"9323:3:16"},"nativeSrc":"9323:32:16","nodeType":"YulFunctionCall","src":"9323:32:16"},"nativeSrc":"9320:119:16","nodeType":"YulIf","src":"9320:119:16"},{"nativeSrc":"9449:117:16","nodeType":"YulBlock","src":"9449:117:16","statements":[{"nativeSrc":"9464:15:16","nodeType":"YulVariableDeclaration","src":"9464:15:16","value":{"kind":"number","nativeSrc":"9478:1:16","nodeType":"YulLiteral","src":"9478:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9468:6:16","nodeType":"YulTypedName","src":"9468:6:16","type":""}]},{"nativeSrc":"9493:63:16","nodeType":"YulAssignment","src":"9493:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9528:9:16","nodeType":"YulIdentifier","src":"9528:9:16"},{"name":"offset","nativeSrc":"9539:6:16","nodeType":"YulIdentifier","src":"9539:6:16"}],"functionName":{"name":"add","nativeSrc":"9524:3:16","nodeType":"YulIdentifier","src":"9524:3:16"},"nativeSrc":"9524:22:16","nodeType":"YulFunctionCall","src":"9524:22:16"},{"name":"dataEnd","nativeSrc":"9548:7:16","nodeType":"YulIdentifier","src":"9548:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9503:20:16","nodeType":"YulIdentifier","src":"9503:20:16"},"nativeSrc":"9503:53:16","nodeType":"YulFunctionCall","src":"9503:53:16"},"variableNames":[{"name":"value0","nativeSrc":"9493:6:16","nodeType":"YulIdentifier","src":"9493:6:16"}]}]},{"nativeSrc":"9576:118:16","nodeType":"YulBlock","src":"9576:118:16","statements":[{"nativeSrc":"9591:16:16","nodeType":"YulVariableDeclaration","src":"9591:16:16","value":{"kind":"number","nativeSrc":"9605:2:16","nodeType":"YulLiteral","src":"9605:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9595:6:16","nodeType":"YulTypedName","src":"9595:6:16","type":""}]},{"nativeSrc":"9621:63:16","nodeType":"YulAssignment","src":"9621:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9656:9:16","nodeType":"YulIdentifier","src":"9656:9:16"},{"name":"offset","nativeSrc":"9667:6:16","nodeType":"YulIdentifier","src":"9667:6:16"}],"functionName":{"name":"add","nativeSrc":"9652:3:16","nodeType":"YulIdentifier","src":"9652:3:16"},"nativeSrc":"9652:22:16","nodeType":"YulFunctionCall","src":"9652:22:16"},{"name":"dataEnd","nativeSrc":"9676:7:16","nodeType":"YulIdentifier","src":"9676:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9631:20:16","nodeType":"YulIdentifier","src":"9631:20:16"},"nativeSrc":"9631:53:16","nodeType":"YulFunctionCall","src":"9631:53:16"},"variableNames":[{"name":"value1","nativeSrc":"9621:6:16","nodeType":"YulIdentifier","src":"9621:6:16"}]}]},{"nativeSrc":"9704:297:16","nodeType":"YulBlock","src":"9704:297:16","statements":[{"nativeSrc":"9719:46:16","nodeType":"YulVariableDeclaration","src":"9719:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9750:9:16","nodeType":"YulIdentifier","src":"9750:9:16"},{"kind":"number","nativeSrc":"9761:2:16","nodeType":"YulLiteral","src":"9761:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9746:3:16","nodeType":"YulIdentifier","src":"9746:3:16"},"nativeSrc":"9746:18:16","nodeType":"YulFunctionCall","src":"9746:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"9733:12:16","nodeType":"YulIdentifier","src":"9733:12:16"},"nativeSrc":"9733:32:16","nodeType":"YulFunctionCall","src":"9733:32:16"},"variables":[{"name":"offset","nativeSrc":"9723:6:16","nodeType":"YulTypedName","src":"9723:6:16","type":""}]},{"body":{"nativeSrc":"9812:83:16","nodeType":"YulBlock","src":"9812:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9814:77:16","nodeType":"YulIdentifier","src":"9814:77:16"},"nativeSrc":"9814:79:16","nodeType":"YulFunctionCall","src":"9814:79:16"},"nativeSrc":"9814:79:16","nodeType":"YulExpressionStatement","src":"9814:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9784:6:16","nodeType":"YulIdentifier","src":"9784:6:16"},{"kind":"number","nativeSrc":"9792:18:16","nodeType":"YulLiteral","src":"9792:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9781:2:16","nodeType":"YulIdentifier","src":"9781:2:16"},"nativeSrc":"9781:30:16","nodeType":"YulFunctionCall","src":"9781:30:16"},"nativeSrc":"9778:117:16","nodeType":"YulIf","src":"9778:117:16"},{"nativeSrc":"9909:82:16","nodeType":"YulAssignment","src":"9909:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9963:9:16","nodeType":"YulIdentifier","src":"9963:9:16"},{"name":"offset","nativeSrc":"9974:6:16","nodeType":"YulIdentifier","src":"9974:6:16"}],"functionName":{"name":"add","nativeSrc":"9959:3:16","nodeType":"YulIdentifier","src":"9959:3:16"},"nativeSrc":"9959:22:16","nodeType":"YulFunctionCall","src":"9959:22:16"},{"name":"dataEnd","nativeSrc":"9983:7:16","nodeType":"YulIdentifier","src":"9983:7:16"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"9927:31:16","nodeType":"YulIdentifier","src":"9927:31:16"},"nativeSrc":"9927:64:16","nodeType":"YulFunctionCall","src":"9927:64:16"},"variableNames":[{"name":"value2","nativeSrc":"9909:6:16","nodeType":"YulIdentifier","src":"9909:6:16"},{"name":"value3","nativeSrc":"9917:6:16","nodeType":"YulIdentifier","src":"9917:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"9191:817:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9256:9:16","nodeType":"YulTypedName","src":"9256:9:16","type":""},{"name":"dataEnd","nativeSrc":"9267:7:16","nodeType":"YulTypedName","src":"9267:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9279:6:16","nodeType":"YulTypedName","src":"9279:6:16","type":""},{"name":"value1","nativeSrc":"9287:6:16","nodeType":"YulTypedName","src":"9287:6:16","type":""},{"name":"value2","nativeSrc":"9295:6:16","nodeType":"YulTypedName","src":"9295:6:16","type":""},{"name":"value3","nativeSrc":"9303:6:16","nodeType":"YulTypedName","src":"9303:6:16","type":""}],"src":"9191:817:16"},{"body":{"nativeSrc":"10072:40:16","nodeType":"YulBlock","src":"10072:40:16","statements":[{"nativeSrc":"10083:22:16","nodeType":"YulAssignment","src":"10083:22:16","value":{"arguments":[{"name":"value","nativeSrc":"10099:5:16","nodeType":"YulIdentifier","src":"10099:5:16"}],"functionName":{"name":"mload","nativeSrc":"10093:5:16","nodeType":"YulIdentifier","src":"10093:5:16"},"nativeSrc":"10093:12:16","nodeType":"YulFunctionCall","src":"10093:12:16"},"variableNames":[{"name":"length","nativeSrc":"10083:6:16","nodeType":"YulIdentifier","src":"10083:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10014:98:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10055:5:16","nodeType":"YulTypedName","src":"10055:5:16","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10065:6:16","nodeType":"YulTypedName","src":"10065:6:16","type":""}],"src":"10014:98:16"},{"body":{"nativeSrc":"10213:73:16","nodeType":"YulBlock","src":"10213:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10230:3:16","nodeType":"YulIdentifier","src":"10230:3:16"},{"name":"length","nativeSrc":"10235:6:16","nodeType":"YulIdentifier","src":"10235:6:16"}],"functionName":{"name":"mstore","nativeSrc":"10223:6:16","nodeType":"YulIdentifier","src":"10223:6:16"},"nativeSrc":"10223:19:16","nodeType":"YulFunctionCall","src":"10223:19:16"},"nativeSrc":"10223:19:16","nodeType":"YulExpressionStatement","src":"10223:19:16"},{"nativeSrc":"10251:29:16","nodeType":"YulAssignment","src":"10251:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"10270:3:16","nodeType":"YulIdentifier","src":"10270:3:16"},{"kind":"number","nativeSrc":"10275:4:16","nodeType":"YulLiteral","src":"10275:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10266:3:16","nodeType":"YulIdentifier","src":"10266:3:16"},"nativeSrc":"10266:14:16","nodeType":"YulFunctionCall","src":"10266:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"10251:11:16","nodeType":"YulIdentifier","src":"10251:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10118:168:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10185:3:16","nodeType":"YulTypedName","src":"10185:3:16","type":""},{"name":"length","nativeSrc":"10190:6:16","nodeType":"YulTypedName","src":"10190:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10201:11:16","nodeType":"YulTypedName","src":"10201:11:16","type":""}],"src":"10118:168:16"},{"body":{"nativeSrc":"10354:186:16","nodeType":"YulBlock","src":"10354:186:16","statements":[{"nativeSrc":"10365:10:16","nodeType":"YulVariableDeclaration","src":"10365:10:16","value":{"kind":"number","nativeSrc":"10374:1:16","nodeType":"YulLiteral","src":"10374:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10369:1:16","nodeType":"YulTypedName","src":"10369:1:16","type":""}]},{"body":{"nativeSrc":"10434:63:16","nodeType":"YulBlock","src":"10434:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10459:3:16","nodeType":"YulIdentifier","src":"10459:3:16"},{"name":"i","nativeSrc":"10464:1:16","nodeType":"YulIdentifier","src":"10464:1:16"}],"functionName":{"name":"add","nativeSrc":"10455:3:16","nodeType":"YulIdentifier","src":"10455:3:16"},"nativeSrc":"10455:11:16","nodeType":"YulFunctionCall","src":"10455:11:16"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10478:3:16","nodeType":"YulIdentifier","src":"10478:3:16"},{"name":"i","nativeSrc":"10483:1:16","nodeType":"YulIdentifier","src":"10483:1:16"}],"functionName":{"name":"add","nativeSrc":"10474:3:16","nodeType":"YulIdentifier","src":"10474:3:16"},"nativeSrc":"10474:11:16","nodeType":"YulFunctionCall","src":"10474:11:16"}],"functionName":{"name":"mload","nativeSrc":"10468:5:16","nodeType":"YulIdentifier","src":"10468:5:16"},"nativeSrc":"10468:18:16","nodeType":"YulFunctionCall","src":"10468:18:16"}],"functionName":{"name":"mstore","nativeSrc":"10448:6:16","nodeType":"YulIdentifier","src":"10448:6:16"},"nativeSrc":"10448:39:16","nodeType":"YulFunctionCall","src":"10448:39:16"},"nativeSrc":"10448:39:16","nodeType":"YulExpressionStatement","src":"10448:39:16"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10395:1:16","nodeType":"YulIdentifier","src":"10395:1:16"},{"name":"length","nativeSrc":"10398:6:16","nodeType":"YulIdentifier","src":"10398:6:16"}],"functionName":{"name":"lt","nativeSrc":"10392:2:16","nodeType":"YulIdentifier","src":"10392:2:16"},"nativeSrc":"10392:13:16","nodeType":"YulFunctionCall","src":"10392:13:16"},"nativeSrc":"10384:113:16","nodeType":"YulForLoop","post":{"nativeSrc":"10406:19:16","nodeType":"YulBlock","src":"10406:19:16","statements":[{"nativeSrc":"10408:15:16","nodeType":"YulAssignment","src":"10408:15:16","value":{"arguments":[{"name":"i","nativeSrc":"10417:1:16","nodeType":"YulIdentifier","src":"10417:1:16"},{"kind":"number","nativeSrc":"10420:2:16","nodeType":"YulLiteral","src":"10420:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10413:3:16","nodeType":"YulIdentifier","src":"10413:3:16"},"nativeSrc":"10413:10:16","nodeType":"YulFunctionCall","src":"10413:10:16"},"variableNames":[{"name":"i","nativeSrc":"10408:1:16","nodeType":"YulIdentifier","src":"10408:1:16"}]}]},"pre":{"nativeSrc":"10388:3:16","nodeType":"YulBlock","src":"10388:3:16","statements":[]},"src":"10384:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10517:3:16","nodeType":"YulIdentifier","src":"10517:3:16"},{"name":"length","nativeSrc":"10522:6:16","nodeType":"YulIdentifier","src":"10522:6:16"}],"functionName":{"name":"add","nativeSrc":"10513:3:16","nodeType":"YulIdentifier","src":"10513:3:16"},"nativeSrc":"10513:16:16","nodeType":"YulFunctionCall","src":"10513:16:16"},{"kind":"number","nativeSrc":"10531:1:16","nodeType":"YulLiteral","src":"10531:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10506:6:16","nodeType":"YulIdentifier","src":"10506:6:16"},"nativeSrc":"10506:27:16","nodeType":"YulFunctionCall","src":"10506:27:16"},"nativeSrc":"10506:27:16","nodeType":"YulExpressionStatement","src":"10506:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10292:248:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10336:3:16","nodeType":"YulTypedName","src":"10336:3:16","type":""},{"name":"dst","nativeSrc":"10341:3:16","nodeType":"YulTypedName","src":"10341:3:16","type":""},{"name":"length","nativeSrc":"10346:6:16","nodeType":"YulTypedName","src":"10346:6:16","type":""}],"src":"10292:248:16"},{"body":{"nativeSrc":"10636:283:16","nodeType":"YulBlock","src":"10636:283:16","statements":[{"nativeSrc":"10646:52:16","nodeType":"YulVariableDeclaration","src":"10646:52:16","value":{"arguments":[{"name":"value","nativeSrc":"10692:5:16","nodeType":"YulIdentifier","src":"10692:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10660:31:16","nodeType":"YulIdentifier","src":"10660:31:16"},"nativeSrc":"10660:38:16","nodeType":"YulFunctionCall","src":"10660:38:16"},"variables":[{"name":"length","nativeSrc":"10650:6:16","nodeType":"YulTypedName","src":"10650:6:16","type":""}]},{"nativeSrc":"10707:77:16","nodeType":"YulAssignment","src":"10707:77:16","value":{"arguments":[{"name":"pos","nativeSrc":"10772:3:16","nodeType":"YulIdentifier","src":"10772:3:16"},{"name":"length","nativeSrc":"10777:6:16","nodeType":"YulIdentifier","src":"10777:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10714:57:16","nodeType":"YulIdentifier","src":"10714:57:16"},"nativeSrc":"10714:70:16","nodeType":"YulFunctionCall","src":"10714:70:16"},"variableNames":[{"name":"pos","nativeSrc":"10707:3:16","nodeType":"YulIdentifier","src":"10707:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10832:5:16","nodeType":"YulIdentifier","src":"10832:5:16"},{"kind":"number","nativeSrc":"10839:4:16","nodeType":"YulLiteral","src":"10839:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10828:3:16","nodeType":"YulIdentifier","src":"10828:3:16"},"nativeSrc":"10828:16:16","nodeType":"YulFunctionCall","src":"10828:16:16"},{"name":"pos","nativeSrc":"10846:3:16","nodeType":"YulIdentifier","src":"10846:3:16"},{"name":"length","nativeSrc":"10851:6:16","nodeType":"YulIdentifier","src":"10851:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10793:34:16","nodeType":"YulIdentifier","src":"10793:34:16"},"nativeSrc":"10793:65:16","nodeType":"YulFunctionCall","src":"10793:65:16"},"nativeSrc":"10793:65:16","nodeType":"YulExpressionStatement","src":"10793:65:16"},{"nativeSrc":"10867:46:16","nodeType":"YulAssignment","src":"10867:46:16","value":{"arguments":[{"name":"pos","nativeSrc":"10878:3:16","nodeType":"YulIdentifier","src":"10878:3:16"},{"arguments":[{"name":"length","nativeSrc":"10905:6:16","nodeType":"YulIdentifier","src":"10905:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10883:21:16","nodeType":"YulIdentifier","src":"10883:21:16"},"nativeSrc":"10883:29:16","nodeType":"YulFunctionCall","src":"10883:29:16"}],"functionName":{"name":"add","nativeSrc":"10874:3:16","nodeType":"YulIdentifier","src":"10874:3:16"},"nativeSrc":"10874:39:16","nodeType":"YulFunctionCall","src":"10874:39:16"},"variableNames":[{"name":"end","nativeSrc":"10867:3:16","nodeType":"YulIdentifier","src":"10867:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10546:373:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10617:5:16","nodeType":"YulTypedName","src":"10617:5:16","type":""},{"name":"pos","nativeSrc":"10624:3:16","nodeType":"YulTypedName","src":"10624:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10632:3:16","nodeType":"YulTypedName","src":"10632:3:16","type":""}],"src":"10546:373:16"},{"body":{"nativeSrc":"11041:193:16","nodeType":"YulBlock","src":"11041:193:16","statements":[{"nativeSrc":"11051:26:16","nodeType":"YulAssignment","src":"11051:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"11063:9:16","nodeType":"YulIdentifier","src":"11063:9:16"},{"kind":"number","nativeSrc":"11074:2:16","nodeType":"YulLiteral","src":"11074:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11059:3:16","nodeType":"YulIdentifier","src":"11059:3:16"},"nativeSrc":"11059:18:16","nodeType":"YulFunctionCall","src":"11059:18:16"},"variableNames":[{"name":"tail","nativeSrc":"11051:4:16","nodeType":"YulIdentifier","src":"11051:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11098:9:16","nodeType":"YulIdentifier","src":"11098:9:16"},{"kind":"number","nativeSrc":"11109:1:16","nodeType":"YulLiteral","src":"11109:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11094:3:16","nodeType":"YulIdentifier","src":"11094:3:16"},"nativeSrc":"11094:17:16","nodeType":"YulFunctionCall","src":"11094:17:16"},{"arguments":[{"name":"tail","nativeSrc":"11117:4:16","nodeType":"YulIdentifier","src":"11117:4:16"},{"name":"headStart","nativeSrc":"11123:9:16","nodeType":"YulIdentifier","src":"11123:9:16"}],"functionName":{"name":"sub","nativeSrc":"11113:3:16","nodeType":"YulIdentifier","src":"11113:3:16"},"nativeSrc":"11113:20:16","nodeType":"YulFunctionCall","src":"11113:20:16"}],"functionName":{"name":"mstore","nativeSrc":"11087:6:16","nodeType":"YulIdentifier","src":"11087:6:16"},"nativeSrc":"11087:47:16","nodeType":"YulFunctionCall","src":"11087:47:16"},"nativeSrc":"11087:47:16","nodeType":"YulExpressionStatement","src":"11087:47:16"},{"nativeSrc":"11143:84:16","nodeType":"YulAssignment","src":"11143:84:16","value":{"arguments":[{"name":"value0","nativeSrc":"11213:6:16","nodeType":"YulIdentifier","src":"11213:6:16"},{"name":"tail","nativeSrc":"11222:4:16","nodeType":"YulIdentifier","src":"11222:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"11151:61:16","nodeType":"YulIdentifier","src":"11151:61:16"},"nativeSrc":"11151:76:16","nodeType":"YulFunctionCall","src":"11151:76:16"},"variableNames":[{"name":"tail","nativeSrc":"11143:4:16","nodeType":"YulIdentifier","src":"11143:4:16"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10925:309:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11013:9:16","nodeType":"YulTypedName","src":"11013:9:16","type":""},{"name":"value0","nativeSrc":"11025:6:16","nodeType":"YulTypedName","src":"11025:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11036:4:16","nodeType":"YulTypedName","src":"11036:4:16","type":""}],"src":"10925:309:16"},{"body":{"nativeSrc":"11305:53:16","nodeType":"YulBlock","src":"11305:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11322:3:16","nodeType":"YulIdentifier","src":"11322:3:16"},{"arguments":[{"name":"value","nativeSrc":"11345:5:16","nodeType":"YulIdentifier","src":"11345:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11327:17:16","nodeType":"YulIdentifier","src":"11327:17:16"},"nativeSrc":"11327:24:16","nodeType":"YulFunctionCall","src":"11327:24:16"}],"functionName":{"name":"mstore","nativeSrc":"11315:6:16","nodeType":"YulIdentifier","src":"11315:6:16"},"nativeSrc":"11315:37:16","nodeType":"YulFunctionCall","src":"11315:37:16"},"nativeSrc":"11315:37:16","nodeType":"YulExpressionStatement","src":"11315:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11240:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11293:5:16","nodeType":"YulTypedName","src":"11293:5:16","type":""},{"name":"pos","nativeSrc":"11300:3:16","nodeType":"YulTypedName","src":"11300:3:16","type":""}],"src":"11240:118:16"},{"body":{"nativeSrc":"11462:124:16","nodeType":"YulBlock","src":"11462:124:16","statements":[{"nativeSrc":"11472:26:16","nodeType":"YulAssignment","src":"11472:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"11484:9:16","nodeType":"YulIdentifier","src":"11484:9:16"},{"kind":"number","nativeSrc":"11495:2:16","nodeType":"YulLiteral","src":"11495:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11480:3:16","nodeType":"YulIdentifier","src":"11480:3:16"},"nativeSrc":"11480:18:16","nodeType":"YulFunctionCall","src":"11480:18:16"},"variableNames":[{"name":"tail","nativeSrc":"11472:4:16","nodeType":"YulIdentifier","src":"11472:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11552:6:16","nodeType":"YulIdentifier","src":"11552:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"11565:9:16","nodeType":"YulIdentifier","src":"11565:9:16"},{"kind":"number","nativeSrc":"11576:1:16","nodeType":"YulLiteral","src":"11576:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11561:3:16","nodeType":"YulIdentifier","src":"11561:3:16"},"nativeSrc":"11561:17:16","nodeType":"YulFunctionCall","src":"11561:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11508:43:16","nodeType":"YulIdentifier","src":"11508:43:16"},"nativeSrc":"11508:71:16","nodeType":"YulFunctionCall","src":"11508:71:16"},"nativeSrc":"11508:71:16","nodeType":"YulExpressionStatement","src":"11508:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"11364:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11434:9:16","nodeType":"YulTypedName","src":"11434:9:16","type":""},{"name":"value0","nativeSrc":"11446:6:16","nodeType":"YulTypedName","src":"11446:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11457:4:16","nodeType":"YulTypedName","src":"11457:4:16","type":""}],"src":"11364:222:16"},{"body":{"nativeSrc":"11746:288:16","nodeType":"YulBlock","src":"11746:288:16","statements":[{"nativeSrc":"11756:26:16","nodeType":"YulAssignment","src":"11756:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"11768:9:16","nodeType":"YulIdentifier","src":"11768:9:16"},{"kind":"number","nativeSrc":"11779:2:16","nodeType":"YulLiteral","src":"11779:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11764:3:16","nodeType":"YulIdentifier","src":"11764:3:16"},"nativeSrc":"11764:18:16","nodeType":"YulFunctionCall","src":"11764:18:16"},"variableNames":[{"name":"tail","nativeSrc":"11756:4:16","nodeType":"YulIdentifier","src":"11756:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11836:6:16","nodeType":"YulIdentifier","src":"11836:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"11849:9:16","nodeType":"YulIdentifier","src":"11849:9:16"},{"kind":"number","nativeSrc":"11860:1:16","nodeType":"YulLiteral","src":"11860:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11845:3:16","nodeType":"YulIdentifier","src":"11845:3:16"},"nativeSrc":"11845:17:16","nodeType":"YulFunctionCall","src":"11845:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11792:43:16","nodeType":"YulIdentifier","src":"11792:43:16"},"nativeSrc":"11792:71:16","nodeType":"YulFunctionCall","src":"11792:71:16"},"nativeSrc":"11792:71:16","nodeType":"YulExpressionStatement","src":"11792:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11917:6:16","nodeType":"YulIdentifier","src":"11917:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"11930:9:16","nodeType":"YulIdentifier","src":"11930:9:16"},{"kind":"number","nativeSrc":"11941:2:16","nodeType":"YulLiteral","src":"11941:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11926:3:16","nodeType":"YulIdentifier","src":"11926:3:16"},"nativeSrc":"11926:18:16","nodeType":"YulFunctionCall","src":"11926:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11873:43:16","nodeType":"YulIdentifier","src":"11873:43:16"},"nativeSrc":"11873:72:16","nodeType":"YulFunctionCall","src":"11873:72:16"},"nativeSrc":"11873:72:16","nodeType":"YulExpressionStatement","src":"11873:72:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11999:6:16","nodeType":"YulIdentifier","src":"11999:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"12012:9:16","nodeType":"YulIdentifier","src":"12012:9:16"},{"kind":"number","nativeSrc":"12023:2:16","nodeType":"YulLiteral","src":"12023:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12008:3:16","nodeType":"YulIdentifier","src":"12008:3:16"},"nativeSrc":"12008:18:16","nodeType":"YulFunctionCall","src":"12008:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11955:43:16","nodeType":"YulIdentifier","src":"11955:43:16"},"nativeSrc":"11955:72:16","nodeType":"YulFunctionCall","src":"11955:72:16"},"nativeSrc":"11955:72:16","nodeType":"YulExpressionStatement","src":"11955:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"11592:442:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11702:9:16","nodeType":"YulTypedName","src":"11702:9:16","type":""},{"name":"value2","nativeSrc":"11714:6:16","nodeType":"YulTypedName","src":"11714:6:16","type":""},{"name":"value1","nativeSrc":"11722:6:16","nodeType":"YulTypedName","src":"11722:6:16","type":""},{"name":"value0","nativeSrc":"11730:6:16","nodeType":"YulTypedName","src":"11730:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11741:4:16","nodeType":"YulTypedName","src":"11741:4:16","type":""}],"src":"11592:442:16"},{"body":{"nativeSrc":"12093:51:16","nodeType":"YulBlock","src":"12093:51:16","statements":[{"nativeSrc":"12103:35:16","nodeType":"YulAssignment","src":"12103:35:16","value":{"arguments":[{"name":"value","nativeSrc":"12132:5:16","nodeType":"YulIdentifier","src":"12132:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"12114:17:16","nodeType":"YulIdentifier","src":"12114:17:16"},"nativeSrc":"12114:24:16","nodeType":"YulFunctionCall","src":"12114:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"12103:7:16","nodeType":"YulIdentifier","src":"12103:7:16"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"12040:104:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12075:5:16","nodeType":"YulTypedName","src":"12075:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12085:7:16","nodeType":"YulTypedName","src":"12085:7:16","type":""}],"src":"12040:104:16"},{"body":{"nativeSrc":"12201:87:16","nodeType":"YulBlock","src":"12201:87:16","statements":[{"body":{"nativeSrc":"12266:16:16","nodeType":"YulBlock","src":"12266:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12275:1:16","nodeType":"YulLiteral","src":"12275:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"12278:1:16","nodeType":"YulLiteral","src":"12278:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12268:6:16","nodeType":"YulIdentifier","src":"12268:6:16"},"nativeSrc":"12268:12:16","nodeType":"YulFunctionCall","src":"12268:12:16"},"nativeSrc":"12268:12:16","nodeType":"YulExpressionStatement","src":"12268:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12224:5:16","nodeType":"YulIdentifier","src":"12224:5:16"},{"arguments":[{"name":"value","nativeSrc":"12257:5:16","nodeType":"YulIdentifier","src":"12257:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"12231:25:16","nodeType":"YulIdentifier","src":"12231:25:16"},"nativeSrc":"12231:32:16","nodeType":"YulFunctionCall","src":"12231:32:16"}],"functionName":{"name":"eq","nativeSrc":"12221:2:16","nodeType":"YulIdentifier","src":"12221:2:16"},"nativeSrc":"12221:43:16","nodeType":"YulFunctionCall","src":"12221:43:16"}],"functionName":{"name":"iszero","nativeSrc":"12214:6:16","nodeType":"YulIdentifier","src":"12214:6:16"},"nativeSrc":"12214:51:16","nodeType":"YulFunctionCall","src":"12214:51:16"},"nativeSrc":"12211:71:16","nodeType":"YulIf","src":"12211:71:16"}]},"name":"validator_revert_t_address_payable","nativeSrc":"12150:138:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12194:5:16","nodeType":"YulTypedName","src":"12194:5:16","type":""}],"src":"12150:138:16"},{"body":{"nativeSrc":"12354:95:16","nodeType":"YulBlock","src":"12354:95:16","statements":[{"nativeSrc":"12364:29:16","nodeType":"YulAssignment","src":"12364:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"12386:6:16","nodeType":"YulIdentifier","src":"12386:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"12373:12:16","nodeType":"YulIdentifier","src":"12373:12:16"},"nativeSrc":"12373:20:16","nodeType":"YulFunctionCall","src":"12373:20:16"},"variableNames":[{"name":"value","nativeSrc":"12364:5:16","nodeType":"YulIdentifier","src":"12364:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12437:5:16","nodeType":"YulIdentifier","src":"12437:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"12402:34:16","nodeType":"YulIdentifier","src":"12402:34:16"},"nativeSrc":"12402:41:16","nodeType":"YulFunctionCall","src":"12402:41:16"},"nativeSrc":"12402:41:16","nodeType":"YulExpressionStatement","src":"12402:41:16"}]},"name":"abi_decode_t_address_payable","nativeSrc":"12294:155:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12332:6:16","nodeType":"YulTypedName","src":"12332:6:16","type":""},{"name":"end","nativeSrc":"12340:3:16","nodeType":"YulTypedName","src":"12340:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12348:5:16","nodeType":"YulTypedName","src":"12348:5:16","type":""}],"src":"12294:155:16"},{"body":{"nativeSrc":"12546:399:16","nodeType":"YulBlock","src":"12546:399:16","statements":[{"body":{"nativeSrc":"12592:83:16","nodeType":"YulBlock","src":"12592:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12594:77:16","nodeType":"YulIdentifier","src":"12594:77:16"},"nativeSrc":"12594:79:16","nodeType":"YulFunctionCall","src":"12594:79:16"},"nativeSrc":"12594:79:16","nodeType":"YulExpressionStatement","src":"12594:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12567:7:16","nodeType":"YulIdentifier","src":"12567:7:16"},{"name":"headStart","nativeSrc":"12576:9:16","nodeType":"YulIdentifier","src":"12576:9:16"}],"functionName":{"name":"sub","nativeSrc":"12563:3:16","nodeType":"YulIdentifier","src":"12563:3:16"},"nativeSrc":"12563:23:16","nodeType":"YulFunctionCall","src":"12563:23:16"},{"kind":"number","nativeSrc":"12588:2:16","nodeType":"YulLiteral","src":"12588:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12559:3:16","nodeType":"YulIdentifier","src":"12559:3:16"},"nativeSrc":"12559:32:16","nodeType":"YulFunctionCall","src":"12559:32:16"},"nativeSrc":"12556:119:16","nodeType":"YulIf","src":"12556:119:16"},{"nativeSrc":"12685:125:16","nodeType":"YulBlock","src":"12685:125:16","statements":[{"nativeSrc":"12700:15:16","nodeType":"YulVariableDeclaration","src":"12700:15:16","value":{"kind":"number","nativeSrc":"12714:1:16","nodeType":"YulLiteral","src":"12714:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12704:6:16","nodeType":"YulTypedName","src":"12704:6:16","type":""}]},{"nativeSrc":"12729:71:16","nodeType":"YulAssignment","src":"12729:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12772:9:16","nodeType":"YulIdentifier","src":"12772:9:16"},{"name":"offset","nativeSrc":"12783:6:16","nodeType":"YulIdentifier","src":"12783:6:16"}],"functionName":{"name":"add","nativeSrc":"12768:3:16","nodeType":"YulIdentifier","src":"12768:3:16"},"nativeSrc":"12768:22:16","nodeType":"YulFunctionCall","src":"12768:22:16"},{"name":"dataEnd","nativeSrc":"12792:7:16","nodeType":"YulIdentifier","src":"12792:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"12739:28:16","nodeType":"YulIdentifier","src":"12739:28:16"},"nativeSrc":"12739:61:16","nodeType":"YulFunctionCall","src":"12739:61:16"},"variableNames":[{"name":"value0","nativeSrc":"12729:6:16","nodeType":"YulIdentifier","src":"12729:6:16"}]}]},{"nativeSrc":"12820:118:16","nodeType":"YulBlock","src":"12820:118:16","statements":[{"nativeSrc":"12835:16:16","nodeType":"YulVariableDeclaration","src":"12835:16:16","value":{"kind":"number","nativeSrc":"12849:2:16","nodeType":"YulLiteral","src":"12849:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12839:6:16","nodeType":"YulTypedName","src":"12839:6:16","type":""}]},{"nativeSrc":"12865:63:16","nodeType":"YulAssignment","src":"12865:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12900:9:16","nodeType":"YulIdentifier","src":"12900:9:16"},{"name":"offset","nativeSrc":"12911:6:16","nodeType":"YulIdentifier","src":"12911:6:16"}],"functionName":{"name":"add","nativeSrc":"12896:3:16","nodeType":"YulIdentifier","src":"12896:3:16"},"nativeSrc":"12896:22:16","nodeType":"YulFunctionCall","src":"12896:22:16"},{"name":"dataEnd","nativeSrc":"12920:7:16","nodeType":"YulIdentifier","src":"12920:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12875:20:16","nodeType":"YulIdentifier","src":"12875:20:16"},"nativeSrc":"12875:53:16","nodeType":"YulFunctionCall","src":"12875:53:16"},"variableNames":[{"name":"value1","nativeSrc":"12865:6:16","nodeType":"YulIdentifier","src":"12865:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"12455:490:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12508:9:16","nodeType":"YulTypedName","src":"12508:9:16","type":""},{"name":"dataEnd","nativeSrc":"12519:7:16","nodeType":"YulTypedName","src":"12519:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12531:6:16","nodeType":"YulTypedName","src":"12531:6:16","type":""},{"name":"value1","nativeSrc":"12539:6:16","nodeType":"YulTypedName","src":"12539:6:16","type":""}],"src":"12455:490:16"},{"body":{"nativeSrc":"13047:73:16","nodeType":"YulBlock","src":"13047:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13064:3:16","nodeType":"YulIdentifier","src":"13064:3:16"},{"name":"length","nativeSrc":"13069:6:16","nodeType":"YulIdentifier","src":"13069:6:16"}],"functionName":{"name":"mstore","nativeSrc":"13057:6:16","nodeType":"YulIdentifier","src":"13057:6:16"},"nativeSrc":"13057:19:16","nodeType":"YulFunctionCall","src":"13057:19:16"},"nativeSrc":"13057:19:16","nodeType":"YulExpressionStatement","src":"13057:19:16"},{"nativeSrc":"13085:29:16","nodeType":"YulAssignment","src":"13085:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"13104:3:16","nodeType":"YulIdentifier","src":"13104:3:16"},{"kind":"number","nativeSrc":"13109:4:16","nodeType":"YulLiteral","src":"13109:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13100:3:16","nodeType":"YulIdentifier","src":"13100:3:16"},"nativeSrc":"13100:14:16","nodeType":"YulFunctionCall","src":"13100:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"13085:11:16","nodeType":"YulIdentifier","src":"13085:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12951:169:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13019:3:16","nodeType":"YulTypedName","src":"13019:3:16","type":""},{"name":"length","nativeSrc":"13024:6:16","nodeType":"YulTypedName","src":"13024:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13035:11:16","nodeType":"YulTypedName","src":"13035:11:16","type":""}],"src":"12951:169:16"},{"body":{"nativeSrc":"13232:59:16","nodeType":"YulBlock","src":"13232:59:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13254:6:16","nodeType":"YulIdentifier","src":"13254:6:16"},{"kind":"number","nativeSrc":"13262:1:16","nodeType":"YulLiteral","src":"13262:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13250:3:16","nodeType":"YulIdentifier","src":"13250:3:16"},"nativeSrc":"13250:14:16","nodeType":"YulFunctionCall","src":"13250:14:16"},{"hexValue":"4e6f7420746f6b656e206f776e6572","kind":"string","nativeSrc":"13266:17:16","nodeType":"YulLiteral","src":"13266:17:16","type":"","value":"Not token owner"}],"functionName":{"name":"mstore","nativeSrc":"13243:6:16","nodeType":"YulIdentifier","src":"13243:6:16"},"nativeSrc":"13243:41:16","nodeType":"YulFunctionCall","src":"13243:41:16"},"nativeSrc":"13243:41:16","nodeType":"YulExpressionStatement","src":"13243:41:16"}]},"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"13126:165:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13224:6:16","nodeType":"YulTypedName","src":"13224:6:16","type":""}],"src":"13126:165:16"},{"body":{"nativeSrc":"13443:220:16","nodeType":"YulBlock","src":"13443:220:16","statements":[{"nativeSrc":"13453:74:16","nodeType":"YulAssignment","src":"13453:74:16","value":{"arguments":[{"name":"pos","nativeSrc":"13519:3:16","nodeType":"YulIdentifier","src":"13519:3:16"},{"kind":"number","nativeSrc":"13524:2:16","nodeType":"YulLiteral","src":"13524:2:16","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13460:58:16","nodeType":"YulIdentifier","src":"13460:58:16"},"nativeSrc":"13460:67:16","nodeType":"YulFunctionCall","src":"13460:67:16"},"variableNames":[{"name":"pos","nativeSrc":"13453:3:16","nodeType":"YulIdentifier","src":"13453:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13625:3:16","nodeType":"YulIdentifier","src":"13625:3:16"}],"functionName":{"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"13536:88:16","nodeType":"YulIdentifier","src":"13536:88:16"},"nativeSrc":"13536:93:16","nodeType":"YulFunctionCall","src":"13536:93:16"},"nativeSrc":"13536:93:16","nodeType":"YulExpressionStatement","src":"13536:93:16"},{"nativeSrc":"13638:19:16","nodeType":"YulAssignment","src":"13638:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"13649:3:16","nodeType":"YulIdentifier","src":"13649:3:16"},{"kind":"number","nativeSrc":"13654:2:16","nodeType":"YulLiteral","src":"13654:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13645:3:16","nodeType":"YulIdentifier","src":"13645:3:16"},"nativeSrc":"13645:12:16","nodeType":"YulFunctionCall","src":"13645:12:16"},"variableNames":[{"name":"end","nativeSrc":"13638:3:16","nodeType":"YulIdentifier","src":"13638:3:16"}]}]},"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"13297:366:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13431:3:16","nodeType":"YulTypedName","src":"13431:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13439:3:16","nodeType":"YulTypedName","src":"13439:3:16","type":""}],"src":"13297:366:16"},{"body":{"nativeSrc":"13840:248:16","nodeType":"YulBlock","src":"13840:248:16","statements":[{"nativeSrc":"13850:26:16","nodeType":"YulAssignment","src":"13850:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13862:9:16","nodeType":"YulIdentifier","src":"13862:9:16"},{"kind":"number","nativeSrc":"13873:2:16","nodeType":"YulLiteral","src":"13873:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13858:3:16","nodeType":"YulIdentifier","src":"13858:3:16"},"nativeSrc":"13858:18:16","nodeType":"YulFunctionCall","src":"13858:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13850:4:16","nodeType":"YulIdentifier","src":"13850:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13897:9:16","nodeType":"YulIdentifier","src":"13897:9:16"},{"kind":"number","nativeSrc":"13908:1:16","nodeType":"YulLiteral","src":"13908:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13893:3:16","nodeType":"YulIdentifier","src":"13893:3:16"},"nativeSrc":"13893:17:16","nodeType":"YulFunctionCall","src":"13893:17:16"},{"arguments":[{"name":"tail","nativeSrc":"13916:4:16","nodeType":"YulIdentifier","src":"13916:4:16"},{"name":"headStart","nativeSrc":"13922:9:16","nodeType":"YulIdentifier","src":"13922:9:16"}],"functionName":{"name":"sub","nativeSrc":"13912:3:16","nodeType":"YulIdentifier","src":"13912:3:16"},"nativeSrc":"13912:20:16","nodeType":"YulFunctionCall","src":"13912:20:16"}],"functionName":{"name":"mstore","nativeSrc":"13886:6:16","nodeType":"YulIdentifier","src":"13886:6:16"},"nativeSrc":"13886:47:16","nodeType":"YulFunctionCall","src":"13886:47:16"},"nativeSrc":"13886:47:16","nodeType":"YulExpressionStatement","src":"13886:47:16"},{"nativeSrc":"13942:139:16","nodeType":"YulAssignment","src":"13942:139:16","value":{"arguments":[{"name":"tail","nativeSrc":"14076:4:16","nodeType":"YulIdentifier","src":"14076:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"13950:124:16","nodeType":"YulIdentifier","src":"13950:124:16"},"nativeSrc":"13950:131:16","nodeType":"YulFunctionCall","src":"13950:131:16"},"variableNames":[{"name":"tail","nativeSrc":"13942:4:16","nodeType":"YulIdentifier","src":"13942:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13669:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13820:9:16","nodeType":"YulTypedName","src":"13820:9:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13835:4:16","nodeType":"YulTypedName","src":"13835:4:16","type":""}],"src":"13669:419:16"},{"body":{"nativeSrc":"14200:66:16","nodeType":"YulBlock","src":"14200:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14222:6:16","nodeType":"YulIdentifier","src":"14222:6:16"},{"kind":"number","nativeSrc":"14230:1:16","nodeType":"YulLiteral","src":"14230:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14218:3:16","nodeType":"YulIdentifier","src":"14218:3:16"},"nativeSrc":"14218:14:16","nodeType":"YulFunctionCall","src":"14218:14:16"},{"hexValue":"496e76616c6964207461726765742061646472657373","kind":"string","nativeSrc":"14234:24:16","nodeType":"YulLiteral","src":"14234:24:16","type":"","value":"Invalid target address"}],"functionName":{"name":"mstore","nativeSrc":"14211:6:16","nodeType":"YulIdentifier","src":"14211:6:16"},"nativeSrc":"14211:48:16","nodeType":"YulFunctionCall","src":"14211:48:16"},"nativeSrc":"14211:48:16","nodeType":"YulExpressionStatement","src":"14211:48:16"}]},"name":"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","nativeSrc":"14094:172:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14192:6:16","nodeType":"YulTypedName","src":"14192:6:16","type":""}],"src":"14094:172:16"},{"body":{"nativeSrc":"14418:220:16","nodeType":"YulBlock","src":"14418:220:16","statements":[{"nativeSrc":"14428:74:16","nodeType":"YulAssignment","src":"14428:74:16","value":{"arguments":[{"name":"pos","nativeSrc":"14494:3:16","nodeType":"YulIdentifier","src":"14494:3:16"},{"kind":"number","nativeSrc":"14499:2:16","nodeType":"YulLiteral","src":"14499:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14435:58:16","nodeType":"YulIdentifier","src":"14435:58:16"},"nativeSrc":"14435:67:16","nodeType":"YulFunctionCall","src":"14435:67:16"},"variableNames":[{"name":"pos","nativeSrc":"14428:3:16","nodeType":"YulIdentifier","src":"14428:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14600:3:16","nodeType":"YulIdentifier","src":"14600:3:16"}],"functionName":{"name":"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556","nativeSrc":"14511:88:16","nodeType":"YulIdentifier","src":"14511:88:16"},"nativeSrc":"14511:93:16","nodeType":"YulFunctionCall","src":"14511:93:16"},"nativeSrc":"14511:93:16","nodeType":"YulExpressionStatement","src":"14511:93:16"},{"nativeSrc":"14613:19:16","nodeType":"YulAssignment","src":"14613:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"14624:3:16","nodeType":"YulIdentifier","src":"14624:3:16"},{"kind":"number","nativeSrc":"14629:2:16","nodeType":"YulLiteral","src":"14629:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14620:3:16","nodeType":"YulIdentifier","src":"14620:3:16"},"nativeSrc":"14620:12:16","nodeType":"YulFunctionCall","src":"14620:12:16"},"variableNames":[{"name":"end","nativeSrc":"14613:3:16","nodeType":"YulIdentifier","src":"14613:3:16"}]}]},"name":"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack","nativeSrc":"14272:366:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14406:3:16","nodeType":"YulTypedName","src":"14406:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14414:3:16","nodeType":"YulTypedName","src":"14414:3:16","type":""}],"src":"14272:366:16"},{"body":{"nativeSrc":"14815:248:16","nodeType":"YulBlock","src":"14815:248:16","statements":[{"nativeSrc":"14825:26:16","nodeType":"YulAssignment","src":"14825:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"14837:9:16","nodeType":"YulIdentifier","src":"14837:9:16"},{"kind":"number","nativeSrc":"14848:2:16","nodeType":"YulLiteral","src":"14848:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14833:3:16","nodeType":"YulIdentifier","src":"14833:3:16"},"nativeSrc":"14833:18:16","nodeType":"YulFunctionCall","src":"14833:18:16"},"variableNames":[{"name":"tail","nativeSrc":"14825:4:16","nodeType":"YulIdentifier","src":"14825:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14872:9:16","nodeType":"YulIdentifier","src":"14872:9:16"},{"kind":"number","nativeSrc":"14883:1:16","nodeType":"YulLiteral","src":"14883:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14868:3:16","nodeType":"YulIdentifier","src":"14868:3:16"},"nativeSrc":"14868:17:16","nodeType":"YulFunctionCall","src":"14868:17:16"},{"arguments":[{"name":"tail","nativeSrc":"14891:4:16","nodeType":"YulIdentifier","src":"14891:4:16"},{"name":"headStart","nativeSrc":"14897:9:16","nodeType":"YulIdentifier","src":"14897:9:16"}],"functionName":{"name":"sub","nativeSrc":"14887:3:16","nodeType":"YulIdentifier","src":"14887:3:16"},"nativeSrc":"14887:20:16","nodeType":"YulFunctionCall","src":"14887:20:16"}],"functionName":{"name":"mstore","nativeSrc":"14861:6:16","nodeType":"YulIdentifier","src":"14861:6:16"},"nativeSrc":"14861:47:16","nodeType":"YulFunctionCall","src":"14861:47:16"},"nativeSrc":"14861:47:16","nodeType":"YulExpressionStatement","src":"14861:47:16"},{"nativeSrc":"14917:139:16","nodeType":"YulAssignment","src":"14917:139:16","value":{"arguments":[{"name":"tail","nativeSrc":"15051:4:16","nodeType":"YulIdentifier","src":"15051:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack","nativeSrc":"14925:124:16","nodeType":"YulIdentifier","src":"14925:124:16"},"nativeSrc":"14925:131:16","nodeType":"YulFunctionCall","src":"14925:131:16"},"variableNames":[{"name":"tail","nativeSrc":"14917:4:16","nodeType":"YulIdentifier","src":"14917:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14644:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14795:9:16","nodeType":"YulTypedName","src":"14795:9:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14810:4:16","nodeType":"YulTypedName","src":"14810:4:16","type":""}],"src":"14644:419:16"},{"body":{"nativeSrc":"15132:80:16","nodeType":"YulBlock","src":"15132:80:16","statements":[{"nativeSrc":"15142:22:16","nodeType":"YulAssignment","src":"15142:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"15157:6:16","nodeType":"YulIdentifier","src":"15157:6:16"}],"functionName":{"name":"mload","nativeSrc":"15151:5:16","nodeType":"YulIdentifier","src":"15151:5:16"},"nativeSrc":"15151:13:16","nodeType":"YulFunctionCall","src":"15151:13:16"},"variableNames":[{"name":"value","nativeSrc":"15142:5:16","nodeType":"YulIdentifier","src":"15142:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15200:5:16","nodeType":"YulIdentifier","src":"15200:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"15173:26:16","nodeType":"YulIdentifier","src":"15173:26:16"},"nativeSrc":"15173:33:16","nodeType":"YulFunctionCall","src":"15173:33:16"},"nativeSrc":"15173:33:16","nodeType":"YulExpressionStatement","src":"15173:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15069:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15110:6:16","nodeType":"YulTypedName","src":"15110:6:16","type":""},{"name":"end","nativeSrc":"15118:3:16","nodeType":"YulTypedName","src":"15118:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15126:5:16","nodeType":"YulTypedName","src":"15126:5:16","type":""}],"src":"15069:143:16"},{"body":{"nativeSrc":"15295:274:16","nodeType":"YulBlock","src":"15295:274:16","statements":[{"body":{"nativeSrc":"15341:83:16","nodeType":"YulBlock","src":"15341:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15343:77:16","nodeType":"YulIdentifier","src":"15343:77:16"},"nativeSrc":"15343:79:16","nodeType":"YulFunctionCall","src":"15343:79:16"},"nativeSrc":"15343:79:16","nodeType":"YulExpressionStatement","src":"15343:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15316:7:16","nodeType":"YulIdentifier","src":"15316:7:16"},{"name":"headStart","nativeSrc":"15325:9:16","nodeType":"YulIdentifier","src":"15325:9:16"}],"functionName":{"name":"sub","nativeSrc":"15312:3:16","nodeType":"YulIdentifier","src":"15312:3:16"},"nativeSrc":"15312:23:16","nodeType":"YulFunctionCall","src":"15312:23:16"},{"kind":"number","nativeSrc":"15337:2:16","nodeType":"YulLiteral","src":"15337:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15308:3:16","nodeType":"YulIdentifier","src":"15308:3:16"},"nativeSrc":"15308:32:16","nodeType":"YulFunctionCall","src":"15308:32:16"},"nativeSrc":"15305:119:16","nodeType":"YulIf","src":"15305:119:16"},{"nativeSrc":"15434:128:16","nodeType":"YulBlock","src":"15434:128:16","statements":[{"nativeSrc":"15449:15:16","nodeType":"YulVariableDeclaration","src":"15449:15:16","value":{"kind":"number","nativeSrc":"15463:1:16","nodeType":"YulLiteral","src":"15463:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15453:6:16","nodeType":"YulTypedName","src":"15453:6:16","type":""}]},{"nativeSrc":"15478:74:16","nodeType":"YulAssignment","src":"15478:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15524:9:16","nodeType":"YulIdentifier","src":"15524:9:16"},{"name":"offset","nativeSrc":"15535:6:16","nodeType":"YulIdentifier","src":"15535:6:16"}],"functionName":{"name":"add","nativeSrc":"15520:3:16","nodeType":"YulIdentifier","src":"15520:3:16"},"nativeSrc":"15520:22:16","nodeType":"YulFunctionCall","src":"15520:22:16"},{"name":"dataEnd","nativeSrc":"15544:7:16","nodeType":"YulIdentifier","src":"15544:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15488:31:16","nodeType":"YulIdentifier","src":"15488:31:16"},"nativeSrc":"15488:64:16","nodeType":"YulFunctionCall","src":"15488:64:16"},"variableNames":[{"name":"value0","nativeSrc":"15478:6:16","nodeType":"YulIdentifier","src":"15478:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"15218:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15265:9:16","nodeType":"YulTypedName","src":"15265:9:16","type":""},{"name":"dataEnd","nativeSrc":"15276:7:16","nodeType":"YulTypedName","src":"15276:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15288:6:16","nodeType":"YulTypedName","src":"15288:6:16","type":""}],"src":"15218:351:16"},{"body":{"nativeSrc":"15681:62:16","nodeType":"YulBlock","src":"15681:62:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15703:6:16","nodeType":"YulIdentifier","src":"15703:6:16"},{"kind":"number","nativeSrc":"15711:1:16","nodeType":"YulLiteral","src":"15711:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15699:3:16","nodeType":"YulIdentifier","src":"15699:3:16"},"nativeSrc":"15699:14:16","nodeType":"YulFunctionCall","src":"15699:14:16"},{"hexValue":"496e73756666696369656e742066756e6473","kind":"string","nativeSrc":"15715:20:16","nodeType":"YulLiteral","src":"15715:20:16","type":"","value":"Insufficient funds"}],"functionName":{"name":"mstore","nativeSrc":"15692:6:16","nodeType":"YulIdentifier","src":"15692:6:16"},"nativeSrc":"15692:44:16","nodeType":"YulFunctionCall","src":"15692:44:16"},"nativeSrc":"15692:44:16","nodeType":"YulExpressionStatement","src":"15692:44:16"}]},"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"15575:168:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15673:6:16","nodeType":"YulTypedName","src":"15673:6:16","type":""}],"src":"15575:168:16"},{"body":{"nativeSrc":"15895:220:16","nodeType":"YulBlock","src":"15895:220:16","statements":[{"nativeSrc":"15905:74:16","nodeType":"YulAssignment","src":"15905:74:16","value":{"arguments":[{"name":"pos","nativeSrc":"15971:3:16","nodeType":"YulIdentifier","src":"15971:3:16"},{"kind":"number","nativeSrc":"15976:2:16","nodeType":"YulLiteral","src":"15976:2:16","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15912:58:16","nodeType":"YulIdentifier","src":"15912:58:16"},"nativeSrc":"15912:67:16","nodeType":"YulFunctionCall","src":"15912:67:16"},"variableNames":[{"name":"pos","nativeSrc":"15905:3:16","nodeType":"YulIdentifier","src":"15905:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16077:3:16","nodeType":"YulIdentifier","src":"16077:3:16"}],"functionName":{"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"15988:88:16","nodeType":"YulIdentifier","src":"15988:88:16"},"nativeSrc":"15988:93:16","nodeType":"YulFunctionCall","src":"15988:93:16"},"nativeSrc":"15988:93:16","nodeType":"YulExpressionStatement","src":"15988:93:16"},{"nativeSrc":"16090:19:16","nodeType":"YulAssignment","src":"16090:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"16101:3:16","nodeType":"YulIdentifier","src":"16101:3:16"},{"kind":"number","nativeSrc":"16106:2:16","nodeType":"YulLiteral","src":"16106:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16097:3:16","nodeType":"YulIdentifier","src":"16097:3:16"},"nativeSrc":"16097:12:16","nodeType":"YulFunctionCall","src":"16097:12:16"},"variableNames":[{"name":"end","nativeSrc":"16090:3:16","nodeType":"YulIdentifier","src":"16090:3:16"}]}]},"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"15749:366:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15883:3:16","nodeType":"YulTypedName","src":"15883:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15891:3:16","nodeType":"YulTypedName","src":"15891:3:16","type":""}],"src":"15749:366:16"},{"body":{"nativeSrc":"16292:248:16","nodeType":"YulBlock","src":"16292:248:16","statements":[{"nativeSrc":"16302:26:16","nodeType":"YulAssignment","src":"16302:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"16314:9:16","nodeType":"YulIdentifier","src":"16314:9:16"},{"kind":"number","nativeSrc":"16325:2:16","nodeType":"YulLiteral","src":"16325:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16310:3:16","nodeType":"YulIdentifier","src":"16310:3:16"},"nativeSrc":"16310:18:16","nodeType":"YulFunctionCall","src":"16310:18:16"},"variableNames":[{"name":"tail","nativeSrc":"16302:4:16","nodeType":"YulIdentifier","src":"16302:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16349:9:16","nodeType":"YulIdentifier","src":"16349:9:16"},{"kind":"number","nativeSrc":"16360:1:16","nodeType":"YulLiteral","src":"16360:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16345:3:16","nodeType":"YulIdentifier","src":"16345:3:16"},"nativeSrc":"16345:17:16","nodeType":"YulFunctionCall","src":"16345:17:16"},{"arguments":[{"name":"tail","nativeSrc":"16368:4:16","nodeType":"YulIdentifier","src":"16368:4:16"},{"name":"headStart","nativeSrc":"16374:9:16","nodeType":"YulIdentifier","src":"16374:9:16"}],"functionName":{"name":"sub","nativeSrc":"16364:3:16","nodeType":"YulIdentifier","src":"16364:3:16"},"nativeSrc":"16364:20:16","nodeType":"YulFunctionCall","src":"16364:20:16"}],"functionName":{"name":"mstore","nativeSrc":"16338:6:16","nodeType":"YulIdentifier","src":"16338:6:16"},"nativeSrc":"16338:47:16","nodeType":"YulFunctionCall","src":"16338:47:16"},"nativeSrc":"16338:47:16","nodeType":"YulExpressionStatement","src":"16338:47:16"},{"nativeSrc":"16394:139:16","nodeType":"YulAssignment","src":"16394:139:16","value":{"arguments":[{"name":"tail","nativeSrc":"16528:4:16","nodeType":"YulIdentifier","src":"16528:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"16402:124:16","nodeType":"YulIdentifier","src":"16402:124:16"},"nativeSrc":"16402:131:16","nodeType":"YulFunctionCall","src":"16402:131:16"},"variableNames":[{"name":"tail","nativeSrc":"16394:4:16","nodeType":"YulIdentifier","src":"16394:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16121:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16272:9:16","nodeType":"YulTypedName","src":"16272:9:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16287:4:16","nodeType":"YulTypedName","src":"16287:4:16","type":""}],"src":"16121:419:16"},{"body":{"nativeSrc":"16574:152:16","nodeType":"YulBlock","src":"16574:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16591:1:16","nodeType":"YulLiteral","src":"16591:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"16594:77:16","nodeType":"YulLiteral","src":"16594:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16584:6:16","nodeType":"YulIdentifier","src":"16584:6:16"},"nativeSrc":"16584:88:16","nodeType":"YulFunctionCall","src":"16584:88:16"},"nativeSrc":"16584:88:16","nodeType":"YulExpressionStatement","src":"16584:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16688:1:16","nodeType":"YulLiteral","src":"16688:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"16691:4:16","nodeType":"YulLiteral","src":"16691:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16681:6:16","nodeType":"YulIdentifier","src":"16681:6:16"},"nativeSrc":"16681:15:16","nodeType":"YulFunctionCall","src":"16681:15:16"},"nativeSrc":"16681:15:16","nodeType":"YulExpressionStatement","src":"16681:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16712:1:16","nodeType":"YulLiteral","src":"16712:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"16715:4:16","nodeType":"YulLiteral","src":"16715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16705:6:16","nodeType":"YulIdentifier","src":"16705:6:16"},"nativeSrc":"16705:15:16","nodeType":"YulFunctionCall","src":"16705:15:16"},"nativeSrc":"16705:15:16","nodeType":"YulExpressionStatement","src":"16705:15:16"}]},"name":"panic_error_0x11","nativeSrc":"16546:180:16","nodeType":"YulFunctionDefinition","src":"16546:180:16"},{"body":{"nativeSrc":"16775:190:16","nodeType":"YulBlock","src":"16775:190:16","statements":[{"nativeSrc":"16785:33:16","nodeType":"YulAssignment","src":"16785:33:16","value":{"arguments":[{"name":"value","nativeSrc":"16812:5:16","nodeType":"YulIdentifier","src":"16812:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16794:17:16","nodeType":"YulIdentifier","src":"16794:17:16"},"nativeSrc":"16794:24:16","nodeType":"YulFunctionCall","src":"16794:24:16"},"variableNames":[{"name":"value","nativeSrc":"16785:5:16","nodeType":"YulIdentifier","src":"16785:5:16"}]},{"body":{"nativeSrc":"16908:22:16","nodeType":"YulBlock","src":"16908:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16910:16:16","nodeType":"YulIdentifier","src":"16910:16:16"},"nativeSrc":"16910:18:16","nodeType":"YulFunctionCall","src":"16910:18:16"},"nativeSrc":"16910:18:16","nodeType":"YulExpressionStatement","src":"16910:18:16"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"16833:5:16","nodeType":"YulIdentifier","src":"16833:5:16"},{"kind":"number","nativeSrc":"16840:66:16","nodeType":"YulLiteral","src":"16840:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"16830:2:16","nodeType":"YulIdentifier","src":"16830:2:16"},"nativeSrc":"16830:77:16","nodeType":"YulFunctionCall","src":"16830:77:16"},"nativeSrc":"16827:103:16","nodeType":"YulIf","src":"16827:103:16"},{"nativeSrc":"16939:20:16","nodeType":"YulAssignment","src":"16939:20:16","value":{"arguments":[{"name":"value","nativeSrc":"16950:5:16","nodeType":"YulIdentifier","src":"16950:5:16"},{"kind":"number","nativeSrc":"16957:1:16","nodeType":"YulLiteral","src":"16957:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16946:3:16","nodeType":"YulIdentifier","src":"16946:3:16"},"nativeSrc":"16946:13:16","nodeType":"YulFunctionCall","src":"16946:13:16"},"variableNames":[{"name":"ret","nativeSrc":"16939:3:16","nodeType":"YulIdentifier","src":"16939:3:16"}]}]},"name":"increment_t_uint256","nativeSrc":"16732:233:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16761:5:16","nodeType":"YulTypedName","src":"16761:5:16","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"16771:3:16","nodeType":"YulTypedName","src":"16771:3:16","type":""}],"src":"16732:233:16"},{"body":{"nativeSrc":"17097:206:16","nodeType":"YulBlock","src":"17097:206:16","statements":[{"nativeSrc":"17107:26:16","nodeType":"YulAssignment","src":"17107:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"17119:9:16","nodeType":"YulIdentifier","src":"17119:9:16"},{"kind":"number","nativeSrc":"17130:2:16","nodeType":"YulLiteral","src":"17130:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17115:3:16","nodeType":"YulIdentifier","src":"17115:3:16"},"nativeSrc":"17115:18:16","nodeType":"YulFunctionCall","src":"17115:18:16"},"variableNames":[{"name":"tail","nativeSrc":"17107:4:16","nodeType":"YulIdentifier","src":"17107:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17187:6:16","nodeType":"YulIdentifier","src":"17187:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"17200:9:16","nodeType":"YulIdentifier","src":"17200:9:16"},{"kind":"number","nativeSrc":"17211:1:16","nodeType":"YulLiteral","src":"17211:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17196:3:16","nodeType":"YulIdentifier","src":"17196:3:16"},"nativeSrc":"17196:17:16","nodeType":"YulFunctionCall","src":"17196:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17143:43:16","nodeType":"YulIdentifier","src":"17143:43:16"},"nativeSrc":"17143:71:16","nodeType":"YulFunctionCall","src":"17143:71:16"},"nativeSrc":"17143:71:16","nodeType":"YulExpressionStatement","src":"17143:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17268:6:16","nodeType":"YulIdentifier","src":"17268:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"17281:9:16","nodeType":"YulIdentifier","src":"17281:9:16"},{"kind":"number","nativeSrc":"17292:2:16","nodeType":"YulLiteral","src":"17292:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17277:3:16","nodeType":"YulIdentifier","src":"17277:3:16"},"nativeSrc":"17277:18:16","nodeType":"YulFunctionCall","src":"17277:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17224:43:16","nodeType":"YulIdentifier","src":"17224:43:16"},"nativeSrc":"17224:72:16","nodeType":"YulFunctionCall","src":"17224:72:16"},"nativeSrc":"17224:72:16","nodeType":"YulExpressionStatement","src":"17224:72:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"16971:332:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17061:9:16","nodeType":"YulTypedName","src":"17061:9:16","type":""},{"name":"value1","nativeSrc":"17073:6:16","nodeType":"YulTypedName","src":"17073:6:16","type":""},{"name":"value0","nativeSrc":"17081:6:16","nodeType":"YulTypedName","src":"17081:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17092:4:16","nodeType":"YulTypedName","src":"17092:4:16","type":""}],"src":"16971:332:16"},{"body":{"nativeSrc":"17349:76:16","nodeType":"YulBlock","src":"17349:76:16","statements":[{"body":{"nativeSrc":"17403:16:16","nodeType":"YulBlock","src":"17403:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17412:1:16","nodeType":"YulLiteral","src":"17412:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"17415:1:16","nodeType":"YulLiteral","src":"17415:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17405:6:16","nodeType":"YulIdentifier","src":"17405:6:16"},"nativeSrc":"17405:12:16","nodeType":"YulFunctionCall","src":"17405:12:16"},"nativeSrc":"17405:12:16","nodeType":"YulExpressionStatement","src":"17405:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17372:5:16","nodeType":"YulIdentifier","src":"17372:5:16"},{"arguments":[{"name":"value","nativeSrc":"17394:5:16","nodeType":"YulIdentifier","src":"17394:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"17379:14:16","nodeType":"YulIdentifier","src":"17379:14:16"},"nativeSrc":"17379:21:16","nodeType":"YulFunctionCall","src":"17379:21:16"}],"functionName":{"name":"eq","nativeSrc":"17369:2:16","nodeType":"YulIdentifier","src":"17369:2:16"},"nativeSrc":"17369:32:16","nodeType":"YulFunctionCall","src":"17369:32:16"}],"functionName":{"name":"iszero","nativeSrc":"17362:6:16","nodeType":"YulIdentifier","src":"17362:6:16"},"nativeSrc":"17362:40:16","nodeType":"YulFunctionCall","src":"17362:40:16"},"nativeSrc":"17359:60:16","nodeType":"YulIf","src":"17359:60:16"}]},"name":"validator_revert_t_bool","nativeSrc":"17309:116:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17342:5:16","nodeType":"YulTypedName","src":"17342:5:16","type":""}],"src":"17309:116:16"},{"body":{"nativeSrc":"17491:77:16","nodeType":"YulBlock","src":"17491:77:16","statements":[{"nativeSrc":"17501:22:16","nodeType":"YulAssignment","src":"17501:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"17516:6:16","nodeType":"YulIdentifier","src":"17516:6:16"}],"functionName":{"name":"mload","nativeSrc":"17510:5:16","nodeType":"YulIdentifier","src":"17510:5:16"},"nativeSrc":"17510:13:16","nodeType":"YulFunctionCall","src":"17510:13:16"},"variableNames":[{"name":"value","nativeSrc":"17501:5:16","nodeType":"YulIdentifier","src":"17501:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17556:5:16","nodeType":"YulIdentifier","src":"17556:5:16"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"17532:23:16","nodeType":"YulIdentifier","src":"17532:23:16"},"nativeSrc":"17532:30:16","nodeType":"YulFunctionCall","src":"17532:30:16"},"nativeSrc":"17532:30:16","nodeType":"YulExpressionStatement","src":"17532:30:16"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"17431:137:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17469:6:16","nodeType":"YulTypedName","src":"17469:6:16","type":""},{"name":"end","nativeSrc":"17477:3:16","nodeType":"YulTypedName","src":"17477:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17485:5:16","nodeType":"YulTypedName","src":"17485:5:16","type":""}],"src":"17431:137:16"},{"body":{"nativeSrc":"17648:271:16","nodeType":"YulBlock","src":"17648:271:16","statements":[{"body":{"nativeSrc":"17694:83:16","nodeType":"YulBlock","src":"17694:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17696:77:16","nodeType":"YulIdentifier","src":"17696:77:16"},"nativeSrc":"17696:79:16","nodeType":"YulFunctionCall","src":"17696:79:16"},"nativeSrc":"17696:79:16","nodeType":"YulExpressionStatement","src":"17696:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17669:7:16","nodeType":"YulIdentifier","src":"17669:7:16"},{"name":"headStart","nativeSrc":"17678:9:16","nodeType":"YulIdentifier","src":"17678:9:16"}],"functionName":{"name":"sub","nativeSrc":"17665:3:16","nodeType":"YulIdentifier","src":"17665:3:16"},"nativeSrc":"17665:23:16","nodeType":"YulFunctionCall","src":"17665:23:16"},{"kind":"number","nativeSrc":"17690:2:16","nodeType":"YulLiteral","src":"17690:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17661:3:16","nodeType":"YulIdentifier","src":"17661:3:16"},"nativeSrc":"17661:32:16","nodeType":"YulFunctionCall","src":"17661:32:16"},"nativeSrc":"17658:119:16","nodeType":"YulIf","src":"17658:119:16"},{"nativeSrc":"17787:125:16","nodeType":"YulBlock","src":"17787:125:16","statements":[{"nativeSrc":"17802:15:16","nodeType":"YulVariableDeclaration","src":"17802:15:16","value":{"kind":"number","nativeSrc":"17816:1:16","nodeType":"YulLiteral","src":"17816:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17806:6:16","nodeType":"YulTypedName","src":"17806:6:16","type":""}]},{"nativeSrc":"17831:71:16","nodeType":"YulAssignment","src":"17831:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17874:9:16","nodeType":"YulIdentifier","src":"17874:9:16"},{"name":"offset","nativeSrc":"17885:6:16","nodeType":"YulIdentifier","src":"17885:6:16"}],"functionName":{"name":"add","nativeSrc":"17870:3:16","nodeType":"YulIdentifier","src":"17870:3:16"},"nativeSrc":"17870:22:16","nodeType":"YulFunctionCall","src":"17870:22:16"},{"name":"dataEnd","nativeSrc":"17894:7:16","nodeType":"YulIdentifier","src":"17894:7:16"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"17841:28:16","nodeType":"YulIdentifier","src":"17841:28:16"},"nativeSrc":"17841:61:16","nodeType":"YulFunctionCall","src":"17841:61:16"},"variableNames":[{"name":"value0","nativeSrc":"17831:6:16","nodeType":"YulIdentifier","src":"17831:6:16"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"17574:345:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17618:9:16","nodeType":"YulTypedName","src":"17618:9:16","type":""},{"name":"dataEnd","nativeSrc":"17629:7:16","nodeType":"YulTypedName","src":"17629:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17641:6:16","nodeType":"YulTypedName","src":"17641:6:16","type":""}],"src":"17574:345:16"},{"body":{"nativeSrc":"17988:80:16","nodeType":"YulBlock","src":"17988:80:16","statements":[{"nativeSrc":"17998:22:16","nodeType":"YulAssignment","src":"17998:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"18013:6:16","nodeType":"YulIdentifier","src":"18013:6:16"}],"functionName":{"name":"mload","nativeSrc":"18007:5:16","nodeType":"YulIdentifier","src":"18007:5:16"},"nativeSrc":"18007:13:16","nodeType":"YulFunctionCall","src":"18007:13:16"},"variableNames":[{"name":"value","nativeSrc":"17998:5:16","nodeType":"YulIdentifier","src":"17998:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"18056:5:16","nodeType":"YulIdentifier","src":"18056:5:16"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"18029:26:16","nodeType":"YulIdentifier","src":"18029:26:16"},"nativeSrc":"18029:33:16","nodeType":"YulFunctionCall","src":"18029:33:16"},"nativeSrc":"18029:33:16","nodeType":"YulExpressionStatement","src":"18029:33:16"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"17925:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17966:6:16","nodeType":"YulTypedName","src":"17966:6:16","type":""},{"name":"end","nativeSrc":"17974:3:16","nodeType":"YulTypedName","src":"17974:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17982:5:16","nodeType":"YulTypedName","src":"17982:5:16","type":""}],"src":"17925:143:16"},{"body":{"nativeSrc":"18185:552:16","nodeType":"YulBlock","src":"18185:552:16","statements":[{"body":{"nativeSrc":"18231:83:16","nodeType":"YulBlock","src":"18231:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18233:77:16","nodeType":"YulIdentifier","src":"18233:77:16"},"nativeSrc":"18233:79:16","nodeType":"YulFunctionCall","src":"18233:79:16"},"nativeSrc":"18233:79:16","nodeType":"YulExpressionStatement","src":"18233:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18206:7:16","nodeType":"YulIdentifier","src":"18206:7:16"},{"name":"headStart","nativeSrc":"18215:9:16","nodeType":"YulIdentifier","src":"18215:9:16"}],"functionName":{"name":"sub","nativeSrc":"18202:3:16","nodeType":"YulIdentifier","src":"18202:3:16"},"nativeSrc":"18202:23:16","nodeType":"YulFunctionCall","src":"18202:23:16"},{"kind":"number","nativeSrc":"18227:2:16","nodeType":"YulLiteral","src":"18227:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"18198:3:16","nodeType":"YulIdentifier","src":"18198:3:16"},"nativeSrc":"18198:32:16","nodeType":"YulFunctionCall","src":"18198:32:16"},"nativeSrc":"18195:119:16","nodeType":"YulIf","src":"18195:119:16"},{"nativeSrc":"18324:128:16","nodeType":"YulBlock","src":"18324:128:16","statements":[{"nativeSrc":"18339:15:16","nodeType":"YulVariableDeclaration","src":"18339:15:16","value":{"kind":"number","nativeSrc":"18353:1:16","nodeType":"YulLiteral","src":"18353:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18343:6:16","nodeType":"YulTypedName","src":"18343:6:16","type":""}]},{"nativeSrc":"18368:74:16","nodeType":"YulAssignment","src":"18368:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18414:9:16","nodeType":"YulIdentifier","src":"18414:9:16"},{"name":"offset","nativeSrc":"18425:6:16","nodeType":"YulIdentifier","src":"18425:6:16"}],"functionName":{"name":"add","nativeSrc":"18410:3:16","nodeType":"YulIdentifier","src":"18410:3:16"},"nativeSrc":"18410:22:16","nodeType":"YulFunctionCall","src":"18410:22:16"},{"name":"dataEnd","nativeSrc":"18434:7:16","nodeType":"YulIdentifier","src":"18434:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"18378:31:16","nodeType":"YulIdentifier","src":"18378:31:16"},"nativeSrc":"18378:64:16","nodeType":"YulFunctionCall","src":"18378:64:16"},"variableNames":[{"name":"value0","nativeSrc":"18368:6:16","nodeType":"YulIdentifier","src":"18368:6:16"}]}]},{"nativeSrc":"18462:129:16","nodeType":"YulBlock","src":"18462:129:16","statements":[{"nativeSrc":"18477:16:16","nodeType":"YulVariableDeclaration","src":"18477:16:16","value":{"kind":"number","nativeSrc":"18491:2:16","nodeType":"YulLiteral","src":"18491:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"18481:6:16","nodeType":"YulTypedName","src":"18481:6:16","type":""}]},{"nativeSrc":"18507:74:16","nodeType":"YulAssignment","src":"18507:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18553:9:16","nodeType":"YulIdentifier","src":"18553:9:16"},{"name":"offset","nativeSrc":"18564:6:16","nodeType":"YulIdentifier","src":"18564:6:16"}],"functionName":{"name":"add","nativeSrc":"18549:3:16","nodeType":"YulIdentifier","src":"18549:3:16"},"nativeSrc":"18549:22:16","nodeType":"YulFunctionCall","src":"18549:22:16"},{"name":"dataEnd","nativeSrc":"18573:7:16","nodeType":"YulIdentifier","src":"18573:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"18517:31:16","nodeType":"YulIdentifier","src":"18517:31:16"},"nativeSrc":"18517:64:16","nodeType":"YulFunctionCall","src":"18517:64:16"},"variableNames":[{"name":"value1","nativeSrc":"18507:6:16","nodeType":"YulIdentifier","src":"18507:6:16"}]}]},{"nativeSrc":"18601:129:16","nodeType":"YulBlock","src":"18601:129:16","statements":[{"nativeSrc":"18616:16:16","nodeType":"YulVariableDeclaration","src":"18616:16:16","value":{"kind":"number","nativeSrc":"18630:2:16","nodeType":"YulLiteral","src":"18630:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"18620:6:16","nodeType":"YulTypedName","src":"18620:6:16","type":""}]},{"nativeSrc":"18646:74:16","nodeType":"YulAssignment","src":"18646:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18692:9:16","nodeType":"YulIdentifier","src":"18692:9:16"},{"name":"offset","nativeSrc":"18703:6:16","nodeType":"YulIdentifier","src":"18703:6:16"}],"functionName":{"name":"add","nativeSrc":"18688:3:16","nodeType":"YulIdentifier","src":"18688:3:16"},"nativeSrc":"18688:22:16","nodeType":"YulFunctionCall","src":"18688:22:16"},{"name":"dataEnd","nativeSrc":"18712:7:16","nodeType":"YulIdentifier","src":"18712:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"18656:31:16","nodeType":"YulIdentifier","src":"18656:31:16"},"nativeSrc":"18656:64:16","nodeType":"YulFunctionCall","src":"18656:64:16"},"variableNames":[{"name":"value2","nativeSrc":"18646:6:16","nodeType":"YulIdentifier","src":"18646:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory","nativeSrc":"18074:663:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18139:9:16","nodeType":"YulTypedName","src":"18139:9:16","type":""},{"name":"dataEnd","nativeSrc":"18150:7:16","nodeType":"YulTypedName","src":"18150:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18162:6:16","nodeType":"YulTypedName","src":"18162:6:16","type":""},{"name":"value1","nativeSrc":"18170:6:16","nodeType":"YulTypedName","src":"18170:6:16","type":""},{"name":"value2","nativeSrc":"18178:6:16","nodeType":"YulTypedName","src":"18178:6:16","type":""}],"src":"18074:663:16"},{"body":{"nativeSrc":"18820:274:16","nodeType":"YulBlock","src":"18820:274:16","statements":[{"body":{"nativeSrc":"18866:83:16","nodeType":"YulBlock","src":"18866:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18868:77:16","nodeType":"YulIdentifier","src":"18868:77:16"},"nativeSrc":"18868:79:16","nodeType":"YulFunctionCall","src":"18868:79:16"},"nativeSrc":"18868:79:16","nodeType":"YulExpressionStatement","src":"18868:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18841:7:16","nodeType":"YulIdentifier","src":"18841:7:16"},{"name":"headStart","nativeSrc":"18850:9:16","nodeType":"YulIdentifier","src":"18850:9:16"}],"functionName":{"name":"sub","nativeSrc":"18837:3:16","nodeType":"YulIdentifier","src":"18837:3:16"},"nativeSrc":"18837:23:16","nodeType":"YulFunctionCall","src":"18837:23:16"},{"kind":"number","nativeSrc":"18862:2:16","nodeType":"YulLiteral","src":"18862:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18833:3:16","nodeType":"YulIdentifier","src":"18833:3:16"},"nativeSrc":"18833:32:16","nodeType":"YulFunctionCall","src":"18833:32:16"},"nativeSrc":"18830:119:16","nodeType":"YulIf","src":"18830:119:16"},{"nativeSrc":"18959:128:16","nodeType":"YulBlock","src":"18959:128:16","statements":[{"nativeSrc":"18974:15:16","nodeType":"YulVariableDeclaration","src":"18974:15:16","value":{"kind":"number","nativeSrc":"18988:1:16","nodeType":"YulLiteral","src":"18988:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18978:6:16","nodeType":"YulTypedName","src":"18978:6:16","type":""}]},{"nativeSrc":"19003:74:16","nodeType":"YulAssignment","src":"19003:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19049:9:16","nodeType":"YulIdentifier","src":"19049:9:16"},{"name":"offset","nativeSrc":"19060:6:16","nodeType":"YulIdentifier","src":"19060:6:16"}],"functionName":{"name":"add","nativeSrc":"19045:3:16","nodeType":"YulIdentifier","src":"19045:3:16"},"nativeSrc":"19045:22:16","nodeType":"YulFunctionCall","src":"19045:22:16"},{"name":"dataEnd","nativeSrc":"19069:7:16","nodeType":"YulIdentifier","src":"19069:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"19013:31:16","nodeType":"YulIdentifier","src":"19013:31:16"},"nativeSrc":"19013:64:16","nodeType":"YulFunctionCall","src":"19013:64:16"},"variableNames":[{"name":"value0","nativeSrc":"19003:6:16","nodeType":"YulIdentifier","src":"19003:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"18743:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18790:9:16","nodeType":"YulTypedName","src":"18790:9:16","type":""},{"name":"dataEnd","nativeSrc":"18801:7:16","nodeType":"YulTypedName","src":"18801:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18813:6:16","nodeType":"YulTypedName","src":"18813:6:16","type":""}],"src":"18743:351:16"},{"body":{"nativeSrc":"19145:149:16","nodeType":"YulBlock","src":"19145:149:16","statements":[{"nativeSrc":"19155:25:16","nodeType":"YulAssignment","src":"19155:25:16","value":{"arguments":[{"name":"x","nativeSrc":"19178:1:16","nodeType":"YulIdentifier","src":"19178:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19160:17:16","nodeType":"YulIdentifier","src":"19160:17:16"},"nativeSrc":"19160:20:16","nodeType":"YulFunctionCall","src":"19160:20:16"},"variableNames":[{"name":"x","nativeSrc":"19155:1:16","nodeType":"YulIdentifier","src":"19155:1:16"}]},{"nativeSrc":"19189:25:16","nodeType":"YulAssignment","src":"19189:25:16","value":{"arguments":[{"name":"y","nativeSrc":"19212:1:16","nodeType":"YulIdentifier","src":"19212:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19194:17:16","nodeType":"YulIdentifier","src":"19194:17:16"},"nativeSrc":"19194:20:16","nodeType":"YulFunctionCall","src":"19194:20:16"},"variableNames":[{"name":"y","nativeSrc":"19189:1:16","nodeType":"YulIdentifier","src":"19189:1:16"}]},{"nativeSrc":"19223:17:16","nodeType":"YulAssignment","src":"19223:17:16","value":{"arguments":[{"name":"x","nativeSrc":"19235:1:16","nodeType":"YulIdentifier","src":"19235:1:16"},{"name":"y","nativeSrc":"19238:1:16","nodeType":"YulIdentifier","src":"19238:1:16"}],"functionName":{"name":"sub","nativeSrc":"19231:3:16","nodeType":"YulIdentifier","src":"19231:3:16"},"nativeSrc":"19231:9:16","nodeType":"YulFunctionCall","src":"19231:9:16"},"variableNames":[{"name":"diff","nativeSrc":"19223:4:16","nodeType":"YulIdentifier","src":"19223:4:16"}]},{"body":{"nativeSrc":"19265:22:16","nodeType":"YulBlock","src":"19265:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19267:16:16","nodeType":"YulIdentifier","src":"19267:16:16"},"nativeSrc":"19267:18:16","nodeType":"YulFunctionCall","src":"19267:18:16"},"nativeSrc":"19267:18:16","nodeType":"YulExpressionStatement","src":"19267:18:16"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"19256:4:16","nodeType":"YulIdentifier","src":"19256:4:16"},{"name":"x","nativeSrc":"19262:1:16","nodeType":"YulIdentifier","src":"19262:1:16"}],"functionName":{"name":"gt","nativeSrc":"19253:2:16","nodeType":"YulIdentifier","src":"19253:2:16"},"nativeSrc":"19253:11:16","nodeType":"YulFunctionCall","src":"19253:11:16"},"nativeSrc":"19250:37:16","nodeType":"YulIf","src":"19250:37:16"}]},"name":"checked_sub_t_uint256","nativeSrc":"19100:194:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19131:1:16","nodeType":"YulTypedName","src":"19131:1:16","type":""},{"name":"y","nativeSrc":"19134:1:16","nodeType":"YulTypedName","src":"19134:1:16","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"19140:4:16","nodeType":"YulTypedName","src":"19140:4:16","type":""}],"src":"19100:194:16"},{"body":{"nativeSrc":"19413:34:16","nodeType":"YulBlock","src":"19413:34:16","statements":[{"nativeSrc":"19423:18:16","nodeType":"YulAssignment","src":"19423:18:16","value":{"name":"pos","nativeSrc":"19438:3:16","nodeType":"YulIdentifier","src":"19438:3:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"19423:11:16","nodeType":"YulIdentifier","src":"19423:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19300:147:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19385:3:16","nodeType":"YulTypedName","src":"19385:3:16","type":""},{"name":"length","nativeSrc":"19390:6:16","nodeType":"YulTypedName","src":"19390:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"19401:11:16","nodeType":"YulTypedName","src":"19401:11:16","type":""}],"src":"19300:147:16"},{"body":{"nativeSrc":"19593:209:16","nodeType":"YulBlock","src":"19593:209:16","statements":[{"nativeSrc":"19603:95:16","nodeType":"YulAssignment","src":"19603:95:16","value":{"arguments":[{"name":"pos","nativeSrc":"19686:3:16","nodeType":"YulIdentifier","src":"19686:3:16"},{"name":"length","nativeSrc":"19691:6:16","nodeType":"YulIdentifier","src":"19691:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19610:75:16","nodeType":"YulIdentifier","src":"19610:75:16"},"nativeSrc":"19610:88:16","nodeType":"YulFunctionCall","src":"19610:88:16"},"variableNames":[{"name":"pos","nativeSrc":"19603:3:16","nodeType":"YulIdentifier","src":"19603:3:16"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"19745:5:16","nodeType":"YulIdentifier","src":"19745:5:16"},{"name":"pos","nativeSrc":"19752:3:16","nodeType":"YulIdentifier","src":"19752:3:16"},{"name":"length","nativeSrc":"19757:6:16","nodeType":"YulIdentifier","src":"19757:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"19708:36:16","nodeType":"YulIdentifier","src":"19708:36:16"},"nativeSrc":"19708:56:16","nodeType":"YulFunctionCall","src":"19708:56:16"},"nativeSrc":"19708:56:16","nodeType":"YulExpressionStatement","src":"19708:56:16"},{"nativeSrc":"19773:23:16","nodeType":"YulAssignment","src":"19773:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"19784:3:16","nodeType":"YulIdentifier","src":"19784:3:16"},{"name":"length","nativeSrc":"19789:6:16","nodeType":"YulIdentifier","src":"19789:6:16"}],"functionName":{"name":"add","nativeSrc":"19780:3:16","nodeType":"YulIdentifier","src":"19780:3:16"},"nativeSrc":"19780:16:16","nodeType":"YulFunctionCall","src":"19780:16:16"},"variableNames":[{"name":"end","nativeSrc":"19773:3:16","nodeType":"YulIdentifier","src":"19773:3:16"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19475:327:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19566:5:16","nodeType":"YulTypedName","src":"19566:5:16","type":""},{"name":"length","nativeSrc":"19573:6:16","nodeType":"YulTypedName","src":"19573:6:16","type":""},{"name":"pos","nativeSrc":"19581:3:16","nodeType":"YulTypedName","src":"19581:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19589:3:16","nodeType":"YulTypedName","src":"19589:3:16","type":""}],"src":"19475:327:16"},{"body":{"nativeSrc":"19952:147:16","nodeType":"YulBlock","src":"19952:147:16","statements":[{"nativeSrc":"19963:110:16","nodeType":"YulAssignment","src":"19963:110:16","value":{"arguments":[{"name":"value0","nativeSrc":"20052:6:16","nodeType":"YulIdentifier","src":"20052:6:16"},{"name":"value1","nativeSrc":"20060:6:16","nodeType":"YulIdentifier","src":"20060:6:16"},{"name":"pos","nativeSrc":"20069:3:16","nodeType":"YulIdentifier","src":"20069:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19970:81:16","nodeType":"YulIdentifier","src":"19970:81:16"},"nativeSrc":"19970:103:16","nodeType":"YulFunctionCall","src":"19970:103:16"},"variableNames":[{"name":"pos","nativeSrc":"19963:3:16","nodeType":"YulIdentifier","src":"19963:3:16"}]},{"nativeSrc":"20083:10:16","nodeType":"YulAssignment","src":"20083:10:16","value":{"name":"pos","nativeSrc":"20090:3:16","nodeType":"YulIdentifier","src":"20090:3:16"},"variableNames":[{"name":"end","nativeSrc":"20083:3:16","nodeType":"YulIdentifier","src":"20083:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"19808:291:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19923:3:16","nodeType":"YulTypedName","src":"19923:3:16","type":""},{"name":"value1","nativeSrc":"19929:6:16","nodeType":"YulTypedName","src":"19929:6:16","type":""},{"name":"value0","nativeSrc":"19937:6:16","nodeType":"YulTypedName","src":"19937:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19948:3:16","nodeType":"YulTypedName","src":"19948:3:16","type":""}],"src":"19808:291:16"},{"body":{"nativeSrc":"20176:88:16","nodeType":"YulBlock","src":"20176:88:16","statements":[{"nativeSrc":"20186:22:16","nodeType":"YulAssignment","src":"20186:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"20201:6:16","nodeType":"YulIdentifier","src":"20201:6:16"}],"functionName":{"name":"mload","nativeSrc":"20195:5:16","nodeType":"YulIdentifier","src":"20195:5:16"},"nativeSrc":"20195:13:16","nodeType":"YulFunctionCall","src":"20195:13:16"},"variableNames":[{"name":"value","nativeSrc":"20186:5:16","nodeType":"YulIdentifier","src":"20186:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20252:5:16","nodeType":"YulIdentifier","src":"20252:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"20217:34:16","nodeType":"YulIdentifier","src":"20217:34:16"},"nativeSrc":"20217:41:16","nodeType":"YulFunctionCall","src":"20217:41:16"},"nativeSrc":"20217:41:16","nodeType":"YulExpressionStatement","src":"20217:41:16"}]},"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"20105:159:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20154:6:16","nodeType":"YulTypedName","src":"20154:6:16","type":""},{"name":"end","nativeSrc":"20162:3:16","nodeType":"YulTypedName","src":"20162:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20170:5:16","nodeType":"YulTypedName","src":"20170:5:16","type":""}],"src":"20105:159:16"},{"body":{"nativeSrc":"20389:560:16","nodeType":"YulBlock","src":"20389:560:16","statements":[{"body":{"nativeSrc":"20435:83:16","nodeType":"YulBlock","src":"20435:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20437:77:16","nodeType":"YulIdentifier","src":"20437:77:16"},"nativeSrc":"20437:79:16","nodeType":"YulFunctionCall","src":"20437:79:16"},"nativeSrc":"20437:79:16","nodeType":"YulExpressionStatement","src":"20437:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20410:7:16","nodeType":"YulIdentifier","src":"20410:7:16"},{"name":"headStart","nativeSrc":"20419:9:16","nodeType":"YulIdentifier","src":"20419:9:16"}],"functionName":{"name":"sub","nativeSrc":"20406:3:16","nodeType":"YulIdentifier","src":"20406:3:16"},"nativeSrc":"20406:23:16","nodeType":"YulFunctionCall","src":"20406:23:16"},{"kind":"number","nativeSrc":"20431:2:16","nodeType":"YulLiteral","src":"20431:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"20402:3:16","nodeType":"YulIdentifier","src":"20402:3:16"},"nativeSrc":"20402:32:16","nodeType":"YulFunctionCall","src":"20402:32:16"},"nativeSrc":"20399:119:16","nodeType":"YulIf","src":"20399:119:16"},{"nativeSrc":"20528:128:16","nodeType":"YulBlock","src":"20528:128:16","statements":[{"nativeSrc":"20543:15:16","nodeType":"YulVariableDeclaration","src":"20543:15:16","value":{"kind":"number","nativeSrc":"20557:1:16","nodeType":"YulLiteral","src":"20557:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20547:6:16","nodeType":"YulTypedName","src":"20547:6:16","type":""}]},{"nativeSrc":"20572:74:16","nodeType":"YulAssignment","src":"20572:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20618:9:16","nodeType":"YulIdentifier","src":"20618:9:16"},{"name":"offset","nativeSrc":"20629:6:16","nodeType":"YulIdentifier","src":"20629:6:16"}],"functionName":{"name":"add","nativeSrc":"20614:3:16","nodeType":"YulIdentifier","src":"20614:3:16"},"nativeSrc":"20614:22:16","nodeType":"YulFunctionCall","src":"20614:22:16"},{"name":"dataEnd","nativeSrc":"20638:7:16","nodeType":"YulIdentifier","src":"20638:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20582:31:16","nodeType":"YulIdentifier","src":"20582:31:16"},"nativeSrc":"20582:64:16","nodeType":"YulFunctionCall","src":"20582:64:16"},"variableNames":[{"name":"value0","nativeSrc":"20572:6:16","nodeType":"YulIdentifier","src":"20572:6:16"}]}]},{"nativeSrc":"20666:137:16","nodeType":"YulBlock","src":"20666:137:16","statements":[{"nativeSrc":"20681:16:16","nodeType":"YulVariableDeclaration","src":"20681:16:16","value":{"kind":"number","nativeSrc":"20695:2:16","nodeType":"YulLiteral","src":"20695:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"20685:6:16","nodeType":"YulTypedName","src":"20685:6:16","type":""}]},{"nativeSrc":"20711:82:16","nodeType":"YulAssignment","src":"20711:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20765:9:16","nodeType":"YulIdentifier","src":"20765:9:16"},{"name":"offset","nativeSrc":"20776:6:16","nodeType":"YulIdentifier","src":"20776:6:16"}],"functionName":{"name":"add","nativeSrc":"20761:3:16","nodeType":"YulIdentifier","src":"20761:3:16"},"nativeSrc":"20761:22:16","nodeType":"YulFunctionCall","src":"20761:22:16"},{"name":"dataEnd","nativeSrc":"20785:7:16","nodeType":"YulIdentifier","src":"20785:7:16"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"20721:39:16","nodeType":"YulIdentifier","src":"20721:39:16"},"nativeSrc":"20721:72:16","nodeType":"YulFunctionCall","src":"20721:72:16"},"variableNames":[{"name":"value1","nativeSrc":"20711:6:16","nodeType":"YulIdentifier","src":"20711:6:16"}]}]},{"nativeSrc":"20813:129:16","nodeType":"YulBlock","src":"20813:129:16","statements":[{"nativeSrc":"20828:16:16","nodeType":"YulVariableDeclaration","src":"20828:16:16","value":{"kind":"number","nativeSrc":"20842:2:16","nodeType":"YulLiteral","src":"20842:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"20832:6:16","nodeType":"YulTypedName","src":"20832:6:16","type":""}]},{"nativeSrc":"20858:74:16","nodeType":"YulAssignment","src":"20858:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20904:9:16","nodeType":"YulIdentifier","src":"20904:9:16"},{"name":"offset","nativeSrc":"20915:6:16","nodeType":"YulIdentifier","src":"20915:6:16"}],"functionName":{"name":"add","nativeSrc":"20900:3:16","nodeType":"YulIdentifier","src":"20900:3:16"},"nativeSrc":"20900:22:16","nodeType":"YulFunctionCall","src":"20900:22:16"},{"name":"dataEnd","nativeSrc":"20924:7:16","nodeType":"YulIdentifier","src":"20924:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20868:31:16","nodeType":"YulIdentifier","src":"20868:31:16"},"nativeSrc":"20868:64:16","nodeType":"YulFunctionCall","src":"20868:64:16"},"variableNames":[{"name":"value2","nativeSrc":"20858:6:16","nodeType":"YulIdentifier","src":"20858:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory","nativeSrc":"20270:679:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20343:9:16","nodeType":"YulTypedName","src":"20343:9:16","type":""},{"name":"dataEnd","nativeSrc":"20354:7:16","nodeType":"YulTypedName","src":"20354:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20366:6:16","nodeType":"YulTypedName","src":"20366:6:16","type":""},{"name":"value1","nativeSrc":"20374:6:16","nodeType":"YulTypedName","src":"20374:6:16","type":""},{"name":"value2","nativeSrc":"20382:6:16","nodeType":"YulTypedName","src":"20382:6:16","type":""}],"src":"20270:679:16"},{"body":{"nativeSrc":"20983:152:16","nodeType":"YulBlock","src":"20983:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21000:1:16","nodeType":"YulLiteral","src":"21000:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"21003:77:16","nodeType":"YulLiteral","src":"21003:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20993:6:16","nodeType":"YulIdentifier","src":"20993:6:16"},"nativeSrc":"20993:88:16","nodeType":"YulFunctionCall","src":"20993:88:16"},"nativeSrc":"20993:88:16","nodeType":"YulExpressionStatement","src":"20993:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21097:1:16","nodeType":"YulLiteral","src":"21097:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"21100:4:16","nodeType":"YulLiteral","src":"21100:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"21090:6:16","nodeType":"YulIdentifier","src":"21090:6:16"},"nativeSrc":"21090:15:16","nodeType":"YulFunctionCall","src":"21090:15:16"},"nativeSrc":"21090:15:16","nodeType":"YulExpressionStatement","src":"21090:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21121:1:16","nodeType":"YulLiteral","src":"21121:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"21124:4:16","nodeType":"YulLiteral","src":"21124:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21114:6:16","nodeType":"YulIdentifier","src":"21114:6:16"},"nativeSrc":"21114:15:16","nodeType":"YulFunctionCall","src":"21114:15:16"},"nativeSrc":"21114:15:16","nodeType":"YulExpressionStatement","src":"21114:15:16"}]},"name":"panic_error_0x21","nativeSrc":"20955:180:16","nodeType":"YulFunctionDefinition","src":"20955:180:16"},{"body":{"nativeSrc":"21295:288:16","nodeType":"YulBlock","src":"21295:288:16","statements":[{"nativeSrc":"21305:26:16","nodeType":"YulAssignment","src":"21305:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"21317:9:16","nodeType":"YulIdentifier","src":"21317:9:16"},{"kind":"number","nativeSrc":"21328:2:16","nodeType":"YulLiteral","src":"21328:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21313:3:16","nodeType":"YulIdentifier","src":"21313:3:16"},"nativeSrc":"21313:18:16","nodeType":"YulFunctionCall","src":"21313:18:16"},"variableNames":[{"name":"tail","nativeSrc":"21305:4:16","nodeType":"YulIdentifier","src":"21305:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21385:6:16","nodeType":"YulIdentifier","src":"21385:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"21398:9:16","nodeType":"YulIdentifier","src":"21398:9:16"},{"kind":"number","nativeSrc":"21409:1:16","nodeType":"YulLiteral","src":"21409:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21394:3:16","nodeType":"YulIdentifier","src":"21394:3:16"},"nativeSrc":"21394:17:16","nodeType":"YulFunctionCall","src":"21394:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21341:43:16","nodeType":"YulIdentifier","src":"21341:43:16"},"nativeSrc":"21341:71:16","nodeType":"YulFunctionCall","src":"21341:71:16"},"nativeSrc":"21341:71:16","nodeType":"YulExpressionStatement","src":"21341:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21466:6:16","nodeType":"YulIdentifier","src":"21466:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"21479:9:16","nodeType":"YulIdentifier","src":"21479:9:16"},{"kind":"number","nativeSrc":"21490:2:16","nodeType":"YulLiteral","src":"21490:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21475:3:16","nodeType":"YulIdentifier","src":"21475:3:16"},"nativeSrc":"21475:18:16","nodeType":"YulFunctionCall","src":"21475:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21422:43:16","nodeType":"YulIdentifier","src":"21422:43:16"},"nativeSrc":"21422:72:16","nodeType":"YulFunctionCall","src":"21422:72:16"},"nativeSrc":"21422:72:16","nodeType":"YulExpressionStatement","src":"21422:72:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21548:6:16","nodeType":"YulIdentifier","src":"21548:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"21561:9:16","nodeType":"YulIdentifier","src":"21561:9:16"},{"kind":"number","nativeSrc":"21572:2:16","nodeType":"YulLiteral","src":"21572:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21557:3:16","nodeType":"YulIdentifier","src":"21557:3:16"},"nativeSrc":"21557:18:16","nodeType":"YulFunctionCall","src":"21557:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21504:43:16","nodeType":"YulIdentifier","src":"21504:43:16"},"nativeSrc":"21504:72:16","nodeType":"YulFunctionCall","src":"21504:72:16"},"nativeSrc":"21504:72:16","nodeType":"YulExpressionStatement","src":"21504:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21141:442:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21251:9:16","nodeType":"YulTypedName","src":"21251:9:16","type":""},{"name":"value2","nativeSrc":"21263:6:16","nodeType":"YulTypedName","src":"21263:6:16","type":""},{"name":"value1","nativeSrc":"21271:6:16","nodeType":"YulTypedName","src":"21271:6:16","type":""},{"name":"value0","nativeSrc":"21279:6:16","nodeType":"YulTypedName","src":"21279:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21290:4:16","nodeType":"YulTypedName","src":"21290:4:16","type":""}],"src":"21141:442:16"},{"body":{"nativeSrc":"21654:53:16","nodeType":"YulBlock","src":"21654:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21671:3:16","nodeType":"YulIdentifier","src":"21671:3:16"},{"arguments":[{"name":"value","nativeSrc":"21694:5:16","nodeType":"YulIdentifier","src":"21694:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"21676:17:16","nodeType":"YulIdentifier","src":"21676:17:16"},"nativeSrc":"21676:24:16","nodeType":"YulFunctionCall","src":"21676:24:16"}],"functionName":{"name":"mstore","nativeSrc":"21664:6:16","nodeType":"YulIdentifier","src":"21664:6:16"},"nativeSrc":"21664:37:16","nodeType":"YulFunctionCall","src":"21664:37:16"},"nativeSrc":"21664:37:16","nodeType":"YulExpressionStatement","src":"21664:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21589:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21642:5:16","nodeType":"YulTypedName","src":"21642:5:16","type":""},{"name":"pos","nativeSrc":"21649:3:16","nodeType":"YulTypedName","src":"21649:3:16","type":""}],"src":"21589:118:16"},{"body":{"nativeSrc":"21857:275:16","nodeType":"YulBlock","src":"21857:275:16","statements":[{"nativeSrc":"21867:26:16","nodeType":"YulAssignment","src":"21867:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"21879:9:16","nodeType":"YulIdentifier","src":"21879:9:16"},{"kind":"number","nativeSrc":"21890:2:16","nodeType":"YulLiteral","src":"21890:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21875:3:16","nodeType":"YulIdentifier","src":"21875:3:16"},"nativeSrc":"21875:18:16","nodeType":"YulFunctionCall","src":"21875:18:16"},"variableNames":[{"name":"tail","nativeSrc":"21867:4:16","nodeType":"YulIdentifier","src":"21867:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21947:6:16","nodeType":"YulIdentifier","src":"21947:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"21960:9:16","nodeType":"YulIdentifier","src":"21960:9:16"},{"kind":"number","nativeSrc":"21971:1:16","nodeType":"YulLiteral","src":"21971:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21956:3:16","nodeType":"YulIdentifier","src":"21956:3:16"},"nativeSrc":"21956:17:16","nodeType":"YulFunctionCall","src":"21956:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21903:43:16","nodeType":"YulIdentifier","src":"21903:43:16"},"nativeSrc":"21903:71:16","nodeType":"YulFunctionCall","src":"21903:71:16"},"nativeSrc":"21903:71:16","nodeType":"YulExpressionStatement","src":"21903:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21995:9:16","nodeType":"YulIdentifier","src":"21995:9:16"},{"kind":"number","nativeSrc":"22006:2:16","nodeType":"YulLiteral","src":"22006:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21991:3:16","nodeType":"YulIdentifier","src":"21991:3:16"},"nativeSrc":"21991:18:16","nodeType":"YulFunctionCall","src":"21991:18:16"},{"arguments":[{"name":"tail","nativeSrc":"22015:4:16","nodeType":"YulIdentifier","src":"22015:4:16"},{"name":"headStart","nativeSrc":"22021:9:16","nodeType":"YulIdentifier","src":"22021:9:16"}],"functionName":{"name":"sub","nativeSrc":"22011:3:16","nodeType":"YulIdentifier","src":"22011:3:16"},"nativeSrc":"22011:20:16","nodeType":"YulFunctionCall","src":"22011:20:16"}],"functionName":{"name":"mstore","nativeSrc":"21984:6:16","nodeType":"YulIdentifier","src":"21984:6:16"},"nativeSrc":"21984:48:16","nodeType":"YulFunctionCall","src":"21984:48:16"},"nativeSrc":"21984:48:16","nodeType":"YulExpressionStatement","src":"21984:48:16"},{"nativeSrc":"22041:84:16","nodeType":"YulAssignment","src":"22041:84:16","value":{"arguments":[{"name":"value1","nativeSrc":"22111:6:16","nodeType":"YulIdentifier","src":"22111:6:16"},{"name":"tail","nativeSrc":"22120:4:16","nodeType":"YulIdentifier","src":"22120:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"22049:61:16","nodeType":"YulIdentifier","src":"22049:61:16"},"nativeSrc":"22049:76:16","nodeType":"YulFunctionCall","src":"22049:76:16"},"variableNames":[{"name":"tail","nativeSrc":"22041:4:16","nodeType":"YulIdentifier","src":"22041:4:16"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"21713:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21821:9:16","nodeType":"YulTypedName","src":"21821:9:16","type":""},{"name":"value1","nativeSrc":"21833:6:16","nodeType":"YulTypedName","src":"21833:6:16","type":""},{"name":"value0","nativeSrc":"21841:6:16","nodeType":"YulTypedName","src":"21841:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21852:4:16","nodeType":"YulTypedName","src":"21852:4:16","type":""}],"src":"21713:419:16"},{"body":{"nativeSrc":"22246:278:16","nodeType":"YulBlock","src":"22246:278:16","statements":[{"nativeSrc":"22256:52:16","nodeType":"YulVariableDeclaration","src":"22256:52:16","value":{"arguments":[{"name":"value","nativeSrc":"22302:5:16","nodeType":"YulIdentifier","src":"22302:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"22270:31:16","nodeType":"YulIdentifier","src":"22270:31:16"},"nativeSrc":"22270:38:16","nodeType":"YulFunctionCall","src":"22270:38:16"},"variables":[{"name":"length","nativeSrc":"22260:6:16","nodeType":"YulTypedName","src":"22260:6:16","type":""}]},{"nativeSrc":"22317:95:16","nodeType":"YulAssignment","src":"22317:95:16","value":{"arguments":[{"name":"pos","nativeSrc":"22400:3:16","nodeType":"YulIdentifier","src":"22400:3:16"},{"name":"length","nativeSrc":"22405:6:16","nodeType":"YulIdentifier","src":"22405:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22324:75:16","nodeType":"YulIdentifier","src":"22324:75:16"},"nativeSrc":"22324:88:16","nodeType":"YulFunctionCall","src":"22324:88:16"},"variableNames":[{"name":"pos","nativeSrc":"22317:3:16","nodeType":"YulIdentifier","src":"22317:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22460:5:16","nodeType":"YulIdentifier","src":"22460:5:16"},{"kind":"number","nativeSrc":"22467:4:16","nodeType":"YulLiteral","src":"22467:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22456:3:16","nodeType":"YulIdentifier","src":"22456:3:16"},"nativeSrc":"22456:16:16","nodeType":"YulFunctionCall","src":"22456:16:16"},{"name":"pos","nativeSrc":"22474:3:16","nodeType":"YulIdentifier","src":"22474:3:16"},{"name":"length","nativeSrc":"22479:6:16","nodeType":"YulIdentifier","src":"22479:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"22421:34:16","nodeType":"YulIdentifier","src":"22421:34:16"},"nativeSrc":"22421:65:16","nodeType":"YulFunctionCall","src":"22421:65:16"},"nativeSrc":"22421:65:16","nodeType":"YulExpressionStatement","src":"22421:65:16"},{"nativeSrc":"22495:23:16","nodeType":"YulAssignment","src":"22495:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"22506:3:16","nodeType":"YulIdentifier","src":"22506:3:16"},{"name":"length","nativeSrc":"22511:6:16","nodeType":"YulIdentifier","src":"22511:6:16"}],"functionName":{"name":"add","nativeSrc":"22502:3:16","nodeType":"YulIdentifier","src":"22502:3:16"},"nativeSrc":"22502:16:16","nodeType":"YulFunctionCall","src":"22502:16:16"},"variableNames":[{"name":"end","nativeSrc":"22495:3:16","nodeType":"YulIdentifier","src":"22495:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22138:386:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22227:5:16","nodeType":"YulTypedName","src":"22227:5:16","type":""},{"name":"pos","nativeSrc":"22234:3:16","nodeType":"YulTypedName","src":"22234:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22242:3:16","nodeType":"YulTypedName","src":"22242:3:16","type":""}],"src":"22138:386:16"},{"body":{"nativeSrc":"22664:137:16","nodeType":"YulBlock","src":"22664:137:16","statements":[{"nativeSrc":"22675:100:16","nodeType":"YulAssignment","src":"22675:100:16","value":{"arguments":[{"name":"value0","nativeSrc":"22762:6:16","nodeType":"YulIdentifier","src":"22762:6:16"},{"name":"pos","nativeSrc":"22771:3:16","nodeType":"YulIdentifier","src":"22771:3:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22682:79:16","nodeType":"YulIdentifier","src":"22682:79:16"},"nativeSrc":"22682:93:16","nodeType":"YulFunctionCall","src":"22682:93:16"},"variableNames":[{"name":"pos","nativeSrc":"22675:3:16","nodeType":"YulIdentifier","src":"22675:3:16"}]},{"nativeSrc":"22785:10:16","nodeType":"YulAssignment","src":"22785:10:16","value":{"name":"pos","nativeSrc":"22792:3:16","nodeType":"YulIdentifier","src":"22792:3:16"},"variableNames":[{"name":"end","nativeSrc":"22785:3:16","nodeType":"YulIdentifier","src":"22785:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"22530:271:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22643:3:16","nodeType":"YulTypedName","src":"22643:3:16","type":""},{"name":"value0","nativeSrc":"22649:6:16","nodeType":"YulTypedName","src":"22649:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22660:3:16","nodeType":"YulTypedName","src":"22660:3:16","type":""}],"src":"22530:271:16"},{"body":{"nativeSrc":"22870:80:16","nodeType":"YulBlock","src":"22870:80:16","statements":[{"nativeSrc":"22880:22:16","nodeType":"YulAssignment","src":"22880:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"22895:6:16","nodeType":"YulIdentifier","src":"22895:6:16"}],"functionName":{"name":"mload","nativeSrc":"22889:5:16","nodeType":"YulIdentifier","src":"22889:5:16"},"nativeSrc":"22889:13:16","nodeType":"YulFunctionCall","src":"22889:13:16"},"variableNames":[{"name":"value","nativeSrc":"22880:5:16","nodeType":"YulIdentifier","src":"22880:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22938:5:16","nodeType":"YulIdentifier","src":"22938:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"22911:26:16","nodeType":"YulIdentifier","src":"22911:26:16"},"nativeSrc":"22911:33:16","nodeType":"YulFunctionCall","src":"22911:33:16"},"nativeSrc":"22911:33:16","nodeType":"YulExpressionStatement","src":"22911:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"22807:143:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22848:6:16","nodeType":"YulTypedName","src":"22848:6:16","type":""},{"name":"end","nativeSrc":"22856:3:16","nodeType":"YulTypedName","src":"22856:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22864:5:16","nodeType":"YulTypedName","src":"22864:5:16","type":""}],"src":"22807:143:16"},{"body":{"nativeSrc":"23033:274:16","nodeType":"YulBlock","src":"23033:274:16","statements":[{"body":{"nativeSrc":"23079:83:16","nodeType":"YulBlock","src":"23079:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23081:77:16","nodeType":"YulIdentifier","src":"23081:77:16"},"nativeSrc":"23081:79:16","nodeType":"YulFunctionCall","src":"23081:79:16"},"nativeSrc":"23081:79:16","nodeType":"YulExpressionStatement","src":"23081:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23054:7:16","nodeType":"YulIdentifier","src":"23054:7:16"},{"name":"headStart","nativeSrc":"23063:9:16","nodeType":"YulIdentifier","src":"23063:9:16"}],"functionName":{"name":"sub","nativeSrc":"23050:3:16","nodeType":"YulIdentifier","src":"23050:3:16"},"nativeSrc":"23050:23:16","nodeType":"YulFunctionCall","src":"23050:23:16"},{"kind":"number","nativeSrc":"23075:2:16","nodeType":"YulLiteral","src":"23075:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"23046:3:16","nodeType":"YulIdentifier","src":"23046:3:16"},"nativeSrc":"23046:32:16","nodeType":"YulFunctionCall","src":"23046:32:16"},"nativeSrc":"23043:119:16","nodeType":"YulIf","src":"23043:119:16"},{"nativeSrc":"23172:128:16","nodeType":"YulBlock","src":"23172:128:16","statements":[{"nativeSrc":"23187:15:16","nodeType":"YulVariableDeclaration","src":"23187:15:16","value":{"kind":"number","nativeSrc":"23201:1:16","nodeType":"YulLiteral","src":"23201:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23191:6:16","nodeType":"YulTypedName","src":"23191:6:16","type":""}]},{"nativeSrc":"23216:74:16","nodeType":"YulAssignment","src":"23216:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23262:9:16","nodeType":"YulIdentifier","src":"23262:9:16"},{"name":"offset","nativeSrc":"23273:6:16","nodeType":"YulIdentifier","src":"23273:6:16"}],"functionName":{"name":"add","nativeSrc":"23258:3:16","nodeType":"YulIdentifier","src":"23258:3:16"},"nativeSrc":"23258:22:16","nodeType":"YulFunctionCall","src":"23258:22:16"},{"name":"dataEnd","nativeSrc":"23282:7:16","nodeType":"YulIdentifier","src":"23282:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"23226:31:16","nodeType":"YulIdentifier","src":"23226:31:16"},"nativeSrc":"23226:64:16","nodeType":"YulFunctionCall","src":"23226:64:16"},"variableNames":[{"name":"value0","nativeSrc":"23216:6:16","nodeType":"YulIdentifier","src":"23216:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"22956:351:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23003:9:16","nodeType":"YulTypedName","src":"23003:9:16","type":""},{"name":"dataEnd","nativeSrc":"23014:7:16","nodeType":"YulTypedName","src":"23014:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23026:6:16","nodeType":"YulTypedName","src":"23026:6:16","type":""}],"src":"22956:351:16"},{"body":{"nativeSrc":"23356:43:16","nodeType":"YulBlock","src":"23356:43:16","statements":[{"nativeSrc":"23366:27:16","nodeType":"YulAssignment","src":"23366:27:16","value":{"arguments":[{"name":"value","nativeSrc":"23381:5:16","nodeType":"YulIdentifier","src":"23381:5:16"},{"kind":"number","nativeSrc":"23388:4:16","nodeType":"YulLiteral","src":"23388:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"23377:3:16","nodeType":"YulIdentifier","src":"23377:3:16"},"nativeSrc":"23377:16:16","nodeType":"YulFunctionCall","src":"23377:16:16"},"variableNames":[{"name":"cleaned","nativeSrc":"23366:7:16","nodeType":"YulIdentifier","src":"23366:7:16"}]}]},"name":"cleanup_t_uint8","nativeSrc":"23313:86:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23338:5:16","nodeType":"YulTypedName","src":"23338:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"23348:7:16","nodeType":"YulTypedName","src":"23348:7:16","type":""}],"src":"23313:86:16"},{"body":{"nativeSrc":"23466:51:16","nodeType":"YulBlock","src":"23466:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"23483:3:16","nodeType":"YulIdentifier","src":"23483:3:16"},{"arguments":[{"name":"value","nativeSrc":"23504:5:16","nodeType":"YulIdentifier","src":"23504:5:16"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"23488:15:16","nodeType":"YulIdentifier","src":"23488:15:16"},"nativeSrc":"23488:22:16","nodeType":"YulFunctionCall","src":"23488:22:16"}],"functionName":{"name":"mstore","nativeSrc":"23476:6:16","nodeType":"YulIdentifier","src":"23476:6:16"},"nativeSrc":"23476:35:16","nodeType":"YulFunctionCall","src":"23476:35:16"},"nativeSrc":"23476:35:16","nodeType":"YulExpressionStatement","src":"23476:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"23405:112:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23454:5:16","nodeType":"YulTypedName","src":"23454:5:16","type":""},{"name":"pos","nativeSrc":"23461:3:16","nodeType":"YulTypedName","src":"23461:3:16","type":""}],"src":"23405:112:16"},{"body":{"nativeSrc":"23701:367:16","nodeType":"YulBlock","src":"23701:367:16","statements":[{"nativeSrc":"23711:27:16","nodeType":"YulAssignment","src":"23711:27:16","value":{"arguments":[{"name":"headStart","nativeSrc":"23723:9:16","nodeType":"YulIdentifier","src":"23723:9:16"},{"kind":"number","nativeSrc":"23734:3:16","nodeType":"YulLiteral","src":"23734:3:16","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"23719:3:16","nodeType":"YulIdentifier","src":"23719:3:16"},"nativeSrc":"23719:19:16","nodeType":"YulFunctionCall","src":"23719:19:16"},"variableNames":[{"name":"tail","nativeSrc":"23711:4:16","nodeType":"YulIdentifier","src":"23711:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23792:6:16","nodeType":"YulIdentifier","src":"23792:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23805:9:16","nodeType":"YulIdentifier","src":"23805:9:16"},{"kind":"number","nativeSrc":"23816:1:16","nodeType":"YulLiteral","src":"23816:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23801:3:16","nodeType":"YulIdentifier","src":"23801:3:16"},"nativeSrc":"23801:17:16","nodeType":"YulFunctionCall","src":"23801:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23748:43:16","nodeType":"YulIdentifier","src":"23748:43:16"},"nativeSrc":"23748:71:16","nodeType":"YulFunctionCall","src":"23748:71:16"},"nativeSrc":"23748:71:16","nodeType":"YulExpressionStatement","src":"23748:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23869:6:16","nodeType":"YulIdentifier","src":"23869:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23882:9:16","nodeType":"YulIdentifier","src":"23882:9:16"},{"kind":"number","nativeSrc":"23893:2:16","nodeType":"YulLiteral","src":"23893:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23878:3:16","nodeType":"YulIdentifier","src":"23878:3:16"},"nativeSrc":"23878:18:16","nodeType":"YulFunctionCall","src":"23878:18:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"23829:39:16","nodeType":"YulIdentifier","src":"23829:39:16"},"nativeSrc":"23829:68:16","nodeType":"YulFunctionCall","src":"23829:68:16"},"nativeSrc":"23829:68:16","nodeType":"YulExpressionStatement","src":"23829:68:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23951:6:16","nodeType":"YulIdentifier","src":"23951:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"23964:9:16","nodeType":"YulIdentifier","src":"23964:9:16"},{"kind":"number","nativeSrc":"23975:2:16","nodeType":"YulLiteral","src":"23975:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23960:3:16","nodeType":"YulIdentifier","src":"23960:3:16"},"nativeSrc":"23960:18:16","nodeType":"YulFunctionCall","src":"23960:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23907:43:16","nodeType":"YulIdentifier","src":"23907:43:16"},"nativeSrc":"23907:72:16","nodeType":"YulFunctionCall","src":"23907:72:16"},"nativeSrc":"23907:72:16","nodeType":"YulExpressionStatement","src":"23907:72:16"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"24033:6:16","nodeType":"YulIdentifier","src":"24033:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"24046:9:16","nodeType":"YulIdentifier","src":"24046:9:16"},{"kind":"number","nativeSrc":"24057:2:16","nodeType":"YulLiteral","src":"24057:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24042:3:16","nodeType":"YulIdentifier","src":"24042:3:16"},"nativeSrc":"24042:18:16","nodeType":"YulFunctionCall","src":"24042:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23989:43:16","nodeType":"YulIdentifier","src":"23989:43:16"},"nativeSrc":"23989:72:16","nodeType":"YulFunctionCall","src":"23989:72:16"},"nativeSrc":"23989:72:16","nodeType":"YulExpressionStatement","src":"23989:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"23523:545:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23649:9:16","nodeType":"YulTypedName","src":"23649:9:16","type":""},{"name":"value3","nativeSrc":"23661:6:16","nodeType":"YulTypedName","src":"23661:6:16","type":""},{"name":"value2","nativeSrc":"23669:6:16","nodeType":"YulTypedName","src":"23669:6:16","type":""},{"name":"value1","nativeSrc":"23677:6:16","nodeType":"YulTypedName","src":"23677:6:16","type":""},{"name":"value0","nativeSrc":"23685:6:16","nodeType":"YulTypedName","src":"23685:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23696:4:16","nodeType":"YulTypedName","src":"23696:4:16","type":""}],"src":"23523:545:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$181(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$181(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$181(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$181(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$181(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$181(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$181(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid target address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b146101765780639e5d4c49146101a1578063affed0e0146101d1578063b553fe1e146101fc578063d0679d341461022957610091565b806301ffc9a714610096578063150b7a02146100d35780631626ba7e146101105780638447305a1461014d57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610e4f565b610245565b6040516100ca9190610e97565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610fab565b6102ad565b6040516101079190611042565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906111d4565b6102c2565b6040516101449190611042565b60405180910390f35b34801561015957600080fd5b50610174600480360381019061016f919061126e565b6102fe565b005b34801561018257600080fd5b5061018b61053f565b60405161019891906112d0565b60405180910390f35b6101bb60048036038101906101b691906112eb565b610650565b6040516101c891906113de565b60405180910390f35b3480156101dd57600080fd5b506101e66107e8565b6040516101f3919061140f565b60405180910390f35b34801561020857600080fd5b506102116107f1565b6040516102209392919061142a565b60405180910390f35b610243600480360381019061023e919061149f565b610847565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600063150b7a0260e01b905095945050505050565b6000806102d76102d061053f565b85856109d0565b905080156102ef57631626ba7e60e01b9150506102f8565b600060e01b9150505b92915050565b61030661053f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a9061153c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d9906115a8565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161041d91906112d0565b602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e91906115dd565b9050828110156104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90611656565b60405180910390fd5b6000808154809291906104b5906116a5565b91905055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016104f59291906116ed565b6020604051808303816000875af1158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190611742565b5050505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663b553fe1e6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190611784565b9250925092504683146105cd576000935050505061064d565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610606919061140f565b602060405180830381865afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064791906117d7565b93505050505b90565b606061065a61053f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be9061153c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d906115a8565b60405180910390fd5b600080815480929190610748906116a5565b919050555060008573ffffffffffffffffffffffffffffffffffffffff16856107d05a6107759190611804565b908686604051610786929190611868565b600060405180830381858888f193505050503d80600081146107c4576040519150601f19603f3d011682016040523d82523d6000602084013e6107c9565b606091505b508093508192505050806107df57815160208301fd5b50949350505050565b60008054905090565b6000806000803073ffffffffffffffffffffffffffffffffffffffff163b9050610828306060836108229190611804565b83610a7f565b80602001905181019061083b9190611896565b93509350935050909192565b61084f61053f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b39061153c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610922906115a8565b60405180910390fd5b8047101561096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096590611656565b60405180910390fd5b600080815480929190610980906116a5565b91905055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109cb573d6000803e3d6000fd5b505050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b03610a6a576000806109fd8585610b64565b509150915060006003811115610a1657610a156118e9565b5b816003811115610a2957610a286118e9565b5b148015610a6157508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92505050610a78565b610a75848484610bc0565b90505b9392505050565b60606000610a8c85610ce4565b905060008103610aae5760405180602001604052806000815250915050610b5d565b80841115610ace5760405180602001604052806000815250915050610b5d565b83831015610b17578084846040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600401610b0e93929190611918565b60405180910390fd5b60008484039050600085830390506000828210610b345782610b36565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b60008060006041845103610ba95760008060006020870151925060408701519150606087015160001a9050610b9b88828585610cef565b955095509550505050610bb9565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610bef92919061195e565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c4191906119bf565b600060405180830381855afa9150503d8060008114610c7c576040519150601f19603f3d011682016040523d82523d6000602084013e610c81565b606091505b5091509150818015610c9557506020815110155b8015610cd95750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610cd791906119eb565b145b925050509392505050565b6000813b9050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610d2f576000600385925092509250610dd9565b600060018888888860405160008152602001604052604051610d549493929190611a34565b6020604051602081039080840390855afa158015610d76573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dca57600060016000801b93509350935050610dd9565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e2c81610df7565b8114610e3757600080fd5b50565b600081359050610e4981610e23565b92915050565b600060208284031215610e6557610e64610ded565b5b6000610e7384828501610e3a565b91505092915050565b60008115159050919050565b610e9181610e7c565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610edd82610eb2565b9050919050565b610eed81610ed2565b8114610ef857600080fd5b50565b600081359050610f0a81610ee4565b92915050565b6000819050919050565b610f2381610f10565b8114610f2e57600080fd5b50565b600081359050610f4081610f1a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f6b57610f6a610f46565b5b8235905067ffffffffffffffff811115610f8857610f87610f4b565b5b602083019150836001820283011115610fa457610fa3610f50565b5b9250929050565b600080600080600060808688031215610fc757610fc6610ded565b5b6000610fd588828901610efb565b9550506020610fe688828901610efb565b9450506040610ff788828901610f31565b935050606086013567ffffffffffffffff81111561101857611017610df2565b5b61102488828901610f55565b92509250509295509295909350565b61103c81610df7565b82525050565b60006020820190506110576000830184611033565b92915050565b6000819050919050565b6110708161105d565b811461107b57600080fd5b50565b60008135905061108d81611067565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110e182611098565b810181811067ffffffffffffffff82111715611100576110ff6110a9565b5b80604052505050565b6000611113610de3565b905061111f82826110d8565b919050565b600067ffffffffffffffff82111561113f5761113e6110a9565b5b61114882611098565b9050602081019050919050565b82818337600083830152505050565b600061117761117284611124565b611109565b90508281526020810184848401111561119357611192611093565b5b61119e848285611155565b509392505050565b600082601f8301126111bb576111ba610f46565b5b81356111cb848260208601611164565b91505092915050565b600080604083850312156111eb576111ea610ded565b5b60006111f98582860161107e565b925050602083013567ffffffffffffffff81111561121a57611219610df2565b5b611226858286016111a6565b9150509250929050565b600061123b82610ed2565b9050919050565b61124b81611230565b811461125657600080fd5b50565b60008135905061126881611242565b92915050565b60008060006060848603121561128757611286610ded565b5b600061129586828701610efb565b93505060206112a686828701610f31565b92505060406112b786828701611259565b9150509250925092565b6112ca81610ed2565b82525050565b60006020820190506112e560008301846112c1565b92915050565b6000806000806060858703121561130557611304610ded565b5b600061131387828801610efb565b945050602061132487828801610f31565b935050604085013567ffffffffffffffff81111561134557611344610df2565b5b61135187828801610f55565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b8381101561139957808201518184015260208101905061137e565b60008484015250505050565b60006113b08261135f565b6113ba818561136a565b93506113ca81856020860161137b565b6113d381611098565b840191505092915050565b600060208201905081810360008301526113f881846113a5565b905092915050565b61140981610f10565b82525050565b60006020820190506114246000830184611400565b92915050565b600060608201905061143f6000830186611400565b61144c60208301856112c1565b6114596040830184611400565b949350505050565b600061146c82610eb2565b9050919050565b61147c81611461565b811461148757600080fd5b50565b60008135905061149981611473565b92915050565b600080604083850312156114b6576114b5610ded565b5b60006114c48582860161148a565b92505060206114d585828601610f31565b9150509250929050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000611526600f836114df565b9150611531826114f0565b602082019050919050565b6000602082019050818103600083015261155581611519565b9050919050565b7f496e76616c696420746172676574206164647265737300000000000000000000600082015250565b60006115926016836114df565b915061159d8261155c565b602082019050919050565b600060208201905081810360008301526115c181611585565b9050919050565b6000815190506115d781610f1a565b92915050565b6000602082840312156115f3576115f2610ded565b5b6000611601848285016115c8565b91505092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006116406012836114df565b915061164b8261160a565b602082019050919050565b6000602082019050818103600083015261166f81611633565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116b082610f10565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116e2576116e1611676565b5b600182019050919050565b600060408201905061170260008301856112c1565b61170f6020830184611400565b9392505050565b61171f81610e7c565b811461172a57600080fd5b50565b60008151905061173c81611716565b92915050565b60006020828403121561175857611757610ded565b5b60006117668482850161172d565b91505092915050565b60008151905061177e81610ee4565b92915050565b60008060006060848603121561179d5761179c610ded565b5b60006117ab868287016115c8565b93505060206117bc8682870161176f565b92505060406117cd868287016115c8565b9150509250925092565b6000602082840312156117ed576117ec610ded565b5b60006117fb8482850161176f565b91505092915050565b600061180f82610f10565b915061181a83610f10565b925082820390508181111561183257611831611676565b5b92915050565b600081905092915050565b600061184f8385611838565b935061185c838584611155565b82840190509392505050565b6000611875828486611843565b91508190509392505050565b60008151905061189081611473565b92915050565b6000806000606084860312156118af576118ae610ded565b5b60006118bd868287016115c8565b93505060206118ce86828701611881565b92505060406118df868287016115c8565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060608201905061192d6000830186611400565b61193a6020830185611400565b6119476040830184611400565b949350505050565b6119588161105d565b82525050565b6000604082019050611973600083018561194f565b818103602083015261198581846113a5565b90509392505050565b60006119998261135f565b6119a38185611838565b93506119b381856020860161137b565b80840191505092915050565b60006119cb828461198e565b915081905092915050565b6000815190506119e581611067565b92915050565b600060208284031215611a0157611a00610ded565b5b6000611a0f848285016119d6565b91505092915050565b600060ff82169050919050565b611a2e81611a18565b82525050565b6000608082019050611a49600083018761194f565b611a566020830186611a25565b611a63604083018561194f565b611a70606083018461194f565b9594505050505056fea2646970667358221220f60cb4d04ba102db405366856bfa31c69ed239f6f898cd4d49fd7f095213658364736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB553FE1E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x229 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x8447305A EQ PUSH2 0x14D JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D7 PUSH2 0x2D0 PUSH2 0x53F JUMP JUMPDEST DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 SHL SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x306 PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4B5 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP3 SWAP2 SWAP1 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB553FE1E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x5CD JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x64D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x65A PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x748 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x7D0 GAS PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST SWAP1 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP3 SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x7DF JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x828 ADDRESS PUSH1 0x60 DUP4 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x84F PUSH2 0x53F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 PUSH2 0x9FD DUP6 DUP6 PUSH2 0xB64 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA16 JUMPI PUSH2 0xA15 PUSH2 0x18E9 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0x18E9 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xA61 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP3 POP POP POP PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA8C DUP6 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB5D JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB5D JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB17 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0xB34 JUMPI DUP3 PUSH2 0xB36 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xB9B DUP9 DUP3 DUP6 DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBEF SWAP3 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC95 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCD9 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD54 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCA JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xDD9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE49 DUP2 PUSH2 0xE23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP5 DUP3 DUP6 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP3 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEED DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0A DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF23 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF40 DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF6B JUMPI PUSH2 0xF6A PUSH2 0xF46 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD5 DUP9 DUP3 DUP10 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xFE6 DUP9 DUP3 DUP10 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xFF7 DUP9 DUP3 DUP10 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1024 DUP9 DUP3 DUP10 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x103C DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1033 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1070 DUP2 PUSH2 0x105D JUMP JUMPDEST DUP2 EQ PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108D DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10E1 DUP3 PUSH2 0x1098 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1113 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x111F DUP3 DUP3 PUSH2 0x10D8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST PUSH2 0x1148 DUP3 PUSH2 0x1098 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 PUSH2 0x1172 DUP5 PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1093 JUMP JUMPDEST JUMPDEST PUSH2 0x119E DUP5 DUP3 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BB JUMPI PUSH2 0x11BA PUSH2 0xF46 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP6 DUP3 DUP7 ADD PUSH2 0x107E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1226 DUP6 DUP3 DUP7 ADD PUSH2 0x11A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123B DUP3 PUSH2 0xED2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124B DUP2 PUSH2 0x1230 JUMP JUMPDEST DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1268 DUP2 PUSH2 0x1242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP7 DUP3 DUP8 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A6 DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1259 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x12CA DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP8 DUP3 DUP9 ADD PUSH2 0xEFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1324 DUP8 DUP3 DUP9 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1351 DUP8 DUP3 DUP9 ADD PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1399 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x136A JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1098 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F8 DUP2 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x144C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146C DUP3 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x1461 JUMP JUMPDEST DUP2 EQ PUSH2 0x1487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1499 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP6 DUP3 DUP7 ADD PUSH2 0x148A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D5 DUP6 DUP3 DUP7 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 PUSH1 0xF DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1531 DUP3 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1555 DUP2 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1592 PUSH1 0x16 DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x159D DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C1 DUP2 PUSH2 0x1585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D7 DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1601 DUP5 DUP3 DUP6 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1640 PUSH1 0x12 DUP4 PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP PUSH2 0x164B DUP3 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166F DUP2 PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP3 PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x1676 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1702 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x170F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP2 EQ PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x173C DUP2 PUSH2 0x1716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1766 DUP5 DUP3 DUP6 ADD PUSH2 0x172D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x177E DUP2 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17BC DUP7 DUP3 DUP8 ADD PUSH2 0x176F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17CD DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17EC PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FB DUP5 DUP3 DUP6 ADD PUSH2 0x176F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP3 PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP PUSH2 0x181A DUP4 PUSH2 0xF10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x1676 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP4 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x185C DUP4 DUP6 DUP5 PUSH2 0x1155 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1875 DUP3 DUP5 DUP7 PUSH2 0x1843 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1890 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18AF JUMPI PUSH2 0x18AE PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18CE DUP7 DUP3 DUP8 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x15C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x192D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x193A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1947 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x105D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1973 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x194F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1985 DUP2 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x19A3 DUP2 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x19B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A01 JUMPI PUSH2 0x1A00 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0F DUP5 DUP3 DUP6 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1A18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x1A56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A25 JUMP JUMPDEST PUSH2 0x1A63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x1A70 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x194F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xC 0xB4 0xD0 0x4B LOG1 MUL 0xDB BLOCKHASH MSTORE8 PUSH7 0x856BFA31C69ED2 CODECOPY 0xF6 0xF8 SWAP9 0xCD 0x4D BLOBHASH REVERT PUSH32 0x95213658364736F6C634300081B003300000000000000000000000000000000 ","sourceMap":"654:3285:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3034:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3175:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3402:399;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1938:437;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2757:269;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1061:540;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3809:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2383:366;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1609:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3034:133;3102:4;3126:20;:33;3147:11;3126:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3119:40;;3034:133;;;:::o;3175:219::-;3319:6;3345:41;;;3338:48;;3175:219;;;;;;;:::o;3402:399::-;3514:17;3544:12;3559:112;3610:7;:5;:7::i;:::-;3632:4;3651:9;3559:36;:112::i;:::-;3544:127;;3688:7;3684:81;;;3719:34;;;3712:41;;;;;3684:81;3791:1;3784:9;;3777:16;;;3402:399;;;;;:::o;1938:437::-;2084:7;:5;:7::i;:::-;2070:21;;:10;:21;;;2062:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2144:1;2130:16;;:2;:16;;;2122:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2186:15;2204:13;:23;;;2236:4;2204:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2186:56;;2272:6;2261:7;:17;;2253:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2314:6;;:8;;;;;;;;;:::i;:::-;;;;;;2333:13;:22;;;2356:2;2360:6;2333:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2051:324;1938:437;;;:::o;2757:269::-;2795:7;2816:15;2833:21;2856:15;2875:4;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2815:88;;;;;;2929:13;2918:7;:24;2914:47;;2959:1;2944:17;;;;;;;2914:47;2987:13;2979:30;;;3010:7;2979:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2972:46;;;;;2757:269;;:::o;1061:540::-;1190:19;1244:7;:5;:7::i;:::-;1230:21;;:10;:21;;;1222:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1304:1;1290:16;;:2;:16;;;1282:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1346:6;;:8;;;;;;;;;:::i;:::-;;;;;;1367:12;1410:2;:7;;1425:5;1449:4;1437:9;:16;;;;:::i;:::-;1410:50;1455:4;;1410:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:70;;;;;;;;1478:7;1473:121;;1560:6;1554:13;1549:2;1541:6;1537:15;1530:38;1473:121;1211:390;1061:540;;;;;;:::o;3809:90::-;3858:7;3885:6;;3878:13;;3809:90;:::o;2383:366::-;2452:15;2469:21;2492:15;2525:14;2550:4;2542:25;;;2525:42;;2627:53;2651:4;2667;2658:6;:13;;;;:::i;:::-;2673:6;2627:15;:53::i;:::-;2598:143;;;;;;;;;;;;:::i;:::-;2578:163;;;;;;;2383:366;;;:::o;1609:321::-;1709:7;:5;:7::i;:::-;1695:21;;:10;:21;;;1687:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1769:1;1755:16;;:2;:16;;;1747:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1842:6;1817:21;:31;;1809:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1884:6;;:8;;;;;;;;;:::i;:::-;;;;;;1903:2;:11;;:19;1915:6;1903:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:321;;:::o;1041:429:11:-;1147:4;1189:1;1167:6;:18;;;:23;1163:301;;1207:17;1226:22;1254:33;1271:4;1277:9;1254:16;:33::i;:::-;1206:81;;;;;1315:26;1308:33;;;;;;;;:::i;:::-;;:3;:33;;;;;;;;:::i;:::-;;;:56;;;;;1358:6;1345:19;;:9;:19;;;1308:56;1301:63;;;;;;1163:301;1402:51;1429:6;1437:4;1443:9;1402:26;:51::i;:::-;1395:58;;1041:429;;;;;;:::o;1794:946:14:-;1878:18;1904:13;1920:15;1929:5;1920:8;:15::i;:::-;1904:31;;1954:1;1945:5;:10;1941:32;;1964:9;;;;;;;;;;;;1957:16;;;;;1941:32;1993:5;1984:6;:14;1980:36;;;2007:9;;;;;;;;;;;;2000:16;;;;;1980:36;2033:6;2026:4;:13;2022:65;;;2067:5;2074:6;2082:4;2048:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;2022:65;2113:15;2138:6;2131:4;:13;2113:31;;2152:15;2178:6;2170:5;:14;2152:32;;2193:12;2218:7;2208;:17;:37;;2238:7;2208:37;;;2228:7;2208:37;2193:52;;2414:4;2408:11;2399:20;;2534:4;2530:9;2523:4;2516;2510;2506:15;2502:26;2498:42;2491:5;2487:54;2481:4;2474:68;2599:4;2592:5;2585:19;2717:4;2709:6;2702:4;2695:5;2691:16;2684:5;2672:50;2263:467;;;1898:842;1794:946;;;;;;:::o;2129:778:10:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;1877:458:11:-;2020:4;2037:12;2051:19;2074:6;:17;;2148:4;2154:9;2105:60;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:139;;;;2193:7;:42;;;;;2233:2;2216:6;:13;:19;;2193:42;:134;;;;;2292:34;;;2284:43;;;2262:6;2251:29;;;;;;;;;;;;:::i;:::-;:76;2193:134;2185:143;;;;1877:458;;;;;:::o;1262:119:14:-;1318:12;1369:5;1357:18;1349:26;;1262:119;;;:::o;5203:1551:10:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:117;2736:1;2733;2726:12;2763:552;2820:8;2830:6;2880:3;2873:4;2865:6;2861:17;2857:27;2847:122;;2888:79;;:::i;:::-;2847:122;3001:6;2988:20;2978:30;;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3167:4;3159:6;3155:17;3143:29;;3221:3;3213:4;3205:6;3201:17;3191:8;3187:32;3184:41;3181:128;;;3228:79;;:::i;:::-;3181:128;2763:552;;;;;:::o;3321:963::-;3418:6;3426;3434;3442;3450;3499:3;3487:9;3478:7;3474:23;3470:33;3467:120;;;3506:79;;:::i;:::-;3467:120;3626:1;3651:53;3696:7;3687:6;3676:9;3672:22;3651:53;:::i;:::-;3641:63;;3597:117;3753:2;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3724:118;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;4037:2;4026:9;4022:18;4009:32;4068:18;4060:6;4057:30;4054:117;;;4090:79;;:::i;:::-;4054:117;4203:64;4259:7;4250:6;4239:9;4235:22;4203:64;:::i;:::-;4185:82;;;;3980:297;3321:963;;;;;;;;:::o;4290:115::-;4375:23;4392:5;4375:23;:::i;:::-;4370:3;4363:36;4290:115;;:::o;4411:218::-;4502:4;4540:2;4529:9;4525:18;4517:26;;4553:69;4619:1;4608:9;4604:17;4595:6;4553:69;:::i;:::-;4411:218;;;;:::o;4635:77::-;4672:7;4701:5;4690:16;;4635:77;;;:::o;4718:122::-;4791:24;4809:5;4791:24;:::i;:::-;4784:5;4781:35;4771:63;;4830:1;4827;4820:12;4771:63;4718:122;:::o;4846:139::-;4892:5;4930:6;4917:20;4908:29;;4946:33;4973:5;4946:33;:::i;:::-;4846:139;;;;:::o;4991:117::-;5100:1;5097;5090:12;5114:102;5155:6;5206:2;5202:7;5197:2;5190:5;5186:14;5182:28;5172:38;;5114:102;;;:::o;5222:180::-;5270:77;5267:1;5260:88;5367:4;5364:1;5357:15;5391:4;5388:1;5381:15;5408:281;5491:27;5513:4;5491:27;:::i;:::-;5483:6;5479:40;5621:6;5609:10;5606:22;5585:18;5573:10;5570:34;5567:62;5564:88;;;5632:18;;:::i;:::-;5564:88;5672:10;5668:2;5661:22;5451:238;5408:281;;:::o;5695:129::-;5729:6;5756:20;;:::i;:::-;5746:30;;5785:33;5813:4;5805:6;5785:33;:::i;:::-;5695:129;;;:::o;5830:307::-;5891:4;5981:18;5973:6;5970:30;5967:56;;;6003:18;;:::i;:::-;5967:56;6041:29;6063:6;6041:29;:::i;:::-;6033:37;;6125:4;6119;6115:15;6107:23;;5830:307;;;:::o;6143:148::-;6241:6;6236:3;6231;6218:30;6282:1;6273:6;6268:3;6264:16;6257:27;6143:148;;;:::o;6297:423::-;6374:5;6399:65;6415:48;6456:6;6415:48;:::i;:::-;6399:65;:::i;:::-;6390:74;;6487:6;6480:5;6473:21;6525:4;6518:5;6514:16;6563:3;6554:6;6549:3;6545:16;6542:25;6539:112;;;6570:79;;:::i;:::-;6539:112;6660:54;6707:6;6702:3;6697;6660:54;:::i;:::-;6380:340;6297:423;;;;;:::o;6739:338::-;6794:5;6843:3;6836:4;6828:6;6824:17;6820:27;6810:122;;6851:79;;:::i;:::-;6810:122;6968:6;6955:20;6993:78;7067:3;7059:6;7052:4;7044:6;7040:17;6993:78;:::i;:::-;6984:87;;6800:277;6739:338;;;;:::o;7083:652::-;7160:6;7168;7217:2;7205:9;7196:7;7192:23;7188:32;7185:119;;;7223:79;;:::i;:::-;7185:119;7343:1;7368:53;7413:7;7404:6;7393:9;7389:22;7368:53;:::i;:::-;7358:63;;7314:117;7498:2;7487:9;7483:18;7470:32;7529:18;7521:6;7518:30;7515:117;;;7551:79;;:::i;:::-;7515:117;7656:62;7710:7;7701:6;7690:9;7686:22;7656:62;:::i;:::-;7646:72;;7441:287;7083:652;;;;;:::o;7741:110::-;7792:7;7821:24;7839:5;7821:24;:::i;:::-;7810:35;;7741:110;;;:::o;7857:150::-;7944:38;7976:5;7944:38;:::i;:::-;7937:5;7934:49;7924:77;;7997:1;7994;7987:12;7924:77;7857:150;:::o;8013:167::-;8073:5;8111:6;8098:20;8089:29;;8127:47;8168:5;8127:47;:::i;:::-;8013:167;;;;:::o;8186:647::-;8277:6;8285;8293;8342:2;8330:9;8321:7;8317:23;8313:32;8310:119;;;8348:79;;:::i;:::-;8310:119;8468:1;8493:53;8538:7;8529:6;8518:9;8514:22;8493:53;:::i;:::-;8483:63;;8439:117;8595:2;8621:53;8666:7;8657:6;8646:9;8642:22;8621:53;:::i;:::-;8611:63;;8566:118;8723:2;8749:67;8808:7;8799:6;8788:9;8784:22;8749:67;:::i;:::-;8739:77;;8694:132;8186:647;;;;;:::o;8839:118::-;8926:24;8944:5;8926:24;:::i;:::-;8921:3;8914:37;8839:118;;:::o;8963:222::-;9056:4;9094:2;9083:9;9079:18;9071:26;;9107:71;9175:1;9164:9;9160:17;9151:6;9107:71;:::i;:::-;8963:222;;;;:::o;9191:817::-;9279:6;9287;9295;9303;9352:2;9340:9;9331:7;9327:23;9323:32;9320:119;;;9358:79;;:::i;:::-;9320:119;9478:1;9503:53;9548:7;9539:6;9528:9;9524:22;9503:53;:::i;:::-;9493:63;;9449:117;9605:2;9631:53;9676:7;9667:6;9656:9;9652:22;9631:53;:::i;:::-;9621:63;;9576:118;9761:2;9750:9;9746:18;9733:32;9792:18;9784:6;9781:30;9778:117;;;9814:79;;:::i;:::-;9778:117;9927:64;9983:7;9974:6;9963:9;9959:22;9927:64;:::i;:::-;9909:82;;;;9704:297;9191:817;;;;;;;:::o;10014:98::-;10065:6;10099:5;10093:12;10083:22;;10014:98;;;:::o;10118:168::-;10201:11;10235:6;10230:3;10223:19;10275:4;10270:3;10266:14;10251:29;;10118:168;;;;:::o;10292:248::-;10374:1;10384:113;10398:6;10395:1;10392:13;10384:113;;;10483:1;10478:3;10474:11;10468:18;10464:1;10459:3;10455:11;10448:39;10420:2;10417:1;10413:10;10408:15;;10384:113;;;10531:1;10522:6;10517:3;10513:16;10506:27;10354:186;10292:248;;;:::o;10546:373::-;10632:3;10660:38;10692:5;10660:38;:::i;:::-;10714:70;10777:6;10772:3;10714:70;:::i;:::-;10707:77;;10793:65;10851:6;10846:3;10839:4;10832:5;10828:16;10793:65;:::i;:::-;10883:29;10905:6;10883:29;:::i;:::-;10878:3;10874:39;10867:46;;10636:283;10546:373;;;;:::o;10925:309::-;11036:4;11074:2;11063:9;11059:18;11051:26;;11123:9;11117:4;11113:20;11109:1;11098:9;11094:17;11087:47;11151:76;11222:4;11213:6;11151:76;:::i;:::-;11143:84;;10925:309;;;;:::o;11240:118::-;11327:24;11345:5;11327:24;:::i;:::-;11322:3;11315:37;11240:118;;:::o;11364:222::-;11457:4;11495:2;11484:9;11480:18;11472:26;;11508:71;11576:1;11565:9;11561:17;11552:6;11508:71;:::i;:::-;11364:222;;;;:::o;11592:442::-;11741:4;11779:2;11768:9;11764:18;11756:26;;11792:71;11860:1;11849:9;11845:17;11836:6;11792:71;:::i;:::-;11873:72;11941:2;11930:9;11926:18;11917:6;11873:72;:::i;:::-;11955;12023:2;12012:9;12008:18;11999:6;11955:72;:::i;:::-;11592:442;;;;;;:::o;12040:104::-;12085:7;12114:24;12132:5;12114:24;:::i;:::-;12103:35;;12040:104;;;:::o;12150:138::-;12231:32;12257:5;12231:32;:::i;:::-;12224:5;12221:43;12211:71;;12278:1;12275;12268:12;12211:71;12150:138;:::o;12294:155::-;12348:5;12386:6;12373:20;12364:29;;12402:41;12437:5;12402:41;:::i;:::-;12294:155;;;;:::o;12455:490::-;12531:6;12539;12588:2;12576:9;12567:7;12563:23;12559:32;12556:119;;;12594:79;;:::i;:::-;12556:119;12714:1;12739:61;12792:7;12783:6;12772:9;12768:22;12739:61;:::i;:::-;12729:71;;12685:125;12849:2;12875:53;12920:7;12911:6;12900:9;12896:22;12875:53;:::i;:::-;12865:63;;12820:118;12455:490;;;;;:::o;12951:169::-;13035:11;13069:6;13064:3;13057:19;13109:4;13104:3;13100:14;13085:29;;12951:169;;;;:::o;13126:165::-;13266:17;13262:1;13254:6;13250:14;13243:41;13126:165;:::o;13297:366::-;13439:3;13460:67;13524:2;13519:3;13460:67;:::i;:::-;13453:74;;13536:93;13625:3;13536:93;:::i;:::-;13654:2;13649:3;13645:12;13638:19;;13297:366;;;:::o;13669:419::-;13835:4;13873:2;13862:9;13858:18;13850:26;;13922:9;13916:4;13912:20;13908:1;13897:9;13893:17;13886:47;13950:131;14076:4;13950:131;:::i;:::-;13942:139;;13669:419;;;:::o;14094:172::-;14234:24;14230:1;14222:6;14218:14;14211:48;14094:172;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:143::-;15126:5;15157:6;15151:13;15142:22;;15173:33;15200:5;15173:33;:::i;:::-;15069:143;;;;:::o;15218:351::-;15288:6;15337:2;15325:9;15316:7;15312:23;15308:32;15305:119;;;15343:79;;:::i;:::-;15305:119;15463:1;15488:64;15544:7;15535:6;15524:9;15520:22;15488:64;:::i;:::-;15478:74;;15434:128;15218:351;;;;:::o;15575:168::-;15715:20;15711:1;15703:6;15699:14;15692:44;15575:168;:::o;15749:366::-;15891:3;15912:67;15976:2;15971:3;15912:67;:::i;:::-;15905:74;;15988:93;16077:3;15988:93;:::i;:::-;16106:2;16101:3;16097:12;16090:19;;15749:366;;;:::o;16121:419::-;16287:4;16325:2;16314:9;16310:18;16302:26;;16374:9;16368:4;16364:20;16360:1;16349:9;16345:17;16338:47;16402:131;16528:4;16402:131;:::i;:::-;16394:139;;16121:419;;;:::o;16546:180::-;16594:77;16591:1;16584:88;16691:4;16688:1;16681:15;16715:4;16712:1;16705:15;16732:233;16771:3;16794:24;16812:5;16794:24;:::i;:::-;16785:33;;16840:66;16833:5;16830:77;16827:103;;16910:18;;:::i;:::-;16827:103;16957:1;16950:5;16946:13;16939:20;;16732:233;;;:::o;16971:332::-;17092:4;17130:2;17119:9;17115:18;17107:26;;17143:71;17211:1;17200:9;17196:17;17187:6;17143:71;:::i;:::-;17224:72;17292:2;17281:9;17277:18;17268:6;17224:72;:::i;:::-;16971:332;;;;;:::o;17309:116::-;17379:21;17394:5;17379:21;:::i;:::-;17372:5;17369:32;17359:60;;17415:1;17412;17405:12;17359:60;17309:116;:::o;17431:137::-;17485:5;17516:6;17510:13;17501:22;;17532:30;17556:5;17532:30;:::i;:::-;17431:137;;;;:::o;17574:345::-;17641:6;17690:2;17678:9;17669:7;17665:23;17661:32;17658:119;;;17696:79;;:::i;:::-;17658:119;17816:1;17841:61;17894:7;17885:6;17874:9;17870:22;17841:61;:::i;:::-;17831:71;;17787:125;17574:345;;;;:::o;17925:143::-;17982:5;18013:6;18007:13;17998:22;;18029:33;18056:5;18029:33;:::i;:::-;17925:143;;;;:::o;18074:663::-;18162:6;18170;18178;18227:2;18215:9;18206:7;18202:23;18198:32;18195:119;;;18233:79;;:::i;:::-;18195:119;18353:1;18378:64;18434:7;18425:6;18414:9;18410:22;18378:64;:::i;:::-;18368:74;;18324:128;18491:2;18517:64;18573:7;18564:6;18553:9;18549:22;18517:64;:::i;:::-;18507:74;;18462:129;18630:2;18656:64;18712:7;18703:6;18692:9;18688:22;18656:64;:::i;:::-;18646:74;;18601:129;18074:663;;;;;:::o;18743:351::-;18813:6;18862:2;18850:9;18841:7;18837:23;18833:32;18830:119;;;18868:79;;:::i;:::-;18830:119;18988:1;19013:64;19069:7;19060:6;19049:9;19045:22;19013:64;:::i;:::-;19003:74;;18959:128;18743:351;;;;:::o;19100:194::-;19140:4;19160:20;19178:1;19160:20;:::i;:::-;19155:25;;19194:20;19212:1;19194:20;:::i;:::-;19189:25;;19238:1;19235;19231:9;19223:17;;19262:1;19256:4;19253:11;19250:37;;;19267:18;;:::i;:::-;19250:37;19100:194;;;;:::o;19300:147::-;19401:11;19438:3;19423:18;;19300:147;;;;:::o;19475:327::-;19589:3;19610:88;19691:6;19686:3;19610:88;:::i;:::-;19603:95;;19708:56;19757:6;19752:3;19745:5;19708:56;:::i;:::-;19789:6;19784:3;19780:16;19773:23;;19475:327;;;;;:::o;19808:291::-;19948:3;19970:103;20069:3;20060:6;20052;19970:103;:::i;:::-;19963:110;;20090:3;20083:10;;19808:291;;;;;:::o;20105:159::-;20170:5;20201:6;20195:13;20186:22;;20217:41;20252:5;20217:41;:::i;:::-;20105:159;;;;:::o;20270:679::-;20366:6;20374;20382;20431:2;20419:9;20410:7;20406:23;20402:32;20399:119;;;20437:79;;:::i;:::-;20399:119;20557:1;20582:64;20638:7;20629:6;20618:9;20614:22;20582:64;:::i;:::-;20572:74;;20528:128;20695:2;20721:72;20785:7;20776:6;20765:9;20761:22;20721:72;:::i;:::-;20711:82;;20666:137;20842:2;20868:64;20924:7;20915:6;20904:9;20900:22;20868:64;:::i;:::-;20858:74;;20813:129;20270:679;;;;;:::o;20955:180::-;21003:77;21000:1;20993:88;21100:4;21097:1;21090:15;21124:4;21121:1;21114:15;21141:442;21290:4;21328:2;21317:9;21313:18;21305:26;;21341:71;21409:1;21398:9;21394:17;21385:6;21341:71;:::i;:::-;21422:72;21490:2;21479:9;21475:18;21466:6;21422:72;:::i;:::-;21504;21572:2;21561:9;21557:18;21548:6;21504:72;:::i;:::-;21141:442;;;;;;:::o;21589:118::-;21676:24;21694:5;21676:24;:::i;:::-;21671:3;21664:37;21589:118;;:::o;21713:419::-;21852:4;21890:2;21879:9;21875:18;21867:26;;21903:71;21971:1;21960:9;21956:17;21947:6;21903:71;:::i;:::-;22021:9;22015:4;22011:20;22006:2;21995:9;21991:18;21984:48;22049:76;22120:4;22111:6;22049:76;:::i;:::-;22041:84;;21713:419;;;;;:::o;22138:386::-;22242:3;22270:38;22302:5;22270:38;:::i;:::-;22324:88;22405:6;22400:3;22324:88;:::i;:::-;22317:95;;22421:65;22479:6;22474:3;22467:4;22460:5;22456:16;22421:65;:::i;:::-;22511:6;22506:3;22502:16;22495:23;;22246:278;22138:386;;;;:::o;22530:271::-;22660:3;22682:93;22771:3;22762:6;22682:93;:::i;:::-;22675:100;;22792:3;22785:10;;22530:271;;;;:::o;22807:143::-;22864:5;22895:6;22889:13;22880:22;;22911:33;22938:5;22911:33;:::i;:::-;22807:143;;;;:::o;22956:351::-;23026:6;23075:2;23063:9;23054:7;23050:23;23046:32;23043:119;;;23081:79;;:::i;:::-;23043:119;23201:1;23226:64;23282:7;23273:6;23262:9;23258:22;23226:64;:::i;:::-;23216:74;;23172:128;22956:351;;;;:::o;23313:86::-;23348:7;23388:4;23381:5;23377:16;23366:27;;23313:86;;;:::o;23405:112::-;23488:22;23504:5;23488:22;:::i;:::-;23483:3;23476:35;23405:112;;:::o;23523:545::-;23696:4;23734:3;23723:9;23719:19;23711:27;;23748:71;23816:1;23805:9;23801:17;23792:6;23748:71;:::i;:::-;23829:68;23893:2;23882:9;23878:18;23869:6;23829:68;:::i;:::-;23907:72;23975:2;23964:9;23960:18;23951:6;23907:72;:::i;:::-;23989;24057:2;24046:9;24042:18;24033:6;23989:72;:::i;:::-;23523:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1366200","executionCost":"50150","totalCost":"1416350"},"external":{"executeCall(address,uint256,bytes)":"infinite","isValidSignature(bytes32,bytes)":"infinite","nftInfo()":"infinite","nonce()":"2481","onERC721Received(address,address,uint256,bytes)":"infinite","owner()":"infinite","send(address,uint256)":"infinite","sendCustom(address,uint256,address)":"infinite","supportsInterface(bytes4)":"2847"}},"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","isValidSignature(bytes32,bytes)":"1626ba7e","nftInfo()":"b553fe1e","nonce()":"affed0e0","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","send(address,uint256)":"d0679d34","sendCustom(address,uint256,address)":"8447305a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"erc20contract\",\"type\":\"address\"}],\"name\":\"sendCustom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/N2D-ERC6551-Account.sol\":\"ERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1271.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-1271 standard signature validation method for\\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\\n */\\ninterface IERC1271 {\\n    /**\\n     * @dev Should return whether the signature provided is valid for the provided data\\n     * @param hash      Hash of the data to be signed\\n     * @param signature Signature byte array associated with _data\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/SignatureChecker.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ECDSA} from \\\"./ECDSA.sol\\\";\\nimport {IERC1271} from \\\"../../interfaces/IERC1271.sol\\\";\\n\\n/**\\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\\n * signatures from externally owned accounts (EOAs) as well as ERC-1271 signatures from smart contract wallets like\\n * Argent and Safe Wallet (previously Gnosis Safe).\\n */\\nlibrary SignatureChecker {\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\\n     * signature is validated against that smart contract using ERC-1271, otherwise it's validated using `ECDSA.recover`.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\\n        if (signer.code.length == 0) {\\n            (address recovered, ECDSA.RecoverError err, ) = ECDSA.tryRecover(hash, signature);\\n            return err == ECDSA.RecoverError.NoError && recovered == signer;\\n        } else {\\n            return isValidERC1271SignatureNow(signer, hash, signature);\\n        }\\n    }\\n\\n    /**\\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\\n     * against the signer smart contract using ERC-1271.\\n     *\\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\\n     */\\n    function isValidERC1271SignatureNow(\\n        address signer,\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        (bool success, bytes memory result) = signer.staticcall(\\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\\n        );\\n        return (success &&\\n            result.length >= 32 &&\\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\\n    }\\n}\\n\",\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/N2D-ERC6551-Account.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.27;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC1271.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\\\";\\r\\nimport \\\"../imports/IERC6551.sol\\\";\\r\\nimport \\\"../imports/ERC6551Bytecode.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\r\\n\\r\\ncontract ERC6551Account is IERC165, IERC1271, IERC6551Account, IERC721Receiver {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    // Add state variables\\r\\n    uint256 private _nonce;\\r\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\r\\n\\r\\n    constructor() {\\r\\n        _supportedInterfaces[type(IERC165).interfaceId] = true;\\r\\n        _supportedInterfaces[type(IERC6551Account).interfaceId] = true;\\r\\n    }\\r\\n\\r\\n    function executeCall(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes calldata data\\r\\n    ) external payable returns (bytes memory result) {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n\\r\\n        _nonce++;\\r\\n\\r\\n        bool success;\\r\\n        (success, result) = to.call{value: value, gas: gasleft() - 2000}(data);\\r\\n\\r\\n        if (!success) {\\r\\n            assembly {\\r\\n                revert(add(result, 32), mload(result))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function send(address payable to, uint256 amount) external payable {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n        require(address(this).balance >= amount, \\\"Insufficient funds\\\");\\r\\n\\r\\n        _nonce++;\\r\\n        to.transfer(amount);\\r\\n    }\\r\\n\\r\\n    function sendCustom(\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        IERC20 erc20contract\\r\\n    ) external {\\r\\n        require(msg.sender == owner(), \\\"Not token owner\\\");\\r\\n        require(to != address(0), \\\"Invalid target address\\\");\\r\\n\\r\\n        uint256 balance = erc20contract.balanceOf(address(this));\\r\\n        require(balance >= amount, \\\"Insufficient funds\\\");\\r\\n\\r\\n        _nonce++;\\r\\n        erc20contract.transfer(to, amount);\\r\\n    }\\r\\n\\r\\n    function nftInfo()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 chainId, address tokenContract, uint256 tokenId)\\r\\n    {\\r\\n        uint256 length = address(this).code.length;\\r\\n        return\\r\\n            abi.decode(\\r\\n                Bytecode.codeAt(address(this), length - 0x60, length),\\r\\n                (uint256, address, uint256)\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\\r\\n            .nftInfo();\\r\\n        if (chainId != block.chainid) return address(0);\\r\\n        return IERC721(tokenContract).ownerOf(tokenId);\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\\r\\n        return _supportedInterfaces[interfaceId];\\r\\n    }\\r\\n\\r\\n    function onERC721Received(\\r\\n        address,\\r\\n        address,\\r\\n        uint256,\\r\\n        bytes calldata\\r\\n    ) external pure override returns (bytes4) {\\r\\n        return IERC721Receiver.onERC721Received.selector;\\r\\n    }\\r\\n\\r\\n    function isValidSignature(\\r\\n        bytes32 hash,\\r\\n        bytes memory signature\\r\\n    ) external view returns (bytes4 magicValue) {\\r\\n        bool isValid = SignatureChecker.isValidSignatureNow(\\r\\n            owner(),\\r\\n            hash,\\r\\n            signature\\r\\n        );\\r\\n\\r\\n        if (isValid) {\\r\\n            return IERC1271.isValidSignature.selector;\\r\\n        }\\r\\n\\r\\n        return bytes4(0);\\r\\n    }\\r\\n\\r\\n    function nonce() external view override returns (uint256) {\\r\\n        return _nonce;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x2faa8a82717968bf822790a0b6d4fdd8f28b195ed90e63c80ae27b63d3b81b19\",\"license\":\"MIT\"},\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x1e9a565b6211f45903a900f95381a61a6b7d4a4440e823031f7575ae4ae9da76\",\"license\":\"MIT\"},\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1502,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_nonce","offset":0,"slot":"0","type":"t_uint256"},{"astId":1506,"contract":"contracts/N2D-ERC6551-Account.sol:ERC6551Account","label":"_supportedInterfaces","offset":0,"slot":"1","type":"t_mapping(t_bytes4,t_bool)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/ERC6551Bytecode.sol":{"Bytecode":{"abi":[{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"InvalidCodeAtRange","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220212e5fbd491963da03ad33385f5b3c67e762d2bbcd1925aa47f1d4787a8ece8c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2E PUSH0 0xBD BLOBHASH NOT PUSH4 0xDA03AD33 CODESIZE PUSH0 JUMPDEST EXTCODECOPY PUSH8 0xE762D2BBCD1925AA SELFBALANCE CALL 0xD4 PUSH25 0x7A8ECE8C64736F6C634300081B003300000000000000000000 ","sourceMap":"59:2683:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220212e5fbd491963da03ad33385f5b3c67e762d2bbcd1925aa47f1d4787a8ece8c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2E PUSH0 0xBD BLOBHASH NOT PUSH4 0xDA03AD33 CODESIZE PUSH0 JUMPDEST EXTCODECOPY PUSH8 0xE762D2BBCD1925AA SELFBALANCE CALL 0xD4 PUSH25 0x7A8ECE8C64736F6C634300081B003300000000000000000000 ","sourceMap":"59:2683:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"codeAt(address,uint256,uint256)":"infinite","codeSize(address)":"infinite","creationCodeFor(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/ERC6551Bytecode.sol\":\"Bytecode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/ERC6551Bytecode.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0x1e9a565b6211f45903a900f95381a61a6b7d4a4440e823031f7575ae4ae9da76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"imports/IERC6551.sol":{"IERC6551Account":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nftInfo","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","nftInfo()":"b553fe1e","nonce()":"affed0e0","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551AccountProxy":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC6551Registry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"salt","type":"uint256"}],"name":"AccountCreated","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"seed","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"account(address,uint256,address,uint256,uint256)":"5e9bc536","createAccount(address,uint256,address,uint256,uint256)":"c1340f69"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/IERC6551.sol\":\"IERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/IERC6551.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IERC6551Registry {\\n\\n    event AccountCreated(\\n        address account,\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    );\\n\\n    function createAccount(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 seed\\n    ) external returns (address);\\n\\n    function account(\\n        address implementation,\\n        uint256 chainId,\\n        address tokenContract,\\n        uint256 tokenId,\\n        uint256 salt\\n    ) external view returns (address);\\n}\\n\\ninterface IERC6551AccountProxy {\\n    function implementation() external view returns (address);\\n}\\n\\ninterface IERC6551Account {\\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\\n\\n    receive() external payable;\\n\\n    function executeCall(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external payable returns (bytes memory);\\n\\n    function nftInfo()\\n        external\\n        view\\n        returns (\\n            uint256 chainId,\\n            address tokenContract,\\n            uint256 tokenId\\n        );\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n}\",\"keccak256\":\"0xc040d62f1e13562726bca9899b94dbfbcacc021b0b0651f0e89910997d278d23\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}