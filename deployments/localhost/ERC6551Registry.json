{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "Create2EmptyBytecode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedDeployment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountAddress",
          "type": "address"
        }
      ],
      "name": "AccountCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "account",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "initData",
          "type": "bytes"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "accountAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe0a76bcce558da564dca44c73ad07dcf06cb8b2b5ea50bc0256c435ffb681af6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "639059",
    "logsBloom": "0x
    "blockHash": "0x96f1ab32f3668ef4744ed9229cdbbcb5f7b102dda58eaf71a4f8ac049145ae9d",
    "transactionHash": "0xe0a76bcce558da564dca44c73ad07dcf06cb8b2b5ea50bc0256c435ffb681af6",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "639059",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "300ff95bc9a6c0724c822d2defa85bce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/N2D-ERC6551-Registry.sol\":\"ERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev There's no code to deploy.\\n     */\\n    error Create2EmptyBytecode();\\n\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n        if (bytecode.length == 0) {\\n            revert Create2EmptyBytecode();\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n            // if no address was created, and returndata is not empty, bubble revert\\n            if and(iszero(addr), not(iszero(returndatasize()))) {\\n                let p := mload(0x40)\\n                returndatacopy(p, 0, returndatasize())\\n                revert(p, returndatasize())\\n            }\\n        }\\n        if (addr == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"contracts/N2D-ERC6551-Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.27;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\r\\n\\r\\ncontract ERC6551Registry {\\r\\n    event AccountCreated(address indexed accountAddress);\\r\\n\\r\\n\\r\\n    error InitializationFailed();\\r\\n\\r\\n    function createAccount(\\r\\n        address implementation,\\r\\n        uint256 chainId,\\r\\n        address tokenContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 salt,\\r\\n        bytes calldata initData\\r\\n    ) external returns (address accountAddress) {\\r\\n        require(implementation != address(0), \\\"Invalid implementation\\\");\\r\\n        require(tokenContract != address(0), \\\"Invalid token contract\\\");\\r\\n\\r\\n        bytes memory code = _creationCode(\\r\\n            implementation,\\r\\n            chainId,\\r\\n            tokenContract,\\r\\n            tokenId,\\r\\n            salt\\r\\n        );\\r\\n\\r\\n        accountAddress = Create2.computeAddress(\\r\\n            bytes32(salt),\\r\\n            keccak256(code)\\r\\n        );\\r\\n\\r\\n        if (accountAddress.code.length > 0) {\\r\\n            return accountAddress;\\r\\n        }\\r\\n\\r\\n        accountAddress = Create2.deploy(0, bytes32(salt), code);\\r\\n\\r\\n        if (initData.length > 0) {\\r\\n            (bool success, ) = accountAddress.call(initData);\\r\\n            if (!success) revert InitializationFailed();\\r\\n        }\\r\\n\\r\\n        emit AccountCreated(\\r\\n            accountAddress\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function account(\\r\\n        address implementation,\\r\\n        uint256 chainId,\\r\\n        address tokenContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 salt\\r\\n    ) external view returns (address) {\\r\\n        bytes32 bytecodeHash = keccak256(\\r\\n            _creationCode(implementation, chainId, tokenContract, tokenId, salt)\\r\\n        );\\r\\n\\r\\n        return Create2.computeAddress(bytes32(salt), bytecodeHash);\\r\\n    }\\r\\n\\r\\n    function _creationCode(\\r\\n        address implementation_,\\r\\n        uint256 chainId_,\\r\\n        address tokenContract_,\\r\\n        uint256 tokenId_,\\r\\n        uint256 salt_\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        return\\r\\n            abi.encodePacked(\\r\\n                hex\\\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\\\",\\r\\n                implementation_,\\r\\n                hex\\\"5af43d82803e903d91602b57fd5bf3\\\",\\r\\n                abi.encode(salt_, chainId_, tokenContract_, tokenId_)\\r\\n            );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb6fcc82cfc8efd12b51eab15a3f313fddf9e28c47dcf1155bca22e56f0e881d5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50610aa58061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006b575b600080fd5b61005560048036038101906100509190610569565b61009b565b60405161006291906105f3565b60405180910390f35b61008560048036038101906100809190610673565b6100cd565b60405161009291906105f3565b60405180910390f35b6000806100ab878787878761030e565b8051906020012090506100c18360001b82610362565b91505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff160361013d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101349061077f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036101ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a3906107eb565b60405180910390fd5b60006101bb898989898961030e565b90506101d18560001b8280519060200120610362565b915060008273ffffffffffffffffffffffffffffffffffffffff163b11156101f95750610303565b61020860008660001b83610377565b915060008484905011156102be5760008273ffffffffffffffffffffffffffffffffffffffff16858560405161023f92919061084a565b6000604051808303816000865af19150503d806000811461027c576040519150601f19603f3d011682016040523d82523d6000602084013e610281565b606091505b50509050806102bc576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff167f805996f252884581e2f74cf3d2b03564d5ec26ccc90850ae12653dc1b72d1fa260405160405180910390a2505b979650505050505050565b606085828686866040516020016103289493929190610872565b604051602081830303815290604052604051602001610348929190610a08565b604051602081830303815290604052905095945050505050565b600061036f83833061048a565b905092915050565b6000834710156103c05747846040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016103b7929190610a46565b60405180910390fd5b60008251036103fb576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f590503d15198115161561041d576040513d6000823e3d81fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610483576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000604051836040820152846020820152828152600b810160ff815373ffffffffffffffffffffffffffffffffffffffff6055822016925050509392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610500826104d5565b9050919050565b610510816104f5565b811461051b57600080fd5b50565b60008135905061052d81610507565b92915050565b6000819050919050565b61054681610533565b811461055157600080fd5b50565b6000813590506105638161053d565b92915050565b600080600080600060a08688031215610585576105846104cb565b5b60006105938882890161051e565b95505060206105a488828901610554565b94505060406105b58882890161051e565b93505060606105c688828901610554565b92505060806105d788828901610554565b9150509295509295909350565b6105ed816104f5565b82525050565b600060208201905061060860008301846105e4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106335761063261060e565b5b8235905067ffffffffffffffff8111156106505761064f610613565b5b60208301915083600182028301111561066c5761066b610618565b5b9250929050565b600080600080600080600060c0888a031215610692576106916104cb565b5b60006106a08a828b0161051e565b97505060206106b18a828b01610554565b96505060406106c28a828b0161051e565b95505060606106d38a828b01610554565b94505060806106e48a828b01610554565b93505060a088013567ffffffffffffffff811115610705576107046104d0565b5b6107118a828b0161061d565b925092505092959891949750929550565b600082825260208201905092915050565b7f496e76616c696420696d706c656d656e746174696f6e00000000000000000000600082015250565b6000610769601683610722565b915061077482610733565b602082019050919050565b600060208201905081810360008301526107988161075c565b9050919050565b7f496e76616c696420746f6b656e20636f6e747261637400000000000000000000600082015250565b60006107d5601683610722565b91506107e08261079f565b602082019050919050565b60006020820190508181036000830152610804816107c8565b9050919050565b600081905092915050565b82818337600083830152505050565b6000610831838561080b565b935061083e838584610816565b82840190509392505050565b6000610857828486610825565b91508190509392505050565b61086c81610533565b82525050565b60006080820190506108876000830187610863565b6108946020830186610863565b6108a160408301856105e4565b6108ae6060830184610863565b95945050505050565b600081905092915050565b7f3d60ad80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b60006108f86014836108b7565b9150610903826108c2565b601482019050919050565b60008160601b9050919050565b60006109268261090e565b9050919050565b60006109388261091b565b9050919050565b61095061094b826104f5565b61092d565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b600061098c600f836108b7565b915061099782610956565b600f82019050919050565b600081519050919050565b60005b838110156109cb5780820151818401526020810190506109b0565b60008484015250505050565b60006109e2826109a2565b6109ec818561080b565b93506109fc8185602086016109ad565b80840191505092915050565b6000610a13826108eb565b9150610a1f828561093f565b601482019150610a2e8261097f565b9150610a3a82846109d7565b91508190509392505050565b6000604082019050610a5b6000830185610863565b610a686020830184610863565b939250505056fea2646970667358221220a03d6a4d1236ccc2aa6cccecc8a56e97fc1cf5381281da6fd6a91ad012dd76f464736f6c634300081b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006b575b600080fd5b61005560048036038101906100509190610569565b61009b565b60405161006291906105f3565b60405180910390f35b61008560048036038101906100809190610673565b6100cd565b60405161009291906105f3565b60405180910390f35b6000806100ab878787878761030e565b8051906020012090506100c18360001b82610362565b91505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff160361013d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101349061077f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036101ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a3906107eb565b60405180910390fd5b60006101bb898989898961030e565b90506101d18560001b8280519060200120610362565b915060008273ffffffffffffffffffffffffffffffffffffffff163b11156101f95750610303565b61020860008660001b83610377565b915060008484905011156102be5760008273ffffffffffffffffffffffffffffffffffffffff16858560405161023f92919061084a565b6000604051808303816000865af19150503d806000811461027c576040519150601f19603f3d011682016040523d82523d6000602084013e610281565b606091505b50509050806102bc576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff167f805996f252884581e2f74cf3d2b03564d5ec26ccc90850ae12653dc1b72d1fa260405160405180910390a2505b979650505050505050565b606085828686866040516020016103289493929190610872565b604051602081830303815290604052604051602001610348929190610a08565b604051602081830303815290604052905095945050505050565b600061036f83833061048a565b905092915050565b6000834710156103c05747846040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016103b7929190610a46565b60405180910390fd5b60008251036103fb576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f590503d15198115161561041d576040513d6000823e3d81fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610483576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000604051836040820152846020820152828152600b810160ff815373ffffffffffffffffffffffffffffffffffffffff6055822016925050509392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610500826104d5565b9050919050565b610510816104f5565b811461051b57600080fd5b50565b60008135905061052d81610507565b92915050565b6000819050919050565b61054681610533565b811461055157600080fd5b50565b6000813590506105638161053d565b92915050565b600080600080600060a08688031215610585576105846104cb565b5b60006105938882890161051e565b95505060206105a488828901610554565b94505060406105b58882890161051e565b93505060606105c688828901610554565b92505060806105d788828901610554565b9150509295509295909350565b6105ed816104f5565b82525050565b600060208201905061060860008301846105e4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106335761063261060e565b5b8235905067ffffffffffffffff8111156106505761064f610613565b5b60208301915083600182028301111561066c5761066b610618565b5b9250929050565b600080600080600080600060c0888a031215610692576106916104cb565b5b60006106a08a828b0161051e565b97505060206106b18a828b01610554565b96505060406106c28a828b0161051e565b95505060606106d38a828b01610554565b94505060806106e48a828b01610554565b93505060a088013567ffffffffffffffff811115610705576107046104d0565b5b6107118a828b0161061d565b925092505092959891949750929550565b600082825260208201905092915050565b7f496e76616c696420696d706c656d656e746174696f6e00000000000000000000600082015250565b6000610769601683610722565b915061077482610733565b602082019050919050565b600060208201905081810360008301526107988161075c565b9050919050565b7f496e76616c696420746f6b656e20636f6e747261637400000000000000000000600082015250565b60006107d5601683610722565b91506107e08261079f565b602082019050919050565b60006020820190508181036000830152610804816107c8565b9050919050565b600081905092915050565b82818337600083830152505050565b6000610831838561080b565b935061083e838584610816565b82840190509392505050565b6000610857828486610825565b91508190509392505050565b61086c81610533565b82525050565b60006080820190506108876000830187610863565b6108946020830186610863565b6108a160408301856105e4565b6108ae6060830184610863565b95945050505050565b600081905092915050565b7f3d60ad80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b60006108f86014836108b7565b9150610903826108c2565b601482019050919050565b60008160601b9050919050565b60006109268261090e565b9050919050565b60006109388261091b565b9050919050565b61095061094b826104f5565b61092d565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b600061098c600f836108b7565b915061099782610956565b600f82019050919050565b600081519050919050565b60005b838110156109cb5780820151818401526020810190506109b0565b60008484015250505050565b60006109e2826109a2565b6109ec818561080b565b93506109fc8185602086016109ad565b80840191505092915050565b6000610a13826108eb565b9150610a1f828561093f565b601482019150610a2e8261097f565b9150610a3a82846109d7565b91508190509392505050565b6000604082019050610a5b6000830185610863565b610a686020830184610863565b939250505056fea2646970667358221220a03d6a4d1236ccc2aa6cccecc8a56e97fc1cf5381281da6fd6a91ad012dd76f464736f6c634300081b0033",
  "devdoc": {
    "errors": {
      "Create2EmptyBytecode()": [
        {
          "details": "There's no code to deploy."
        }
      ],
      "FailedDeployment()": [
        {
          "details": "The deployment failed."
        }
      ],
      "InsufficientBalance(uint256,uint256)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}